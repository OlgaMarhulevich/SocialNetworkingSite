{"version":3,"sources":["components/Footer/Footer.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Dialogs/DialogsMessages/Message/Message.module.css","reportWebVitals.ts","components/Footer/Footer.tsx","components/Navbar/FriendsPanel/Friend/Friend.tsx","assets/images/unknown.png","components/Navbar/FriendsPanel/FriendsPanel.tsx","components/Navbar/FriendsPanel/FriendsPanelContainer.tsx","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/DialogsMessages/Message/Message.tsx","components/Dialogs/DialogsMessages/DialogsMessages.tsx","components/Dialogs/Dialogs.tsx","redux/dialogs-reducer.ts","hoc/withAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","entities/entities.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","redux/profile-reducer.ts","api/api.tsx","redux/users-reducer.ts","assets/images/loading.gif","common/preloader/Preloader.tsx","components/Profile/ProfileContainer.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx","components/Header/Header.tsx","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","App.tsx","redux/friends-reducer.ts","redux/redux-store.ts","index.tsx","components/Navbar/Navbar.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Dialogs/DialogsMessages/DialogsMessages.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/Profile.module.css","components/Navbar/FriendsPanel/Friend/Friend.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","App.module.css","components/Navbar/FriendsPanel/FriendsPanel.module.css","common/preloader/Preloader.module.css","components/Header/Header.module.css","components/Users/Users.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Footer","href","Friend","props","className","s","friend","alt","name","src","img","FriendsPanel","friendsPanel","friends","map","length","slice","photos","small","unknown","id","title","FriendsPanelContainer","React","Component","connect","Navbar","navbar","to","activeClassName","active","other","News","Music","Settings","DialogItem","dialog","Message","messageComponentMe","messageComponent","messageBabbleMe","messageBabble","tailMe","tail","messageBoxMe","messageBox","message","time","DialogsMessages","messagesElements","messages","index","dialogsMessages","DialogReduxForm","onSubmit","values","addMessage","newMessage","reduxForm","form","handleSubmit","sendBox","Field","placeholder","component","textarea","button","Dialogs","dialogsElements","dialogs","dialogPage","dialogsColumn","messagesColumn","path","render","prop","dialogID","match","params","find","d","changeNewMessage","ADD_MESSAGE","initialDialogState","dialogsReducer","state","action","type","trim","mapStateToProps","isAuth","auth","withAuthRedirect","restProps","compose","statuses","ProfileInfo","editMode","status","onEditMode","setState","offEditMode","updateProfileStatus","this","inputBox","value","autoFocus","input","onBlur","onChange","e","currentTarget","onKeyPress","key","onDoubleClick","profileBox","avatar","profile","large","fullName","profileInfo","div","ProfileStatus","profileStatus","description","lookingForAJob","aboutMe","Post","post","postContent","likesCount","onClick","addLike","like","removePost","MyPosts","postsElements","posts","PostReduxForm","addPost","buttons","Profile","ACTIONS_PROFILE_TYPE","imageBox","arrow","arrowRight","axiosInstance","axios","create","baseURL","withCredentials","headers","usersAPI","pageSize","activePage","get","response","data","userId","delete","profileAPI","userID","put","authAPI","ACTIONS_USER_REDUCER","initialProfileState","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJobDescription","isFetching","setProfile","SET_PROFILE","setStatus","SET_STATUS","setFetching","fetching","TOGGLE_FETCHING","setProfileStatus","SET_PROFILE_STATUS","profileReducer","ADD_POST","newPost","REMOVE_POST","confirm","filter","ADD_LIKE","Preloader","loadingBox","loadingGif","preloader","ProfileContainer","getProfile","getProfileStatus","dispatch","resultCode","withRouter","initialUsersState","users","totalUsersCount","isLoading","isFollowing","changeFollowedStatus","isFollow","CHANGE_FOLLOWED_STATUS","setLoading","loading","SET_LOADING","setFollowing","following","SET_FOLLOWING","usersReducer","u","followed","SET_USERS","CHANGE_PAGE","page","SET_USERS_COUNT","usersCount","Users","pagesCount","Math","ceil","pages","i","push","titlePage","container","style","margin","friendBox","imgBox","unfollow","follow","followBtn","red","green","includes","disabled","some","infoBox","infoBottom","p","onClickPage","UsersContainer","changePage","getUsers","totalCount","items","Header","ACTIONS_AUTH_REDUCER","logo","greeting","login","initialAuthState","email","setAuthUserData","SET_USER_DATA","authReducer","HeaderContainer","Login","LoginReduxForm","formData","console","log","App","ACTIONS_FRIENDS_REDUCER","appWrapper","content","DialogsContainer","initialFriendsState","friendsReducer","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","getState","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24a8900c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Footer_logo__3ACxa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileBox\":\"ProfileInfo_profileBox__1v93W\",\"profileInfo\":\"ProfileInfo_profileInfo__2IJgv\",\"avatar\":\"ProfileInfo_avatar__3xuFq\",\"div\":\"ProfileInfo_div__3At7N\",\"title\":\"ProfileInfo_title__2t6A6\",\"name\":\"ProfileInfo_name__1VvQB\",\"description\":\"ProfileInfo_description__2yWda\",\"status\":\"ProfileInfo_status__2G3BZ\",\"inputBox\":\"ProfileInfo_inputBox__2oJBN\",\"input\":\"ProfileInfo_input__f3lao\",\"saveStatusBtn\":\"ProfileInfo_saveStatusBtn__2vNYc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageComponent\":\"Message_messageComponent__2_iBn\",\"messageComponentMe\":\"Message_messageComponentMe__1w1Wo\",\"img\":\"Message_img__3-T8Q\",\"time\":\"Message_time__oGKVI\",\"messageBabble\":\"Message_messageBabble__2EWNh\",\"messageBabbleMe\":\"Message_messageBabbleMe__1DfI-\",\"tail\":\"Message_tail__3RUok\",\"tailMe\":\"Message_tailMe__m4hsZ\",\"messageBox\":\"Message_messageBox__1ynL0\",\"messageBoxMe\":\"Message_messageBoxMe__3KXIW\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport './Footer.module.css';\n\nfunction Footer() {\n    return (\n        <footer>&copy; My first site on &nbsp;<a href='#'>React</a></footer>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport s from './Friend.module.css';\n\ntype FriendPropsType = {\n    name: string,\n    img: string\n}\n\nfunction Friend(props: FriendPropsType) {\n    return (\n        <div className={s.friend}>\n            <img alt={props.name} src={props.img} className={s.img}/>\n            <p className={s.name}>{props.name}</p>\n        </div>\n    )\n}\n\nexport default Friend;","export default __webpack_public_path__ + \"static/media/unknown.dc967cb3.png\";","import React from 'react';\nimport s from './FriendsPanel.module.css';\nimport Friend from \"./Friend/Friend\";\nimport {UserType} from \"../../../entities/entities\";\nimport unknown from '../../../assets/images/unknown.png'\n\ntype FriendsPanelPropsType = {\n    friends: Array<UserType>\n}\n\nfunction FriendsPanel(props: FriendsPanelPropsType) {\n\n    let friendsPanel = props.friends.map(friend =>\n                <Friend\n                    key={friend.id}\n                    name={friend.name.length > 7 ? (friend.name.slice(0, 6) + '...') : friend.name}\n                    img={friend.photos.small || unknown}/>)\n\n    return (\n        <div>\n            <p className={s.title}>Friends</p>\n            <div className={s.friends}>\n                {friendsPanel}\n            </div>\n        </div>\n    )\n}\n\nexport default FriendsPanel;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport FriendsPanel from \"./FriendsPanel\";\n\n//props\ninterface IFriendsPropsType {\n}\ninterface IFriendsState {\n}\n\nclass FriendsPanelContainer extends React.Component<IFriendsPropsType, IFriendsState> {\n\n    componentDidMount() {\n    }\n\n    render() {\n        return <FriendsPanel friends={[]}/>\n    }\n}\n\nexport default connect(() => {\n    return {}\n}, {})(FriendsPanelContainer)\n\n","import React from 'react';\nimport s from './Navbar.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport FriendsPanelContainer from \"./FriendsPanel/FriendsPanelContainer\";\n\nfunction Navbar() {\n    return (\n        <aside>\n            <nav className={s.navbar}>\n                <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\n                <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\n                <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\n                <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\n                <NavLink to=\"/users\" activeClassName={s.active} className={s.other}>Find users</NavLink>\n                <NavLink to=\"/settings\" activeClassName={s.active} className={s.other}>Settings</NavLink>\n                <FriendsPanelContainer />\n            </nav>\n        </aside>\n    )\n}\n\nexport default Navbar;","import React from \"react\";\nimport s from './News.module.css';\n\nfunction News() {\n    return (\n        <div>\n            News\n        </div>\n    )\n}\n\nexport default News;\n","import React from \"react\";\nimport s from './Music.module.css';\n\nfunction Music() {\n    return (\n        <div>\n            Music\n        </div>\n    )\n}\n\nexport default Music;\n","import React from \"react\";\nimport s from './Settings.module.css';\n\nfunction Settings() {\n    return (\n        <div>\n            Settings\n        </div>\n    )\n}\n\nexport default Settings;\n","import React from \"react\";\nimport s from './DialogItem.module.css';\nimport {NavLink} from \"react-router-dom\";\n\ntype DialogItemPropsType = {\n    id: number,\n    name: string,\n    img: string\n}\n\nfunction DialogItem(props: DialogItemPropsType) {\n    return (\n        <div>\n            <NavLink to={'/dialogs/' + props.id} className={s.dialog} activeClassName={s.active}>\n                <img className={s.img} src={props.img} alt={props.name}/>\n                {props.name}\n            </NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem;\n","import React from \"react\";\nimport s from './Message.module.css';\n\ntype MessagePropsType = {\n    message: string,\n    name: string,\n    img: string\n}\n\nfunction Message(props: MessagePropsType) {\n\n    const messageComponentFrom = () => {\n        return (props.name === 'Me') ? s.messageComponentMe : s.messageComponent\n    }\n    const messageBabbleFrom = () => {\n        return (props.name === 'Me') ? s.messageBabbleMe : s.messageBabble\n    }\n    const tailFrom = () => {\n        return (props.name === 'Me') ? s.tailMe : s.tail\n    }\n\n    const messageBoxFrom = () => {\n        return (props.name === 'Me') ? s.messageBoxMe : s.messageBox\n    }\n\n\n    return (\n        <div className={messageComponentFrom()}>\n            <img className={s.img} src={props.img} alt=\"avatar\"/>\n            <div className={messageBabbleFrom()}>\n                <div className={tailFrom()}/>\n                <div className={messageBoxFrom()}>\n                    <div className={s.message}>{props.message}</div>\n                    <div className={s.time}>22:00</div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message;\n","import s from \"../DialogsMessages/DialogsMessages.module.css\";\nimport React from \"react\";\nimport Message from \"./Message/Message\";\nimport {DialogType} from \"../../../entities/entities\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\n\ntype DialogsMessagesPropsType = {\n    dialog: DialogType\n    addMessage: (id: number, newMessage: string) => void\n    changeNewMessage: (newMessage: string, id: number) => void\n}\n\nexport const DialogsMessages = (props: DialogsMessagesPropsType) => {\n\n    const messagesElements = props.dialog.messages.map((message, index) =>\n        <Message key={index} name={message.name} img={message.img} message={message.message}/>)\n\n    const addNewMessage = (values: any) => {\n        props.addMessage(props.dialog.id, values.newMessage)\n    }\n\n    return (\n        <div className={s.dialogsMessages}>\n            <div className={s.messages}>\n                { messagesElements}\n            </div>\n            <DialogReduxForm onSubmit={addNewMessage}/>\n        </div>\n\n    )\n}\n\ntype FormDataType = {\n    newMessage: string\n}\nconst DialogForm: React.FC<InjectedFormProps<FormDataType>> = (props) =>  {\n    return (\n        <form onSubmit={props.handleSubmit} className={s.sendBox}>\n            <div>\n                <Field placeholder={'Text your message...'}\n                       component={'textarea'}\n                       name={'newMessage'}\n                       className={s.textarea}/>\n            </div>\n            <div>\n                <button className={s.button}>Send</button>\n            </div>\n        </form>\n    )\n}\n\nconst DialogReduxForm = reduxForm<FormDataType>({form: 'dialog'})(DialogForm);","import React from \"react\";\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport {DialogsMessages} from \"./DialogsMessages/DialogsMessages\";\nimport {Route} from \"react-router\";\nimport {DialogType} from \"../../entities/entities\";\n\ntype DialogsPropsType = {\n    dialogs: DialogType[]\n    addMessage: (id: number, newMessage: string) => void\n    changeNewMessage: (newMessage: string, id: number) => void\n    isAuth: boolean\n}\n\nfunction Dialogs(props: DialogsPropsType) {\n\n    const dialogsElements = props.dialogs.map(dialog =>\n        <DialogItem key={dialog.id} img={dialog.img} id={dialog.id} name={dialog.name}/>)\n\n    return (\n        <div className={s.dialogPage}>\n            <div className={s.dialogsColumn}>\n                {dialogsElements}\n            </div>\n\n            <div className={s.messagesColumn}>\n\n                <Route path='/dialogs/:dialogID' render={(prop) => {\n                    const dialogID = prop.match.params.dialogID;\n                    const dialog = props.dialogs.find(d => d.id === +dialogID);\n                    return (\n                        dialog && <DialogsMessages\n                            dialog={dialog}\n                            addMessage={(id, newMessage) => props.addMessage(id, newMessage)}\n                            changeNewMessage={(newMessage, id) => props.changeNewMessage(newMessage, id)}/>\n                    )\n                }\n                }/>\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs;","import {DialogType} from \"../entities/entities\";\n\nconst ADD_MESSAGE = 'ADD-MESSAGE';\n\nexport type initialDialogsStateType = {\n    dialogs: Array<DialogType>\n}\nlet initialDialogState: initialDialogsStateType = {\n    dialogs: [\n        {\n            id: 1,\n            name: 'Nick',\n            img: 'https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg',\n            messages: [\n                {\n                    message: 'Hi!',\n                    name: 'Nick',\n                    img: 'https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg'\n                },\n                {\n                    message: 'How are you?',\n                    name: 'Nick',\n                    img: 'https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg'\n                },\n                {\n                    message: 'Yo',\n                    name: 'Me',\n                    img: 'https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-58-696x696.jpg'\n                },\n                {\n                    message: \"I'm fine! How're you?\",\n                    name: 'Me',\n                    img: 'https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-58-696x696.jpg'\n                },\n            ],\n        },\n        {\n            id: 2, name: 'Jhon', img: 'https://vraki.net/sites/default/files/inline/images/30_55.jpg',\n            messages: [\n                {\n                    message: 'Hi!',\n                    name: 'Jhon',\n                    img: 'https://vraki.net/sites/default/files/inline/images/30_55.jpg'\n                }],\n        },\n        {\n            id: 3, name: 'Anna', img: 'https://pixelbox.ru/wp-content/uploads/2021/04/ava-mult-vk-78.jpg',\n            messages: [\n                {\n                    message: 'Hi!',\n                    name: 'Anna',\n                    img: 'https://pixelbox.ru/wp-content/uploads/2021/04/ava-mult-vk-78.jpg'\n                }],\n        },\n    ]\n}\n\nconst dialogsReducer = (state = initialDialogState, action: ActionDialogsReducerType): initialDialogsStateType => {\n\n    switch (action.type) {\n        case ADD_MESSAGE: {\n            if (!action.newMessage.trim()) {\n                return {...state}\n            }\n            const newMessage = {\n                message: action.newMessage,\n                name: 'Me',\n                img: 'https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-58-696x696.jpg'\n            }\n            return {\n                ...state,\n                dialogs: state.dialogs\n                    .map(d => d.id === action.id ? {...d, messages: [...d.messages, newMessage]} : d)\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n//Action creators\nexport type ActionDialogsReducerType = addMessageActionCreatorType\n\ntype addMessageActionCreatorType = { type: typeof ADD_MESSAGE, id: number, newMessage: string }\n\nexport const addMessage = (id: number, newMessage: string): addMessageActionCreatorType => ({type: ADD_MESSAGE, id, newMessage});\n\nexport default dialogsReducer;","import React, {Component} from \"react\";\nimport {Redirect} from \"react-router\";\nimport {StateType} from \"../redux/redux-store\";\nimport {connect} from \"react-redux\";\n\ntype mapStateToPropsType = { isAuth: boolean }\nconst mapStateToProps = (state: StateType): mapStateToPropsType => ({isAuth: state.auth.isAuth})\n\nexport function withAuthRedirect <T>(Component: React.ComponentType<T>) {\n\n    function AuthRedirectComponent (props: mapStateToPropsType) {\n        let {isAuth, ...restProps} = props\n        if (!isAuth) return <Redirect to={'/login'}/>\n        return <Component {...restProps as T}/>\n    }\n\n    const ConnectedAuthRedirectComponent = connect(mapStateToProps, {}) (AuthRedirectComponent)\n\n    return ConnectedAuthRedirectComponent\n}","import React from \"react\";\nimport Dialogs from \"./Dialogs\";\nimport {StateType} from \"../../redux/redux-store\";\nimport {connect} from \"react-redux\";\nimport {addMessage} from \"../../redux/dialogs-reducer\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nconst mapStateToProps = (state: StateType) => {\n    return {\n        dialogs: state.dialogs.dialogs,\n    }\n}\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, {\n        addMessage,\n    }),\n    withAuthRedirect\n)(Dialogs)\n","export type PostType = {\n    id: number\n    message: string\n    likesCount: number\n}\n\nexport type DialogType = {\n    id: number\n    name: string\n    img: string\n    messages: Array<MessageType>\n}\nexport type MessageType = {\n    message: string\n    name: string\n    img: string\n}\n\nexport type UserType = {\n    name: string\n    id: number\n    uniqueUrlName: string\n    photos: {\n        small: string\n        large: string\n    }\n    status: string\n    followed: boolean\n}\n\nexport type ItemsType = {\n    items: UserType[]\n    totalCount: number\n    error: string\n}\n\nexport type AuthDataType = {\n    resultCode: number\n    messages: Array<string>\n    data: {\n        id: number\n        email: string\n        login: string\n    }\n}\n\nexport type ProfileStatusDataType = {\n    resultCode: number\n    messages: Array<string>\n    data: {}\n}\n\nexport type ProfileType = {\n    aboutMe: string\n    contacts: {\n        facebook: string\n        website: string\n        vk: string\n        twitter: string\n        instagram: string\n        youtube: string\n        github: string\n        mainLink: string\n    },\n    lookingForAJob: boolean\n    lookingForAJobDescription: string\n    fullName: string\n    userId: number\n    photos: {\n        small: string\n        large: string\n    }\n}\n\nexport type FollowResponse = {\n    resultCode: number\n    messages: []\n    data: {}\n}\n\nexport const statuses = {\n    NOT_INITIALIZED: 'NOT-INITIALIZED',\n    ERRORS: 'ERRORS',\n    IN_PROGRESS: 'IN-PROGRESS',\n    SUCCESS: 'SUCCESS',\n}","import React from 'react';\nimport s from './ProfileInfo.module.css';\n\ntype ProfileStatusPropsType = {\n    status: string\n    updateProfileStatus: (status: string) => void\n}\n\nclass ProfileInfo extends React.Component<ProfileStatusPropsType> {\n\n    state = {\n        editMode: false,\n        status: this.props.status\n    }\n\n    onEditMode = () => {\n        this.setState({\n            editMode: true\n        })\n    }\n    offEditMode = () => {\n        this.setState({\n            editMode: false\n        })\n        this.props.updateProfileStatus(this.state.status)\n    }\n\n    // componentDidUpdate(prevProps: Readonly<ProfileStatusPropsType>, prevState: Readonly<{}>, snapshot?: any) {\n    //     if (prevProps.status !== this.state.status) {\n    //         this.setState({\n    //             status: this.props.status\n    //         })\n    //     }\n    // }\n\n    render() {\n        return (<>\n            {this.state.editMode ?\n                <div className={s.inputBox}>\n                    <input type='text'\n                           value={this.state.status}\n                           autoFocus={true}\n                           className={s.input}\n                           onBlur={this.offEditMode}\n                           onChange={(e) =>\n                              this.setState({status: e.currentTarget.value})\n                           }\n                           onKeyPress={(e) => {\n                               if (e.key === 'Enter') this.props.updateProfileStatus(e.currentTarget.value) }}/>\n                    {/*<button*/}\n                    {/*    className={s.saveStatusBtn}*/}\n                    {/*    onClick={() => this.props.updateProfileStatus(this.state.status)}>Save status</button>*/}\n                </div>\n                :\n                <div className={s.status} onDoubleClick={this.onEditMode}>\n                    {this.props.status}\n                </div>\n            }\n        </>)\n    }\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport {ProfileType} from \"../../../entities/entities\";\nimport unknown from '../../../assets/images/unknown.png'\nimport ProfileStatus from './ProfileStatus';\n\ntype ProfileInfoPropsType = {\n    profile: ProfileType\n    profileStatus: string\n    updateProfileStatus: (status: string) => void\n}\n\nfunction ProfileInfo(props: ProfileInfoPropsType) {\n    return (\n        <div className={s.profileBox}>\n            <img className={s.avatar} src={props.profile.photos.large || unknown} alt={props.profile.fullName}/>\n            <div className={s.profileInfo}>\n                <div className={s.div}>\n                    <p className={s.name}>{props.profile.fullName}</p>\n                </div>\n                <div className={s.div}>\n                    <ProfileStatus\n                        status={props.profileStatus || 'Nothing yet...'}\n                        updateProfileStatus={props.updateProfileStatus}/>\n                </div>\n                <div className={s.div}>\n                    <p className={s.title}>I'm looking a job: </p>\n                    <p className={s.description}>{props.profile.lookingForAJob ? 'yes' : 'no'}</p>\n                </div>\n                <div>\n                    <p className={s.title}>About me: </p>\n                    <p className={s.description}>{props.profile.aboutMe || 'Nothing yet...'}</p>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport s from './Post.module.css';\n\n\ntype PostPropsType = {\n    id: number\n    message: string\n    likesCount: number\n    removePost: (id: number) => void\n    addLike: (id: number) => void\n}\n\nfunction Post (props: PostPropsType) {\n\n    const removePostCallback = () => {\n        props.removePost(props.id)\n    }\n    const addLikeCallback = () => {\n        props.addLike(props.id)\n    }\n\n    return (\n        <div className={s.post}>\n            <div className={s.postContent}>\n                <img className={s.avatar}\n                    src='https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-58-696x696.jpg' alt='Avatar'/>\n                <div className={s.message}>{props.message}</div>\n            </div>\n\n            <div>\n                <span className={s.likesCount}>{props.likesCount} likes</span>\n                <button onClick={addLikeCallback} className={s.like}>Like!</button>\n                <button onClick={removePostCallback} className={s.button}>Remove post</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Post;","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\nimport {PostType} from \"../../../entities/entities\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\n\ntype MyPostsPropsType = {\n    posts: Array<PostType>\n    addPost: (newMessage: string) => void\n    removePost: (id: number) => void\n    addLike: (id: number) => void\n}\n\nfunction MyPosts(props: MyPostsPropsType) {\n\n    const postsElements =\n        props.posts.map(post =>\n           <Post key={post.id}\n                 id={post.id}\n                 message={post.message}\n                 likesCount={post.likesCount}\n                 removePost={(id) => props.removePost(id)}\n                 addLike={(id) => props.addLike(id)}/>)\n\n    return (\n        <div>\n            <p className={s.title}>My Posts</p>\n            <div>\n                <PostReduxForm onSubmit={(values: any) => props.addPost(values.newMessage)}/>\n            </div>\n            <div className={s.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n}\n\nexport default MyPosts;\n\n\ntype FormDataType = {\n    newMessage: string\n}\nconst PostForm: React.FC<InjectedFormProps<FormDataType>> = (props) =>  {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field placeholder={'Your message...'}\n                       component={'textarea'}\n                       name={'newMessage'}\n                       className={s.textarea}/>\n            </div>\n            <div className={s.buttons}>\n                <button className={s.button}>Add post</button>\n            </div>\n        </form>\n    )\n}\n\nconst PostReduxForm = reduxForm<FormDataType>({form: 'post'})(PostForm);","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport s from './Profile.module.css'\nimport MyPosts from './MyPosts/MyPosts';\nimport {PostType, ProfileType} from \"../../entities/entities\";\n\ntype ProfilePropsType = {\n    profile: ProfileType\n    posts: Array<PostType>\n    addPost: () => void\n    removePost: (id: number) => void\n    addLike: (id: number) => void\n    profileStatus: string\n    updateProfileStatus: (status: string) => void\n}\n\nfunction Profile(props: ProfilePropsType) {\n    return (\n        <div>\n            <ProfileInfo\n                profile={props.profile}\n                profileStatus={props.profileStatus}\n                updateProfileStatus={props.updateProfileStatus}/>\n            <div className={s.imageBox}>\n                <img alt={'arrow-left'} src={'https://piaspb.ru/img/new-img/arrows-l.png'} className={s.arrow}/>\n                <img alt={'arrow-right'} src={'https://piaspb.ru/img/new-img/arrows-l.png'} className={`${s.arrow} ${s.arrowRight}`}/>\n            </div>\n            <MyPosts {...props}/>\n        </div>\n    )\n}\n\nexport default Profile;","import {PostType, ProfileType, statuses} from \"../entities/entities\"\nimport {Dispatch} from \"redux\";\nimport {profileAPI} from \"../api/api\";\n\nexport enum ACTIONS_PROFILE_TYPE {\n    ADD_POST = 'ADD-POST',\n    REMOVE_POST = 'REMOVE-POST',\n    ADD_LIKE = 'ADD-LIKE',\n    SET_PROFILE = 'SET-PROFILE',\n    SET_STATUS = 'SONET/PROFILE/SET-STATUS',\n    TOGGLE_FETCHING = 'SONET/PROFILE/TOGGLE-FETCHING',\n    SET_PROFILE_STATUS = 'SET-PROFILE-STATUS',\n}\n\nexport type initialProfileStateType = {\n    profile: ProfileType\n    profileStatus: string\n    posts: Array<PostType>\n    status: string\n    isFetching: boolean\n}\nlet initialProfileState: initialProfileStateType = {\n    profile: {\n        aboutMe: '',\n        contacts: {\n            facebook: '',\n            website: '',\n            vk: '',\n            twitter: '',\n            instagram: '',\n            youtube: '',\n            github: '',\n            mainLink: ''\n        },\n        lookingForAJob: false,\n        lookingForAJobDescription: '',\n        fullName: '',\n        userId: 1,\n        photos: {\n            small: '',\n            large: ''\n        }\n    },\n    profileStatus: '',\n    posts: [\n        {id: 1, message: 'It is my first post!', likesCount: 25},\n        {id: 2, message: 'How are you?', likesCount: 15},\n    ],\n    status: statuses.NOT_INITIALIZED,\n    isFetching: false,\n}\n\nconst profileReducer = (state = initialProfileState, action: ActionProfileReducerType): initialProfileStateType => {\n\n    switch (action.type) {\n        case ACTIONS_PROFILE_TYPE.ADD_POST:\n            if (action.newMessage === '') {\n                return state\n            }\n            const newPost = {\n                id: state.posts.length + 1,\n                message: action.newMessage,\n                likesCount: 0\n            }\n            return {...state, posts: [...state.posts, newPost]}\n        case ACTIONS_PROFILE_TYPE.REMOVE_POST:\n            // eslint-disable-next-line no-restricted-globals\n            if (confirm('Delete this post?')) {\n                return {...state, posts: state.posts.filter(post => post.id !== action.id)}\n            }\n            return state\n        case ACTIONS_PROFILE_TYPE.ADD_LIKE:\n            return {...state,\n                posts: state.posts.map(post => post.id === action.id ? {...post, likesCount: ++post.likesCount} : post)}\n        case ACTIONS_PROFILE_TYPE.SET_PROFILE:\n            return {...state, profile: action.profile}\n        case ACTIONS_PROFILE_TYPE.SET_STATUS:\n            return {...state, status: action.status}\n        case ACTIONS_PROFILE_TYPE.TOGGLE_FETCHING:\n            return {...state, isFetching: action.fetching}\n        case ACTIONS_PROFILE_TYPE.SET_PROFILE_STATUS:\n            return {...state, profileStatus: action.profileStatus}\n        default:\n            return state\n    }\n}\n\n//Action type\nexport type ActionProfileReducerType = addPostActionCreatorType\n    | removePostActionCreatorType\n    | addLikeActionCreatorType\n    | setProfileACType\n    | SetStatusACType\n    | FetchingACType\n    | SetProfileStatusACType\n\n//types AC\ntype addPostActionCreatorType = { type: typeof ACTIONS_PROFILE_TYPE.ADD_POST, newMessage: string }\ntype removePostActionCreatorType = { type: typeof ACTIONS_PROFILE_TYPE.REMOVE_POST, id: number }\ntype addLikeActionCreatorType = { type: typeof ACTIONS_PROFILE_TYPE.ADD_LIKE, id: number }\ntype setProfileACType = { type: typeof ACTIONS_PROFILE_TYPE.SET_PROFILE, profile: ProfileType }\ntype SetStatusACType = { status: string, type: typeof ACTIONS_PROFILE_TYPE.SET_STATUS }\ntype FetchingACType = { fetching: boolean, type: typeof ACTIONS_PROFILE_TYPE.TOGGLE_FETCHING }\ntype SetProfileStatusACType = { profileStatus: string, type: typeof ACTIONS_PROFILE_TYPE.SET_PROFILE_STATUS }\n\n//AC\nexport const addPost = (newMessage: string): addPostActionCreatorType => ({type: ACTIONS_PROFILE_TYPE.ADD_POST, newMessage})\nexport const removePost = (id: number): removePostActionCreatorType => ({type: ACTIONS_PROFILE_TYPE.REMOVE_POST, id})\nexport const addLike = (id: number): addLikeActionCreatorType => ({type: ACTIONS_PROFILE_TYPE.ADD_LIKE, id})\nexport const setProfile = (profile: ProfileType): setProfileACType => ({type: ACTIONS_PROFILE_TYPE.SET_PROFILE, profile})\nexport const setStatus = (status: string): SetStatusACType => ({status, type: ACTIONS_PROFILE_TYPE.SET_STATUS})\nexport const setFetching = (fetching: boolean): FetchingACType => ({fetching, type: ACTIONS_PROFILE_TYPE.TOGGLE_FETCHING})\nexport const setProfileStatus = (profileStatus: string): SetProfileStatusACType => ({profileStatus, type: ACTIONS_PROFILE_TYPE.SET_PROFILE_STATUS})\n\n//thunk creators\nexport const getProfile = (userID: string) => (dispatch: Dispatch<ActionProfileReducerType>) => {\n    dispatch(setStatus(statuses.IN_PROGRESS))\n    dispatch(setFetching(false))\n    profileAPI.getProfile(userID)\n        .then((data) => {\n            dispatch(setProfile(data))\n            dispatch(setStatus(statuses.SUCCESS))\n            dispatch(setFetching(true))\n        })\n}\nexport const getProfileStatus = (userID: string) => (dispatch: Dispatch<ActionProfileReducerType>) => {\n    dispatch(setStatus(statuses.IN_PROGRESS))\n    dispatch(setFetching(false))\n    profileAPI.getProfileStatus(userID)\n        .then((status) => {\n            dispatch(setProfileStatus(status))\n            dispatch(setStatus(statuses.SUCCESS))\n            dispatch(setFetching(true))\n        })\n}\nexport const updateProfileStatus = (profileStatus: string) => (dispatch: Dispatch<ActionProfileReducerType>) => {\n    dispatch(setStatus(statuses.IN_PROGRESS))\n    dispatch(setFetching(false))\n    profileAPI.updateProfileStatus(profileStatus)\n        .then((data) => {\n            if (data.resultCode === 0) {\n                dispatch(setProfileStatus(profileStatus))\n                dispatch(setStatus(statuses.SUCCESS))\n                dispatch(setFetching(true))\n            }\n        })\n}\n\nexport default profileReducer\n","import axios, {AxiosResponse} from \"axios\";\nimport {AuthDataType, FollowResponse, ItemsType, ProfileStatusDataType, ProfileType} from \"../entities/entities\";\n\nexport const axiosInstance = axios.create({\n    baseURL: 'https://social-network.samuraijs.com/api/1.0',\n    withCredentials: true,\n    headers: {\n        \"API-KEY\": \"ff96c8c6-9a67-45a6-8e7e-64655709b2bd\"\n    },\n})\n\nexport const usersAPI = {\n    getUsers: (pageSize: number, activePage: number) => {\n        return axiosInstance.get(`users?count=${pageSize}&page=${activePage}`)\n            .then((response: AxiosResponse<ItemsType>) => response.data)\n    },\n    unfollow: (userId: number) => {\n        return axiosInstance.delete(`follow/${userId}`)\n            .then((response: AxiosResponse<FollowResponse>) => response.data)\n    },\n    follow: (userId: number) => {\n        return axiosInstance.post(`follow/${userId}`)\n            .then((response: AxiosResponse<FollowResponse>) => response.data)\n    },\n}\n\nexport const profileAPI = {\n    getProfile: (userID: string) => {\n        return axiosInstance.get(`profile/${userID}`)\n            .then((response: AxiosResponse<ProfileType>) => response.data)\n    },\n    getProfileStatus: (userID: string) => {\n        return axiosInstance.get(`profile/status/${userID}`)\n            .then((response: AxiosResponse<string>) => response.data)\n    },\n    updateProfileStatus: (profileStatus: string) => {\n        return axiosInstance.put('/profile/status', { status: profileStatus })\n            .then((response: AxiosResponse<ProfileStatusDataType>) => response.data)\n    }\n}\n\nexport const authAPI = {\n    getAuth: () => {\n        return axiosInstance.get('auth/me')\n            .then((response: AxiosResponse<AuthDataType>) => response.data)\n    },\n}\n\n\n\n","import {statuses, UserType} from \"../entities/entities\";\nimport {usersAPI} from \"../api/api\";\nimport {Dispatch} from \"redux\";\n\n//constants\nenum ACTIONS_USER_REDUCER {\n    CHANGE_FOLLOWED_STATUS = 'CHANGE-FOLLOWED-STATUS',\n    SET_USERS = 'SONET/USERS/SET-USERS',  // уникализируем константу, чтобы избежать совпадений\n    SET_STATUS = 'SONET/USERS/SET-STATUS',\n    CHANGE_PAGE = 'SONET/USERS/CHANGE-PAGE',\n    SET_USERS_COUNT = 'SONET/USERS/SET-USERS-COUNT',\n    SET_LOADING = 'SONET/USERS/SET-LOADING',\n    SET_FOLLOWING = 'SONET/USERS/SET-FOLLOWING',\n}\n\n//initial state\nexport type initialUsersStateType = {\n    users: Array<UserType>\n    status: string\n    pageSize: number\n    totalUsersCount: number\n    activePage: number\n    isLoading: boolean\n    isFollowing: number[]\n}\n\nlet initialUsersState: initialUsersStateType = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    activePage: 1,\n    isLoading: true,\n    isFollowing: [],\n    status: statuses.NOT_INITIALIZED,\n}\n\n//reducer\nconst usersReducer = (state = initialUsersState, action: ActionUsersReducerType): initialUsersStateType => {\n    switch (action.type) {\n        case ACTIONS_USER_REDUCER.CHANGE_FOLLOWED_STATUS:\n            return {\n                ...state,\n                users: [...state.users.map(u => u.id === action.userID ? {...u, followed: action.isFollow} : u)]\n            }\n        case ACTIONS_USER_REDUCER.SET_USERS:\n            return {...state, users: [...action.users]}\n        case ACTIONS_USER_REDUCER.SET_STATUS:\n            return {...state, status: action.status}\n        case ACTIONS_USER_REDUCER.CHANGE_PAGE:\n            return {...state, activePage: action.page}\n        case ACTIONS_USER_REDUCER.SET_USERS_COUNT:\n            return {...state, totalUsersCount: action.usersCount}\n        case ACTIONS_USER_REDUCER.SET_LOADING:\n            return {...state, isLoading: action.loading}\n        case ACTIONS_USER_REDUCER.SET_FOLLOWING:\n            return {\n                ...state,\n                isFollowing: action.following ? [...state.isFollowing, action.userId]\n                    : state.isFollowing.filter(u => u !== action.userId)\n            }\n        default:\n            return state\n    }\n}\n\n//action types\nexport type ActionUsersReducerType = ChangeFollowedStatusACType\n    | SetUsersACType\n    | SetStatusACType\n    | ChangePageACType\n    | SetUsersCountACType\n    | LoadingACType\n    | FollowingACType\n\ntype ChangeFollowedStatusACType = { userID: number, isFollow: boolean, type: typeof ACTIONS_USER_REDUCER.CHANGE_FOLLOWED_STATUS }\ntype SetUsersACType = { users: UserType[], type: typeof ACTIONS_USER_REDUCER.SET_USERS }\ntype SetStatusACType = { status: string, type: typeof ACTIONS_USER_REDUCER.SET_STATUS }\ntype ChangePageACType = { page: number, type: typeof ACTIONS_USER_REDUCER.CHANGE_PAGE }\ntype SetUsersCountACType = { usersCount: number, type: typeof ACTIONS_USER_REDUCER.SET_USERS_COUNT }\ntype LoadingACType = { loading: boolean, type: typeof ACTIONS_USER_REDUCER.SET_LOADING }\ntype FollowingACType = { following: boolean, userId: number, type: typeof ACTIONS_USER_REDUCER.SET_FOLLOWING }\n\n//action creators\nexport const changeFollowedStatus = (userID: number, isFollow: boolean): ChangeFollowedStatusACType => {\n    return {userID, isFollow, type: ACTIONS_USER_REDUCER.CHANGE_FOLLOWED_STATUS}\n}\nexport const setUsers = (users: UserType[]): SetUsersACType => ({users, type: ACTIONS_USER_REDUCER.SET_USERS})\nexport const setStatus = (status: string): SetStatusACType => ({status, type: ACTIONS_USER_REDUCER.SET_STATUS})\nexport const changePage = (page: number): ChangePageACType => ({page, type: ACTIONS_USER_REDUCER.CHANGE_PAGE})\nexport const setUsersCount = (usersCount: number): SetUsersCountACType => ({\n    usersCount,\n    type: ACTIONS_USER_REDUCER.SET_USERS_COUNT\n})\nexport const setLoading = (loading: boolean): LoadingACType => ({loading, type: ACTIONS_USER_REDUCER.SET_LOADING})\nexport const setFollowing = (following: boolean, userId: number): FollowingACType => ({\n    following,\n    userId,\n    type: ACTIONS_USER_REDUCER.SET_FOLLOWING\n})\n\n//thunk creators\nexport const getUsers = (pageSize: number, activePage: number) => (dispatch: Dispatch<ActionUsersReducerType>) => {\n    dispatch(setStatus(statuses.IN_PROGRESS))\n    dispatch(setLoading(true))\n    usersAPI.getUsers(pageSize, activePage)\n        .then((data) => {\n            dispatch(setStatus(statuses.SUCCESS))\n            dispatch(setUsersCount(data.totalCount))\n            dispatch(setLoading(false))\n            dispatch(setUsers(data.items))\n        })\n}\nexport const follow = (userId: number) => (dispatch: Dispatch<ActionUsersReducerType>) => {\n    dispatch(setFollowing(true, userId))\n    usersAPI.follow(userId)\n        .then((data) => {\n            if (data.resultCode === 0) {\n                dispatch(changeFollowedStatus(userId, true))\n                dispatch(setFollowing(false, userId))\n            }\n        })\n}\nexport const unfollow = (userId: number) => (dispatch: Dispatch<ActionUsersReducerType>) => {\n    dispatch(setFollowing(true, userId))\n    usersAPI.unfollow(userId)\n        .then((data) => {\n            if (data.resultCode === 0) {\n                dispatch(changeFollowedStatus(userId, false))\n                dispatch(setFollowing(false, userId))\n            }\n        })\n}\n\nexport default usersReducer\n","export default __webpack_public_path__ + \"static/media/loading.bb27ba0a.gif\";","import s from \"./Preloader.module.css\";\nimport preloader from \"../../assets/images/loading.gif\";\nimport React from \"react\";\n\nexport const Preloader = () => {\n    return <div className={s.loadingBox}>\n        <img alt={'loading...'} className={s.loadingGif} src={preloader}/>\n        <div>Loading...</div>\n    </div>\n}","import React from 'react';\nimport {connect} from 'react-redux';\nimport {PostType, ProfileType, statuses} from \"../../entities/entities\";\nimport Profile from \"./Profile\";\nimport {StateType} from \"../../redux/redux-store\";\nimport {\n    addLike,\n    addPost,\n    removePost,\n    setProfile,\n    setFetching,\n    setStatus,\n    getProfile,\n    getProfileStatus, updateProfileStatus\n} from \"../../redux/profile-reducer\";\nimport {Preloader} from \"../../common/preloader/Preloader\";\nimport {RouteComponentProps, withRouter} from \"react-router\";\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component<ProfilePropsType> {\n\n    componentDidMount() {\n        let userID = this.props.match.params.userID\n        if (!userID) userID = '18931'\n        if (this.props.status === statuses.NOT_INITIALIZED) {\n            this.props.getProfile(userID)\n            this.props.getProfileStatus(userID)\n        }\n    }\n\n    componentWillUnmount() {\n        this.props.setStatus(statuses.NOT_INITIALIZED)\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ?\n                <Profile\n                    {...this.props}\n                />\n                :\n                <Preloader/>\n            }\n        </>\n    }\n\n}\n\ntype MapStatePropsType = {\n    profile: ProfileType\n    posts: Array<PostType>\n    status: string\n    isFetching: boolean\n    profileStatus: string\n}\ntype MapDispatchPropsType = {\n    addPost: () => void\n    removePost: (id: number) => void\n    addLike: (id: number) => void\n    setProfile: (profile: ProfileType) => void\n    setFetching: (fetching: boolean) => void\n    setStatus: (status: string) => void\n    getProfile: (userID: string) => void\n    getProfileStatus: (userID: string) => void\n    updateProfileStatus: (status: string) => void\n}\ntype OwnPropsType = MapStatePropsType & MapDispatchPropsType\ntype PathParamsType = { userID: string }\ntype ProfilePropsType = RouteComponentProps<PathParamsType> & OwnPropsType\n\nconst mapStateToProps = (state: StateType): MapStatePropsType => {\n    return {\n        profile: state.profile.profile,\n        posts: state.profile.posts,\n        isFetching: state.profile.isFetching,\n        status: state.profile.status,\n        profileStatus: state.profile.profileStatus,\n    }\n}\n\n\nexport default compose<React.ComponentType> (\n    connect(mapStateToProps, {\n        addPost,\n        removePost,\n        addLike,\n        setProfile,\n        setFetching,\n        setStatus,\n        getProfile,\n        getProfileStatus,\n        updateProfileStatus\n    }),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer);\n\n","import React from \"react\";\nimport {statuses, UserType} from \"../../entities/entities\";\nimport s from \"./Users.module.css\";\nimport unknown from \"../../assets/images/unknown.png\";\nimport {NavLink} from \"react-router-dom\";\n\n//types\ntype UsersPropsType = {\n    users: Array<UserType>\n    status: string\n    activePage: number\n    totalUsersCount: number\n    pageSize: number\n    onClickPage: (page: number) => void\n    isFollowing: number[]\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n}\n\n//COMPONENT\nexport const Users: React.FC<UsersPropsType> = (props) => {\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\n    let pages = []\n    for (let i = 1; i <= 5; i++) {\n        pages.push(i)\n    }\n    pages.push('...')\n    pages.push(pagesCount)\n\n    const unfollow = (userId: number) => {\n        props.unfollow(userId)\n    }\n    const follow = (userId: number) => {\n        props.follow(userId)\n    }\n\n    return <>\n        {/*TITLE*/}\n        <p className={s.titlePage}>All users in SoNet</p>\n        <div className={s.container}>\n            {(!props.users.length && props.status === statuses.SUCCESS) &&\n            <span className={s.title} style={{margin: '20px'}}>Users not found</span>}\n\n            {/*USERS*/}\n            {props.users.map(u =>\n                <div key={u.id} className={s.friendBox}>\n                    <div className={s.imgBox}>\n\n                        {/*NAVLINK*/}\n                        <NavLink to={'/profile/' + u.id}>\n                            <img alt={u.name} src={u.photos.small || unknown} className={s.img}/>\n                        </NavLink>\n\n                        <button onClick={u.followed ? () => {\n                            unfollow(u.id)\n                        } : () => {\n                            follow(u.id)\n                        }}\n                                className={`${s.followBtn} ${u.followed ? s.red : s.green} ${props.isFollowing\n                                    .includes(u.id) ? s.disabled : ''}`}\n                                disabled={props.isFollowing.some(i => i === u.id)}>\n                            {u.followed ? 'UNFOLLOW' : 'FOLLOW'}\n                        </button>\n                    </div>\n                    <div className={s.infoBox}>\n                        <div>\n                            <p className={`${s.title} ${s.name}`}>Name: </p>\n                            <p className={`${s.description} ${s.name}`}>{u.name}</p>\n                        </div>\n                        <div className={s.infoBottom}>\n                            <div>\n                                <p className={s.title}>Status: </p>\n                                <p className={s.description}>{u.status || \"Nothing yet...\"}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            {/*PAGES*/}\n            <div>\n                {pages.map(p => {\n                    return p === '...' ?\n                        <span key={p + 'page'} className={s.pages}>...</span> :\n                        <span key={p + ' page'}\n                              onClick={() => props.onClickPage(+p)}\n                              className={props.activePage === p ? `${s.activePage} ${s.pages}` : s.pages}>{p}</span>\n                })}\n            </div>\n\n            {/*<button className={`${s.btn} ${s.showBtn}`}>SHOW MORE USERS</button>*/}\n        </div>\n    </>\n}\n\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {StateType} from \"../../redux/redux-store\";\nimport {changePage, follow, getUsers, unfollow} from \"../../redux/users-reducer\";\nimport {statuses, UserType} from \"../../entities/entities\";\nimport {Users} from \"./Users\";\nimport {Preloader} from \"../../common/preloader/Preloader\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n//props\ninterface IUsersPropsType {\n    isLoading: boolean\n    changePage: (page: number) => void\n    getUsers: (pageSize: number, activePage: number) => void\n    users: Array<UserType>\n    status: string\n    activePage: number\n    totalUsersCount: number\n    pageSize: number\n    isFollowing: number[]\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n}\n\ninterface IUsersState {\n}\n\n//COMPONENT\nclass UsersContainer extends React.Component<IUsersPropsType, IUsersState> {\n    componentDidMount() {\n        if (this.props.status === statuses.NOT_INITIALIZED) {\n            this.props.getUsers(this.props.pageSize, this.props.activePage)\n        }\n    }\n\n    onClickPage = (page: number) => {\n        this.props.changePage(page)\n        this.props.getUsers(this.props.pageSize, page)\n    }\n\n    render() {\n        return <>\n            {this.props.isLoading ?\n                <Preloader/>\n                :\n                <Users {...this.props} onClickPage={this.onClickPage}/>\n            }\n        </>\n    }\n}\n\nconst mapStateToProps = (state: StateType) => {\n    return {\n        users: state.users.users,\n        status: state.users.status,\n        pageSize: state.users.pageSize,\n        totalUsersCount: state.users.totalUsersCount,\n        activePage: state.users.activePage,\n        isLoading: state.users.isLoading,\n        isFollowing: state.users.isFollowing,\n    }\n}\n\nexport default compose<React.ComponentType>(\n    withAuthRedirect,\n    connect(mapStateToProps,\n        {\n            changePage,\n            getUsers,\n            follow,\n            unfollow,\n        })\n)(UsersContainer)\n\n","import React from 'react';\nimport s from './Header.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nfunction Header(props: {login: string, isAuth: boolean}) {\n    return (\n        <header>\n            <div className={s.logo}>\n                <img alt={'logo'} src='https://img.apksum.com/9f/nicola.web/2.7/icon.png'/>\n                <NavLink to=\"/profile\">SoNet</NavLink>\n            </div>\n\n            {props.isAuth ?\n                <div className={s.greeting}>Hello, {props.login}</div>\n                :\n                <NavLink to=\"/login\">LogIn</NavLink>\n            }\n        </header>\n    )\n}\n\nexport default Header;","import {Dispatch} from \"redux\";\nimport {authAPI} from \"../api/api\";\n\nenum ACTIONS_AUTH_REDUCER {\n    SET_USER_DATA = 'SET-USER-DATA',\n}\n\nexport type initialAuthStateType = {\n    id: number\n    email: string\n    login: string\n    isAuth: boolean\n}\n\nlet initialAuthState: initialAuthStateType = {\n    id: 0,\n    email: '',\n    login: '',\n    isAuth: false\n}\n\n//REDUCER\nconst authReducer = (state = initialAuthState, action: ActionAuthReducerType): initialAuthStateType => {\n\n    switch (action.type) {\n        case ACTIONS_AUTH_REDUCER.SET_USER_DATA:\n            return {...state, ...action.data, isAuth: true}\n        default:\n            return state;\n    }\n}\n\n//AC\nexport type ActionAuthReducerType = SetUserDataACType\n\ntype SetUserDataACType = { type: typeof ACTIONS_AUTH_REDUCER.SET_USER_DATA, data: {id: number, email: string, login: string} }\n\nexport const setAuthUserData = (id: number, email: string, login: string): SetUserDataACType => ({ type: ACTIONS_AUTH_REDUCER.SET_USER_DATA, data: {id, email, login} })\n\n//thunk\nexport const auth = () => (dispatch: Dispatch<ActionAuthReducerType>) => {\n    authAPI.getAuth().then((data) => {\n        if (data.resultCode === 0) {\n            dispatch(setAuthUserData(data.data.id, data.data.email, data.data.login))\n        }\n    })\n}\nexport default authReducer;","import React from \"react\";\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {auth, setAuthUserData} from \"../../redux/auth-reducer\";\nimport {StateType} from \"../../redux/redux-store\";\n\ntype HeaderProps = {\n    setAuthUserData: (id: number, email: string, login: string) => void\n    login: string\n    isAuth: boolean\n    auth: () => void\n}\n\nclass HeaderContainer extends React.Component<HeaderProps, any> {\n\n    componentDidMount() {\n        this.props.auth()\n    }\n\n    render() {\n        return <>\n            <Header {...this.props}/>\n        </>\n    }\n}\n\nexport default connect((state: StateType) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n}), {\n    setAuthUserData,\n    auth,\n})(HeaderContainer)","import React from 'react';\nimport {reduxForm, Field, InjectedFormProps} from \"redux-form\";\n\nconst Login = () => {\n\n    const onSubmit = (formData: FormDataType) => {\n        console.log(formData)\n    }\n\n    return (\n        <div>\n            <h1>LOGIN PAGE</h1>\n            <LoginReduxForm onSubmit={onSubmit}/>\n        </div>\n    )\n}\n\nexport default Login\n\nexport type FormDataType = {\n    login: string\n    password: string\n    rememberMe: boolean\n}\n\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) =>  {\n    console.log('rerender login')\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field placeholder={'Login'} component={'input'} name={'login'}/>\n            </div>\n            <div>\n                <Field placeholder={'Password'} component={'input'} name={'password'}/>\n            </div>\n            <div>\n                <Field type={'checkbox'} component={'input'} name={'rememberMe'}/> remember me\n            </div>\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm);\n\n","import React from 'react';\nimport {Route} from \"react-router\";\nimport s from \"./App.module.css\";\nimport Footer from \"./components/Footer/Footer\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport UsersContainer from './components/Users/UsersContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from \"./components/Login/Login\";\n\nfunction App() {\n    return (\n            <div className={s.appWrapper}>\n                <HeaderContainer/>\n                <main>\n                    <Navbar />\n                    <div className={s.content}>\n                        <Route path='/profile/:userID?' component={ProfileContainer}/>\n                        <Route path='/dialogs' component={DialogsContainer}/>\n                        <Route path='/users' component={UsersContainer}/>\n                        <Route path='/news' component={News}/>\n                        <Route path='/music' component={Music}/>\n                        <Route path='/settings' component={Settings}/>\n                        <Route path='/login' component={Login}/>\n                    </div>\n                </main>\n                <Footer/>\n            </div>\n    )\n}\n\nexport default App;\n","import {UserType} from \"../entities/entities\";\n\nenum ACTIONS_FRIENDS_REDUCER {\n    SET_FRIENDS = 'SET-FRIENDS',\n    SET_LOADING = 'SET-LOADING',\n}\n\ntype initialFriendsStateType = {\n    friends: Array<UserType>\n    isLoading: boolean\n}\nlet initialFriendsState: initialFriendsStateType = {\n    friends: [],\n    isLoading: true\n}\n\nconst friendsReducer = (state = initialFriendsState, action: ActionFriendsReducerType) => {\n    switch (action.type) {\n        case \"SET-FRIENDS\":\n            return {...state, friends: [...state.friends, action.friends]}\n        default:\n            return state;\n    }\n}\n\n//Action creators\nexport type ActionFriendsReducerType = SetFriendsACType | SetLoadingACType\n\ntype SetFriendsACType = { friends: UserType[], type: typeof ACTIONS_FRIENDS_REDUCER.SET_FRIENDS}\ntype SetLoadingACType = { loading: boolean, type: typeof ACTIONS_FRIENDS_REDUCER.SET_LOADING}\n\nexport const setFriends = (friends: UserType[]): SetFriendsACType => ({friends, type: ACTIONS_FRIENDS_REDUCER.SET_FRIENDS})\nexport const setLoading = (loading: boolean): SetLoadingACType => ({loading, type: ACTIONS_FRIENDS_REDUCER.SET_LOADING})\n\n\n\nexport default friendsReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport friendsReducer from \"./friends-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleware from 'redux-thunk'\nimport { reducer as formReducer } from 'redux-form'\n\nconst reducers = combineReducers({\n    profile: profileReducer,\n    dialogs: dialogsReducer,\n    friends: friendsReducer,\n    users: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n})\n\nexport type StateType = ReturnType<typeof reducers>\n\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\n// @ts-ignore\nwindow.state= store.getState()\n\nexport default store;","import reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport store from \"./redux/redux-store\";\nimport {Provider} from 'react-redux'\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>, document.getElementById('root'))\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__CLYHD\",\"other\":\"Navbar_other__vqMC5\",\"active\":\"Navbar_active__3mbhk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__A0EJd\",\"postContent\":\"Post_postContent__dePS0\",\"avatar\":\"Post_avatar__1wBwP\",\"message\":\"Post_message__3raFK\",\"like\":\"Post_like__oViQh\",\"likesCount\":\"Post_likesCount__R9C9-\",\"button\":\"Post_button__2dr5U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsMessages\":\"DialogsMessages_dialogsMessages__3QP42\",\"messages\":\"DialogsMessages_messages__3fvU4\",\"sendBox\":\"DialogsMessages_sendBox__3hn7h\",\"textarea\":\"DialogsMessages_textarea__3H-Xz\",\"button\":\"DialogsMessages_button__2YtVE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"MyPosts_title__3q_Ko\",\"textarea\":\"MyPosts_textarea__3KLbu\",\"buttons\":\"MyPosts_buttons__2wUXL\",\"button\":\"MyPosts_button__2WbpQ\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageBox\":\"Profile_imageBox__1et71\",\"arrow\":\"Profile_arrow__te3cM\",\"arrowRight\":\"Profile_arrowRight__3ifeA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__3qKjq\",\"img\":\"Friend_img__3KzQt\",\"name\":\"Friend_name__33ANY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogPage\":\"Dialogs_dialogPage__3cRJY\",\"dialogsColumn\":\"Dialogs_dialogsColumn__y5DL0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3tDA2\",\"img\":\"DialogItem_img__30y70\",\"active\":\"DialogItem_active__2qnc5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__3rnam\",\"content\":\"App_content__3La4L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"FriendsPanel_title__2_gYF\",\"friends\":\"FriendsPanel_friends__3pdJ2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingGif\":\"Preloader_loadingGif__lFy-A\",\"loadingBox\":\"Preloader_loadingBox__1-RkT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__3_SJs\",\"greeting\":\"Header_greeting__1RmOx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Users_titlePage__-qQrJ\",\"container\":\"Users_container__6F9oG\",\"friendBox\":\"Users_friendBox__2qTnN\",\"imgBox\":\"Users_imgBox__3UYsy\",\"img\":\"Users_img__3OuDf\",\"followBtn\":\"Users_followBtn__3m1nP\",\"btn\":\"Users_btn__9AIH5\",\"red\":\"Users_red__3k9_c\",\"green\":\"Users_green__2qlvh\",\"infoBox\":\"Users_infoBox__m1z_G\",\"infoBottom\":\"Users_infoBottom__3bLuP\",\"title\":\"Users_title__2S65O\",\"name\":\"Users_name__3Kys8\",\"description\":\"Users_description__QFQc5\",\"showBtn\":\"Users_showBtn__1c0oR\",\"activePage\":\"Users_activePage__28hh7\",\"pages\":\"Users_pages__2ZPtK\",\"disabled\":\"Users_disabled__vXtPd\"};"],"sourceRoot":""}
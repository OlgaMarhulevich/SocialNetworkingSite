{"version":3,"sources":["components/Dialogs/DialogsMessages/Message/Message.module.css","components/Navbar/Navbar.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Dialogs/DialogsMessages/DialogsMessages.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/Profile.module.css","components/Navbar/FriendsPanel/Friend/Friend.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","App.module.css","components/Navbar/FriendsPanel/FriendsPanel.module.css","common/preloader/Preloader.module.css","components/Header/Header.module.css","components/Users/Users.module.css","components/Footer/Footer.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","reportWebVitals.ts","components/Footer/Footer.tsx","components/Navbar/FriendsPanel/Friend/Friend.tsx","assets/images/unknown.png","components/Navbar/FriendsPanel/FriendsPanel.tsx","components/Navbar/FriendsPanel/FriendsPanelContainer.tsx","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/DialogsMessages/Message/Message.tsx","components/Dialogs/DialogsMessages/DialogsMessages.tsx","components/Dialogs/Dialogs.tsx","redux/dialogs-reducer.ts","components/Dialogs/DialogsContainer.tsx","entities/entities.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","redux/profile-reducer.ts","api/api.tsx","redux/users-reducer.ts","assets/images/loading.gif","common/preloader/Preloader.tsx","components/Profile/ProfileContainer.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx","components/Header/Header.tsx","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","login/Login.tsx","App.tsx","redux/friends-reducer.ts","redux/redux-store.ts","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Footer","href","Friend","props","className","s","friend","alt","name","src","img","FriendsPanel","friendsPanel","friends","map","length","slice","photos","small","unknown","id","title","FriendsPanelContainer","React","Component","connect","Navbar","navbar","to","activeClassName","active","other","News","Music","Settings","DialogItem","dialog","Message","messageComponentMe","messageComponent","messageBabbleMe","messageBabble","tailMe","tail","messageBoxMe","messageBox","message","time","DialogsMessages","messagesElements","messages","index","newMessageElement","createRef","addMessageCallback","addMessage","dialogsMessages","sendBox","onKeyPress","event","key","preventDefault","value","newMessage","onChange","current","changeNewMessage","ref","placeholder","textarea","onClick","button","Dialogs","dialogsElements","dialogs","isAuth","dialogPage","dialogsColumn","messagesColumn","path","render","prop","dialogID","match","params","find","d","ADD_MESSAGE","UPDATE_NEW_MESSAGE","initialDialogState","dialogsReducer","state","action","type","currentDialog","trim","DialogsContainer","auth","statuses","ProfileInfo","profileInfo","avatar","profile","large","fullName","div","description","lookingForAJob","aboutMe","Post","post","postContent","likesCount","addLike","like","removePost","MyPosts","postsElements","posts","newPostElement","addPostCallback","addPost","newPostMessage","updateNewPostMessage","buttons","Profile","ACTIONS_PROFILE_TYPE","imageBox","arrow","arrowRight","axiosInstance","axios","create","baseURL","withCredentials","headers","usersAPI","pageSize","activePage","get","response","data","userId","delete","profileAPI","userID","authAPI","ACTIONS_USER_REDUCER","initialProfileState","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJobDescription","status","isFetching","setProfile","SET_PROFILE","setStatus","SET_STATUS","setFetching","fetching","TOGGLE_FETCHING","profileReducer","ADD_POST","newPost","UPDATE_NEW_POST_MESSAGE","postMessage","REMOVE_POST","confirm","filter","ADD_LIKE","Preloader","loadingBox","loadingGif","preloader","ProfileContainer","this","getProfile","ProfileContainerWithRouter","withRouter","dispatch","initialUsersState","users","totalUsersCount","isLoading","isFollowing","changeFollowedStatus","isFollow","CHANGE_FOLLOWED_STATUS","setLoading","loading","SET_LOADING","setFollowing","following","SET_FOLLOWING","usersReducer","u","followed","SET_USERS","CHANGE_PAGE","page","SET_USERS_COUNT","usersCount","Users","pagesCount","Math","ceil","pages","i","push","titlePage","container","style","margin","friendBox","imgBox","unfollow","follow","followBtn","red","green","includes","disabled","some","infoBox","infoBottom","p","onClickPage","UsersContainer","changePage","getUsers","totalCount","items","resultCode","Header","ACTIONS_AUTH_REDUCER","logo","greeting","login","initialAuthState","email","setAuthUserData","SET_USER_DATA","authReducer","HeaderContainer","Login","App","ACTIONS_FRIENDS_REDUCER","appWrapper","content","component","initialFriendsState","friendsReducer","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","getState","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a67555f0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageComponent\":\"Message_messageComponent__2_iBn\",\"messageComponentMe\":\"Message_messageComponentMe__1w1Wo\",\"img\":\"Message_img__3-T8Q\",\"time\":\"Message_time__oGKVI\",\"messageBabble\":\"Message_messageBabble__2EWNh\",\"messageBabbleMe\":\"Message_messageBabbleMe__1DfI-\",\"tail\":\"Message_tail__3RUok\",\"tailMe\":\"Message_tailMe__m4hsZ\",\"messageBox\":\"Message_messageBox__1ynL0\",\"messageBoxMe\":\"Message_messageBoxMe__3KXIW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__CLYHD\",\"other\":\"Navbar_other__vqMC5\",\"active\":\"Navbar_active__3mbhk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__A0EJd\",\"postContent\":\"Post_postContent__dePS0\",\"avatar\":\"Post_avatar__1wBwP\",\"message\":\"Post_message__3raFK\",\"like\":\"Post_like__oViQh\",\"likesCount\":\"Post_likesCount__R9C9-\",\"button\":\"Post_button__2dr5U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsMessages\":\"DialogsMessages_dialogsMessages__3QP42\",\"messages\":\"DialogsMessages_messages__3fvU4\",\"sendBox\":\"DialogsMessages_sendBox__3hn7h\",\"textarea\":\"DialogsMessages_textarea__3H-Xz\",\"button\":\"DialogsMessages_button__2YtVE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"MyPosts_title__3q_Ko\",\"textarea\":\"MyPosts_textarea__3KLbu\",\"buttons\":\"MyPosts_buttons__2wUXL\",\"button\":\"MyPosts_button__2WbpQ\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageBox\":\"Profile_imageBox__1et71\",\"arrow\":\"Profile_arrow__te3cM\",\"arrowRight\":\"Profile_arrowRight__3ifeA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__3qKjq\",\"img\":\"Friend_img__3KzQt\",\"name\":\"Friend_name__33ANY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogPage\":\"Dialogs_dialogPage__3cRJY\",\"dialogsColumn\":\"Dialogs_dialogsColumn__y5DL0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3tDA2\",\"img\":\"DialogItem_img__30y70\",\"active\":\"DialogItem_active__2qnc5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__3rnam\",\"content\":\"App_content__3La4L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"FriendsPanel_title__2_gYF\",\"friends\":\"FriendsPanel_friends__3pdJ2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingGif\":\"Preloader_loadingGif__lFy-A\",\"loadingBox\":\"Preloader_loadingBox__1-RkT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__3_SJs\",\"greeting\":\"Header_greeting__1RmOx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Users_titlePage__-qQrJ\",\"container\":\"Users_container__6F9oG\",\"friendBox\":\"Users_friendBox__2qTnN\",\"imgBox\":\"Users_imgBox__3UYsy\",\"img\":\"Users_img__3OuDf\",\"followBtn\":\"Users_followBtn__3m1nP\",\"btn\":\"Users_btn__9AIH5\",\"red\":\"Users_red__3k9_c\",\"green\":\"Users_green__2qlvh\",\"infoBox\":\"Users_infoBox__m1z_G\",\"infoBottom\":\"Users_infoBottom__3bLuP\",\"title\":\"Users_title__2S65O\",\"name\":\"Users_name__3Kys8\",\"description\":\"Users_description__QFQc5\",\"showBtn\":\"Users_showBtn__1c0oR\",\"activePage\":\"Users_activePage__28hh7\",\"pages\":\"Users_pages__2ZPtK\",\"disabled\":\"Users_disabled__vXtPd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Footer_logo__3ACxa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__2IJgv\",\"avatar\":\"ProfileInfo_avatar__3xuFq\",\"div\":\"ProfileInfo_div__3At7N\",\"title\":\"ProfileInfo_title__2t6A6\",\"description\":\"ProfileInfo_description__2yWda\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport './Footer.module.css';\n\nfunction Footer() {\n    return (\n        <footer>&copy; My first site on &nbsp;<a href='#'>React</a></footer>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport s from './Friend.module.css';\n\ntype FriendPropsType = {\n    name: string,\n    img: string\n}\n\nfunction Friend(props: FriendPropsType) {\n    return (\n        <div className={s.friend}>\n            <img alt={props.name} src={props.img} className={s.img}/>\n            <p className={s.name}>{props.name}</p>\n        </div>\n    )\n}\n\nexport default Friend;","export default __webpack_public_path__ + \"static/media/unknown.dc967cb3.png\";","import React from 'react';\nimport s from './FriendsPanel.module.css';\nimport Friend from \"./Friend/Friend\";\nimport {UserType} from \"../../../entities/entities\";\nimport unknown from '../../../assets/images/unknown.png'\n\ntype FriendsPanelPropsType = {\n    friends: Array<UserType>\n}\n\nfunction FriendsPanel(props: FriendsPanelPropsType) {\n\n    let friendsPanel = props.friends.map(friend =>\n                <Friend\n                    key={friend.id}\n                    name={friend.name.length > 7 ? (friend.name.slice(0, 6) + '...') : friend.name}\n                    img={friend.photos.small || unknown}/>)\n\n    return (\n        <div>\n            <p className={s.title}>Friends</p>\n            <div className={s.friends}>\n                {friendsPanel}\n            </div>\n        </div>\n    )\n}\n\nexport default FriendsPanel;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport FriendsPanel from \"./FriendsPanel\";\n\n//props\ninterface IFriendsPropsType {\n}\ninterface IFriendsState {\n}\n\nclass FriendsPanelContainer extends React.Component<IFriendsPropsType, IFriendsState> {\n\n    componentDidMount() {\n    }\n\n    render() {\n        return <FriendsPanel friends={[]}/>\n    }\n}\n\nexport default connect(() => {\n    return {}\n}, {})(FriendsPanelContainer)\n\n","import React from 'react';\nimport s from './Navbar.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport FriendsPanelContainer from \"./FriendsPanel/FriendsPanelContainer\";\n\nfunction Navbar() {\n    return (\n        <aside>\n            <nav className={s.navbar}>\n                <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\n                <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\n                <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\n                <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\n                <NavLink to=\"/users\" activeClassName={s.active} className={s.other}>Find users</NavLink>\n                <NavLink to=\"/settings\" activeClassName={s.active} className={s.other}>Settings</NavLink>\n                <FriendsPanelContainer />\n            </nav>\n        </aside>\n    )\n}\n\nexport default Navbar;","import React from \"react\";\nimport s from './News.module.css';\n\nfunction News() {\n    return (\n        <div>\n            News\n        </div>\n    )\n}\n\nexport default News;\n","import React from \"react\";\nimport s from './Music.module.css';\n\nfunction Music() {\n    return (\n        <div>\n            Music\n        </div>\n    )\n}\n\nexport default Music;\n","import React from \"react\";\nimport s from './Settings.module.css';\n\nfunction Settings() {\n    return (\n        <div>\n            Settings\n        </div>\n    )\n}\n\nexport default Settings;\n","import React from \"react\";\nimport s from './DialogItem.module.css';\nimport {NavLink} from \"react-router-dom\";\n\ntype DialogItemPropsType = {\n    id: number,\n    name: string,\n    img: string\n}\n\nfunction DialogItem(props: DialogItemPropsType) {\n    return (\n        <div>\n            <NavLink to={'/dialogs/' + props.id} className={s.dialog} activeClassName={s.active}>\n                <img className={s.img} src={props.img} alt={props.name}/>\n                {props.name}\n            </NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem;\n","import React from \"react\";\nimport s from './Message.module.css';\n\ntype MessagePropsType = {\n    message: string,\n    name: string,\n    img: string\n}\n\nfunction Message(props: MessagePropsType) {\n\n    const messageComponentFrom = () => {\n        return (props.name === 'Me') ? s.messageComponentMe : s.messageComponent\n    }\n    const messageBabbleFrom = () => {\n        return (props.name === 'Me') ? s.messageBabbleMe : s.messageBabble\n    }\n    const tailFrom = () => {\n        return (props.name === 'Me') ? s.tailMe : s.tail\n    }\n\n    const messageBoxFrom = () => {\n        return (props.name === 'Me') ? s.messageBoxMe : s.messageBox\n    }\n\n\n    return (\n        <div className={messageComponentFrom()}>\n            <img className={s.img} src={props.img} alt=\"avatar\"/>\n            <div className={messageBabbleFrom()}>\n                <div className={tailFrom()}/>\n                <div className={messageBoxFrom()}>\n                    <div className={s.message}>{props.message}</div>\n                    <div className={s.time}>22:00</div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message;\n","import s from \"../DialogsMessages/DialogsMessages.module.css\";\nimport React from \"react\";\nimport Message from \"./Message/Message\";\nimport {DialogType} from \"../../../entities/entities\";\n\ntype DialogsMessagesPropsType = {\n    dialog: DialogType\n    addMessage: (id: number) => void\n    changeNewMessage: (newMessage: string, id: number) => void\n}\n\nexport const DialogsMessages = (props: DialogsMessagesPropsType) => {\n\n    const messagesElements = props.dialog.messages.map((message, index) =>\n        <Message key={index} name={message.name} img={message.img} message={message.message}/>)\n\n    const newMessageElement = React.createRef<HTMLTextAreaElement>();\n\n    const addMessageCallback = () => {\n        props.addMessage(props.dialog.id)\n    }\n    const changeNewMessage = () => {\n        const newMessage = newMessageElement.current?.value;\n        newMessage && props.changeNewMessage(newMessage, props.dialog.id)\n    }\n\n    const enterPressed = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            addMessageCallback()\n        }\n    }\n\n    return (\n        <div className={s.dialogsMessages}>\n            <div className={s.messages}>\n                { messagesElements}\n            </div>\n            <div className={s.sendBox}>\n                <textarea onKeyPress={enterPressed} value={props.dialog.newMessage} onChange={changeNewMessage}\n                          ref={newMessageElement} placeholder={'Text your message...'} className={s.textarea}/>\n                <button onClick={addMessageCallback} className={s.button}>Send</button>\n            </div>\n\n\n        </div>\n\n    )\n}","import React from \"react\";\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport {DialogsMessages} from \"./DialogsMessages/DialogsMessages\";\nimport {Redirect, Route} from \"react-router\";\nimport {DialogType} from \"../../entities/entities\";\n\ntype DialogsPropsType = {\n    dialogs: DialogType[]\n    addMessage: (id: number) => void\n    changeNewMessage: (newMessage: string, id: number) => void\n    isAuth: boolean\n}\n\nfunction Dialogs(props: DialogsPropsType) {\n\n    const dialogsElements = props.dialogs.map(dialog =>\n        <DialogItem key={dialog.id} img={dialog.img} id={dialog.id} name={dialog.name}/>)\n\n    if (!props.isAuth) return <Redirect to={'/login'}/>\n\n    return (\n        <div className={s.dialogPage}>\n            <div className={s.dialogsColumn}>\n                {dialogsElements}\n            </div>\n\n            <div className={s.messagesColumn}>\n\n                <Route path='/dialogs/:dialogID' render={(prop) => {\n                    const dialogID = prop.match.params.dialogID;\n                    const dialog = props.dialogs.find(d => d.id === +dialogID);\n                    return (\n                        dialog && <DialogsMessages\n                            dialog={dialog}\n                            addMessage={(id) => props.addMessage(id)}\n                            changeNewMessage={(newMessage, id) => props.changeNewMessage(newMessage, id)}/>\n                    )\n                }\n                }/>\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs;\n","import {DialogType} from \"../entities/entities\";\n\nconst ADD_MESSAGE = 'ADD-MESSAGE';\nconst UPDATE_NEW_MESSAGE = 'UPDATE-NEW-MESSAGE';\n\nexport type initialDialogsStateType = {\n    dialogs: Array<DialogType>\n}\nlet initialDialogState: initialDialogsStateType = {\n    dialogs: [\n        {\n            id: 1,\n            name: 'Nick',\n            img: 'https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg',\n            messages: [\n                {\n                    message: 'Hi!',\n                    name: 'Nick',\n                    img: 'https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg'\n                },\n                {\n                    message: 'How are you?',\n                    name: 'Nick',\n                    img: 'https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg'\n                },\n                {\n                    message: 'Yo',\n                    name: 'Me',\n                    img: 'https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-58-696x696.jpg'\n                },\n                {\n                    message: \"I'm fine! How're you?\",\n                    name: 'Me',\n                    img: 'https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-58-696x696.jpg'\n                },\n            ],\n            newMessage: ''\n        },\n        {\n            id: 2, name: 'Jhon', img: 'https://vraki.net/sites/default/files/inline/images/30_55.jpg',\n            messages: [\n                {\n                    message: 'Hi!',\n                    name: 'Jhon',\n                    img: 'https://vraki.net/sites/default/files/inline/images/30_55.jpg'\n                }],\n            newMessage: ''\n        },\n        {\n            id: 3, name: 'Anna', img: 'https://pixelbox.ru/wp-content/uploads/2021/04/ava-mult-vk-78.jpg',\n            messages: [\n                {\n                    message: 'Hi!',\n                    name: 'Anna',\n                    img: 'https://pixelbox.ru/wp-content/uploads/2021/04/ava-mult-vk-78.jpg'\n                }],\n            newMessage: ''\n        },\n    ]\n}\n\nconst dialogsReducer = (state = initialDialogState, action: ActionDialogsReducerType): initialDialogsStateType => {\n\n    switch (action.type) {\n        case ADD_MESSAGE: {\n            const currentDialog = state.dialogs.find(d => d.id === action.id) as DialogType\n            if (!currentDialog.newMessage.trim()) {\n                return {...state, dialogs: state.dialogs.map(d => d.id === action.id ? {...d, newMessage: ''} : d)}\n            }\n            const newMessage = {\n                message: currentDialog.newMessage,\n                name: 'Me',\n                img: 'https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-58-696x696.jpg'\n            }\n            return {\n                ...state,\n                dialogs: state.dialogs\n                    .map(d => d.id === action.id ? {...d, messages: [...d.messages, newMessage], newMessage: ''} : d)\n            }\n        }\n        case UPDATE_NEW_MESSAGE: {\n            return {...state, dialogs: state.dialogs.map(d => d.id === action.id ? {...d, newMessage: action.message} : d)}\n        }\n        default:\n            return state;\n    }\n}\n\n//Action creators\nexport type ActionDialogsReducerType = addMessageActionCreatorType | updateNewMessageActionCreatorType\n\ntype addMessageActionCreatorType = { type: typeof ADD_MESSAGE, id: number }\ntype updateNewMessageActionCreatorType = { type: typeof UPDATE_NEW_MESSAGE, message: string, id: number }\n\nexport const addMessage = (id: number): addMessageActionCreatorType => ({type: ADD_MESSAGE, id: id});\nexport const changeNewMessage = (message: string = '', id: number): updateNewMessageActionCreatorType => {\n    return {type: UPDATE_NEW_MESSAGE, message: message, id: id};\n}\n\nexport default dialogsReducer;","import React from \"react\";\nimport Dialogs from \"./Dialogs\";\nimport {StateType} from \"../../redux/redux-store\";\nimport {connect} from \"react-redux\";\nimport {addMessage, changeNewMessage} from \"../../redux/dialogs-reducer\";\n\nconst mapStateToProps = (state: StateType) => {\n    return {\n        dialogs: state.dialogs.dialogs,\n        isAuth: state.auth.isAuth\n    }\n}\n\nconst DialogsContainer = connect(mapStateToProps, {\n    addMessage,\n    changeNewMessage,\n}) (Dialogs)\n\nexport default DialogsContainer;\n","export type PostType = {\n    id: number\n    message: string\n    likesCount: number\n}\n\nexport type DialogType = {\n    id: number\n    name: string\n    img: string\n    messages: Array<MessageType>\n    newMessage: string\n}\nexport type MessageType = {\n    message: string\n    name: string\n    img: string\n}\n\nexport type UserType = {\n    name: string\n    id: number\n    uniqueUrlName: string\n    photos: {\n        small: string\n        large: string\n    }\n    status: string\n    followed: boolean\n}\n\nexport type ItemsType = {\n    items: UserType[]\n    totalCount: number\n    error: string\n}\n\nexport type AuthDataType = {\n    resultCode: number\n    messages: Array<any>\n    data: {\n        id: number\n        email: string\n        login: string\n    }\n}\nexport type ProfileType = {\n    aboutMe: string\n    contacts: {\n        facebook: string\n        website: string\n        vk: string\n        twitter: string\n        instagram: string\n        youtube: string\n        github: string\n        mainLink: string\n    },\n    lookingForAJob: boolean\n    lookingForAJobDescription: string\n    fullName: string\n    userId: number\n    photos: {\n        small: string\n        large: string\n    }\n}\n\nexport type FollowResponse = {\n    resultCode: number\n    messages: []\n    data: {}\n}\n\nexport const statuses = {\n    NOT_INITIALIZED: 'NOT-INITIALIZED',\n    ERRORS: 'ERRORS',\n    IN_PROGRESS: 'IN-PROGRESS',\n    SUCCESS: 'SUCCESS',\n}","import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport {ProfileType} from \"../../../entities/entities\";\nimport unknown from '../../../assets/images/unknown.png'\n\ntype ProfileInfoPropsType = {\n    profile: ProfileType\n}\n\nfunction ProfileInfo(props: ProfileInfoPropsType) {\n    return (\n        <div className={s.profileInfo}>\n            <img className={s.avatar} src={props.profile.photos.large || unknown} alt={props.profile.fullName}/>\n            <div>\n                <div className={s.div}>\n                    <p className={s.title}>Name: </p>\n                    <p className={s.description}>{props.profile.fullName}</p>\n                </div>\n                <div className={s.div}>\n                    <p className={s.title}>I'm looking a job: </p>\n                    <p className={s.description}>{props.profile.lookingForAJob ? 'yes' : 'no'}</p>\n                </div>\n                <div className={s.div}>\n                    <p className={s.title}>Status: </p>\n                    <p className={s.description}>Such a good day! =)</p>\n                </div>\n                <div>\n                    <p className={s.title}>About me: </p>\n                    <p className={s.description}>{props.profile.aboutMe}</p>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport s from './Post.module.css';\n\n\ntype PostPropsType = {\n    id: number\n    message: string\n    likesCount: number\n    removePost: (id: number) => void\n    addLike: (id: number) => void\n}\n\nfunction Post (props: PostPropsType) {\n\n    const removePostCallback = () => {\n        props.removePost(props.id)\n    }\n    const addLikeCallback = () => {\n        props.addLike(props.id)\n    }\n\n    return (\n        <div className={s.post}>\n            <div className={s.postContent}>\n                <img className={s.avatar}\n                    src='https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-58-696x696.jpg' alt='Avatar'/>\n                <div className={s.message}>{props.message}</div>\n            </div>\n\n            <div>\n                <span className={s.likesCount}>{props.likesCount} likes</span>\n                <button onClick={addLikeCallback} className={s.like}>Like!</button>\n                <button onClick={removePostCallback} className={s.button}>Remove post</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Post;","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\nimport {PostType} from \"../../../entities/entities\";\n\ntype MyPostsPropsType = {\n    posts: Array<PostType>\n    newPostMessage: string\n    addPost: () => void\n    updateNewPostMessage: (newPostMessage: string) => void\n    removePost: (id: number) => void\n    addLike: (id: number) => void\n}\n\nfunction MyPosts(props: MyPostsPropsType) {\n\n    const postsElements =\n        props.posts.map(post =>\n           <Post key={post.id}\n                 id={post.id}\n                 message={post.message}\n                 likesCount={post.likesCount}\n                 removePost={(id) => props.removePost(id)}\n                 addLike={(id) => props.addLike(id)}/>)\n\n    const newPostElement = React.createRef<HTMLTextAreaElement>();\n\n    const addPostCallback = () => {\n        props.addPost()\n    }\n    const changeNewPostMessage = () => {\n        const newPostMessage = newPostElement.current?.value\n        newPostMessage && props.updateNewPostMessage(newPostMessage)\n    }\n\n    const enterPressed = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n        if (event.key === 'Enter') {\n            event.preventDefault()\n            addPostCallback()\n        }\n    }\n\n    return (\n        <div>\n            <p className={s.title}>My Posts</p>\n            <div>\n                <textarea onKeyPress={enterPressed} value={props.newPostMessage} onChange={changeNewPostMessage} ref={newPostElement} className={s.textarea} placeholder='Your message...'/>\n                <div className={s.buttons}>\n                    <button onClick={addPostCallback} className={s.button}>Add post</button>\n                </div>\n            </div>\n            <div className={s.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n}\n\nexport default MyPosts;","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport s from './Profile.module.css'\nimport MyPosts from './MyPosts/MyPosts';\nimport {PostType, ProfileType} from \"../../entities/entities\";\n\ntype ProfilePropsType = {\n    profile: ProfileType\n    posts: Array<PostType>\n    newPostMessage: string\n    addPost: () => void\n    updateNewPostMessage: (postMessage: string) => void\n    removePost: (id: number) => void\n    addLike: (id: number) => void\n}\n\nfunction Profile(props: ProfilePropsType) {\n    return (\n        <div>\n            <ProfileInfo profile={props.profile}/>\n            <div className={s.imageBox}>\n                <img alt={'arrow-left'} src={'https://piaspb.ru/img/new-img/arrows-l.png'} className={s.arrow}/>\n                <img alt={'arrow-right'} src={'https://piaspb.ru/img/new-img/arrows-l.png'} className={`${s.arrow} ${s.arrowRight}`}/>\n            </div>\n            <MyPosts\n                {...props}\n                /*posts={props.posts}\n                newPostMessage={props.newPostMessage}\n                addPost={props.addPost}\n                updateNewPostMessage={props.updateNewPostMessage}\n                removePost={props.removePost}\n                addLike={props.addLike}*//>\n        </div>\n    )\n}\n\nexport default Profile;","import {PostType, ProfileType, statuses} from \"../entities/entities\"\nimport {Dispatch} from \"redux\";\nimport {profileAPI} from \"../api/api\";\n\nexport enum ACTIONS_PROFILE_TYPE {\n    ADD_POST = 'ADD-POST',\n    UPDATE_NEW_POST_MESSAGE = 'UPDATE-NEW-POST-MESSAGE',\n    REMOVE_POST = 'REMOVE-POST',\n    ADD_LIKE = 'ADD-LIKE',\n    SET_PROFILE = 'SET-PROFILE',\n    SET_STATUS = 'SONET/PROFILE/SET-STATUS',\n    TOGGLE_FETCHING = 'SONET/PROFILE/TOGGLE-FETCHING',\n}\n\nexport type initialProfileStateType = {\n    profile: ProfileType\n    posts: Array<PostType>\n    newPostMessage: string\n    status: string\n    isFetching: boolean\n}\nlet initialProfileState: initialProfileStateType = {\n    profile: {\n        aboutMe: '',\n        contacts: {\n            facebook: '',\n            website: '',\n            vk: '',\n            twitter: '',\n            instagram: '',\n            youtube: '',\n            github: '',\n            mainLink: ''\n        },\n        lookingForAJob: false,\n        lookingForAJobDescription: '',\n        fullName: '',\n        userId: 1,\n        photos: {\n            small: '',\n            large: ''\n        }\n    },\n    posts: [\n        {id: 1, message: 'It is my first post!', likesCount: 25},\n        {id: 2, message: 'How are you?', likesCount: 15},\n    ],\n    newPostMessage: '',\n    status: statuses.NOT_INITIALIZED,\n    isFetching: false,\n}\n\nconst profileReducer = (state = initialProfileState, action: ActionProfileReducerType): initialProfileStateType => {\n\n    switch (action.type) {\n        case ACTIONS_PROFILE_TYPE.ADD_POST:\n            if (state.newPostMessage === '') {\n                return state\n            }\n            const newPost = {\n                id: state.posts.length + 1,\n                message: state.newPostMessage,\n                likesCount: 0\n            }\n            return {...state, posts: [...state.posts, newPost], newPostMessage: ''}\n        case ACTIONS_PROFILE_TYPE.UPDATE_NEW_POST_MESSAGE:\n            return {...state, newPostMessage: action.postMessage}\n        case ACTIONS_PROFILE_TYPE.REMOVE_POST:\n            // eslint-disable-next-line no-restricted-globals\n            if (confirm('Delete this post?')) {\n                return {...state, posts: state.posts.filter(post => post.id !== action.id), newPostMessage: ''}\n            }\n            return state\n        case ACTIONS_PROFILE_TYPE.ADD_LIKE:\n            return {...state,\n                posts: state.posts.map(post => post.id === action.id ? {...post, likesCount: ++post.likesCount} : post),\n                newPostMessage: ''}\n        case ACTIONS_PROFILE_TYPE.SET_PROFILE:\n            return {...state, profile: action.profile}\n        case ACTIONS_PROFILE_TYPE.SET_STATUS:\n            return {...state, status: action.status}\n        case ACTIONS_PROFILE_TYPE.TOGGLE_FETCHING:\n            return {...state, isFetching: action.fetching}\n        default:\n            return state\n    }\n}\n\n//Action type\nexport type ActionProfileReducerType = addPostActionCreatorType\n    | updateNewPostMessageActionCreatorType\n    | removePostActionCreatorType\n    | addLikeActionCreatorType\n    | setProfileACType\n    | SetStatusACType\n    | FetchingACType\n\n//types AC\ntype addPostActionCreatorType = { type: typeof ACTIONS_PROFILE_TYPE.ADD_POST }\ntype updateNewPostMessageActionCreatorType = { type: typeof ACTIONS_PROFILE_TYPE.UPDATE_NEW_POST_MESSAGE, postMessage: string }\ntype removePostActionCreatorType = { type: typeof ACTIONS_PROFILE_TYPE.REMOVE_POST, id: number }\ntype addLikeActionCreatorType = { type: typeof ACTIONS_PROFILE_TYPE.ADD_LIKE, id: number }\ntype setProfileACType = { type: typeof ACTIONS_PROFILE_TYPE.SET_PROFILE, profile: ProfileType }\ntype SetStatusACType = { status: string, type: typeof ACTIONS_PROFILE_TYPE.SET_STATUS }\ntype FetchingACType = { fetching: boolean, type: typeof ACTIONS_PROFILE_TYPE.TOGGLE_FETCHING }\n\n//AC\nexport const addPost = (): addPostActionCreatorType => ({type: ACTIONS_PROFILE_TYPE.ADD_POST})\nexport const updateNewPostMessage = (postMessage: string = ''): updateNewPostMessageActionCreatorType => {\n    return {type: ACTIONS_PROFILE_TYPE.UPDATE_NEW_POST_MESSAGE, postMessage: postMessage}\n}\nexport const removePost = (id: number): removePostActionCreatorType => ({type: ACTIONS_PROFILE_TYPE.REMOVE_POST, id})\nexport const addLike = (id: number): addLikeActionCreatorType => ({type: ACTIONS_PROFILE_TYPE.ADD_LIKE, id})\nexport const setProfile = (profile: ProfileType): setProfileACType => ({type: ACTIONS_PROFILE_TYPE.SET_PROFILE, profile})\nexport const setStatus = (status: string): SetStatusACType => ({status, type: ACTIONS_PROFILE_TYPE.SET_STATUS})\nexport const setFetching = (fetching: boolean): FetchingACType => ({fetching, type: ACTIONS_PROFILE_TYPE.TOGGLE_FETCHING})\n\n//thunk creators\nexport const getProfile = (userID: string) => (dispatch: Dispatch<ActionProfileReducerType>) => {\n    dispatch(setStatus(statuses.IN_PROGRESS))\n    dispatch(setFetching(false))\n    profileAPI.getProfile(userID)\n        .then((data) => {\n            dispatch(setProfile(data))\n            dispatch(setStatus(statuses.SUCCESS))\n            dispatch(setFetching(true))\n        })\n}\n\nexport default profileReducer\n","import axios, {AxiosResponse} from \"axios\";\nimport {AuthDataType, FollowResponse, ItemsType, ProfileType} from \"../entities/entities\";\n\nexport const axiosInstance = axios.create({\n    baseURL: 'https://social-network.samuraijs.com/api/1.0',\n    withCredentials: true,\n    headers: {\n        \"API-KEY\": \"ff96c8c6-9a67-45a6-8e7e-64655709b2bd\"\n    },\n})\n\nexport const usersAPI = {\n    getUsers: (pageSize: number, activePage: number) => {\n        return axiosInstance.get(`users?count=${pageSize}&page=${activePage}`)\n            .then((response: AxiosResponse<ItemsType>) => response.data)\n    },\n    unfollow: (userId: number) => {\n        return axiosInstance.delete(`follow/${userId}`)\n            .then((response: AxiosResponse<FollowResponse>) => response.data)\n    },\n    follow: (userId: number) => {\n        return axiosInstance.post(`follow/${userId}`)\n            .then((response: AxiosResponse<FollowResponse>) => response.data)\n    },\n}\n\nexport const profileAPI = {\n    getProfile: (userID: string) => {\n        return axiosInstance.get(`profile/${userID}`)\n            .then((response: AxiosResponse<ProfileType>) => response.data)\n    },\n}\n\nexport const authAPI = {\n    getAuth: () => {\n        return axiosInstance.get('auth/me')\n            .then((response: AxiosResponse<AuthDataType>) => response.data)\n    },\n}\n\n\n\n","import {statuses, UserType} from \"../entities/entities\";\nimport {usersAPI} from \"../api/api\";\nimport {Dispatch} from \"redux\";\n\n//constants\nenum ACTIONS_USER_REDUCER {\n    CHANGE_FOLLOWED_STATUS = 'CHANGE-FOLLOWED-STATUS',\n    SET_USERS = 'SONET/USERS/SET-USERS',  // уникализируем константу, чтобы избежать совпадений\n    SET_STATUS = 'SONET/USERS/SET-STATUS',\n    CHANGE_PAGE = 'SONET/USERS/CHANGE-PAGE',\n    SET_USERS_COUNT = 'SONET/USERS/SET-USERS-COUNT',\n    SET_LOADING = 'SONET/USERS/SET-LOADING',\n    SET_FOLLOWING = 'SONET/USERS/SET-FOLLOWING',\n}\n\n//initial state\nexport type initialUsersStateType = {\n    users: Array<UserType>\n    status: string\n    pageSize: number\n    totalUsersCount: number\n    activePage: number\n    isLoading: boolean\n    isFollowing: number[]\n}\n\nlet initialUsersState: initialUsersStateType = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    activePage: 1,\n    isLoading: true,\n    isFollowing: [],\n    status: statuses.NOT_INITIALIZED,\n}\n\n//reducer\nconst usersReducer = (state = initialUsersState, action: ActionUsersReducerType): initialUsersStateType => {\n    switch (action.type) {\n        case ACTIONS_USER_REDUCER.CHANGE_FOLLOWED_STATUS:\n            return {\n                ...state,\n                users: [...state.users.map(u => u.id === action.userID ? {...u, followed: action.isFollow} : u)]\n            }\n        case ACTIONS_USER_REDUCER.SET_USERS:\n            return {...state, users: [...action.users]}\n        case ACTIONS_USER_REDUCER.SET_STATUS:\n            return {...state, status: action.status}\n        case ACTIONS_USER_REDUCER.CHANGE_PAGE:\n            return {...state, activePage: action.page}\n        case ACTIONS_USER_REDUCER.SET_USERS_COUNT:\n            return {...state, totalUsersCount: action.usersCount}\n        case ACTIONS_USER_REDUCER.SET_LOADING:\n            return {...state, isLoading: action.loading}\n        case ACTIONS_USER_REDUCER.SET_FOLLOWING:\n            return {\n                ...state,\n                isFollowing: action.following ? [...state.isFollowing, action.userId]\n                    : state.isFollowing.filter(u => u !== action.userId)\n            }\n        default:\n            return state\n    }\n}\n\n//action types\nexport type ActionUsersReducerType = ChangeFollowedStatusACType\n    | SetUsersACType\n    | SetStatusACType\n    | ChangePageACType\n    | SetUsersCountACType\n    | LoadingACType\n    | FollowingACType\n\ntype ChangeFollowedStatusACType = { userID: number, isFollow: boolean, type: typeof ACTIONS_USER_REDUCER.CHANGE_FOLLOWED_STATUS }\ntype SetUsersACType = { users: UserType[], type: typeof ACTIONS_USER_REDUCER.SET_USERS }\ntype SetStatusACType = { status: string, type: typeof ACTIONS_USER_REDUCER.SET_STATUS }\ntype ChangePageACType = { page: number, type: typeof ACTIONS_USER_REDUCER.CHANGE_PAGE }\ntype SetUsersCountACType = { usersCount: number, type: typeof ACTIONS_USER_REDUCER.SET_USERS_COUNT }\ntype LoadingACType = { loading: boolean, type: typeof ACTIONS_USER_REDUCER.SET_LOADING }\ntype FollowingACType = { following: boolean, userId: number, type: typeof ACTIONS_USER_REDUCER.SET_FOLLOWING }\n\n//action creators\nexport const changeFollowedStatus = (userID: number, isFollow: boolean): ChangeFollowedStatusACType => {\n    return {userID, isFollow, type: ACTIONS_USER_REDUCER.CHANGE_FOLLOWED_STATUS}\n}\nexport const setUsers = (users: UserType[]): SetUsersACType => ({users, type: ACTIONS_USER_REDUCER.SET_USERS})\nexport const setStatus = (status: string): SetStatusACType => ({status, type: ACTIONS_USER_REDUCER.SET_STATUS})\nexport const changePage = (page: number): ChangePageACType => ({page, type: ACTIONS_USER_REDUCER.CHANGE_PAGE})\nexport const setUsersCount = (usersCount: number): SetUsersCountACType => ({\n    usersCount,\n    type: ACTIONS_USER_REDUCER.SET_USERS_COUNT\n})\nexport const setLoading = (loading: boolean): LoadingACType => ({loading, type: ACTIONS_USER_REDUCER.SET_LOADING})\nexport const setFollowing = (following: boolean, userId: number): FollowingACType => ({\n    following,\n    userId,\n    type: ACTIONS_USER_REDUCER.SET_FOLLOWING\n})\n\n//thunk creators\nexport const getUsers = (pageSize: number, activePage: number) => (dispatch: Dispatch<ActionUsersReducerType>) => {\n    dispatch(setStatus(statuses.IN_PROGRESS))\n    dispatch(setLoading(true))\n    usersAPI.getUsers(pageSize, activePage)\n        .then((data) => {\n            dispatch(setStatus(statuses.SUCCESS))\n            dispatch(setUsersCount(data.totalCount))\n            dispatch(setLoading(false))\n            dispatch(setUsers(data.items))\n        })\n}\nexport const follow = (userId: number) => (dispatch: Dispatch<ActionUsersReducerType>) => {\n    dispatch(setFollowing(true, userId))\n    usersAPI.follow(userId)\n        .then((data) => {\n            if (data.resultCode === 0) {\n                dispatch(changeFollowedStatus(userId, true))\n                dispatch(setFollowing(false, userId))\n            }\n        })\n}\nexport const unfollow = (userId: number) => (dispatch: Dispatch<ActionUsersReducerType>) => {\n    dispatch(setFollowing(true, userId))\n    usersAPI.unfollow(userId)\n        .then((data) => {\n            if (data.resultCode === 0) {\n                dispatch(changeFollowedStatus(userId, false))\n                dispatch(setFollowing(false, userId))\n            }\n        })\n}\n\nexport default usersReducer\n","export default __webpack_public_path__ + \"static/media/loading.bb27ba0a.gif\";","import s from \"./Preloader.module.css\";\nimport preloader from \"../../assets/images/loading.gif\";\nimport React from \"react\";\n\nexport const Preloader = () => {\n    return <div className={s.loadingBox}>\n        <img alt={'loading...'} className={s.loadingGif} src={preloader}/>\n        <div>Loading...</div>\n    </div>\n}","import React from 'react';\nimport {connect} from 'react-redux';\nimport {PostType, ProfileType, statuses} from \"../../entities/entities\";\nimport Profile from \"./Profile\";\nimport {StateType} from \"../../redux/redux-store\";\nimport {\n    addLike,\n    addPost,\n    removePost,\n    setProfile,\n    updateNewPostMessage,\n    setFetching,\n    setStatus,\n    getProfile\n} from \"../../redux/profile-reducer\";\nimport {Preloader} from \"../../common/preloader/Preloader\";\nimport {Redirect, RouteComponentProps, withRouter} from \"react-router\";\n\nclass ProfileContainer extends React.Component<ProfilePropsType> {\n\n    componentDidMount() {\n        let userID = this.props.match.params.userID\n        if (!userID) userID = '2'\n        if (this.props.status === statuses.NOT_INITIALIZED) {\n            this.props.getProfile(userID)\n        }\n    }\n\n    componentWillUnmount() {\n        this.props.setStatus(statuses.NOT_INITIALIZED)\n    }\n\n    render() {\n        if (!this.props.isAuth) return <Redirect to={'/login'}/>\n        return <>\n            {this.props.isFetching ?\n                <Profile\n                    {...this.props}\n                />\n                :\n                <Preloader/>\n            }\n        </>\n    }\n\n}\n\ntype MapStatePropsType = {\n    profile: ProfileType\n    posts: Array<PostType>\n    newPostMessage: string\n    status: string\n    isFetching: boolean\n    isAuth: boolean\n}\ntype MapDispatchPropsType = {\n    addPost: () => void\n    updateNewPostMessage: (postMessage: string) => void\n    removePost: (id: number) => void\n    addLike: (id: number) => void\n    setProfile: (profile: ProfileType) => void\n    setFetching: (fetching: boolean) => void\n    setStatus: (status: string) => void\n    getProfile: (userID: string) => void\n}\ntype OwnPropsType = MapStatePropsType & MapDispatchPropsType\ntype PathParamsType = { userID: string }\ntype ProfilePropsType = RouteComponentProps<PathParamsType> & OwnPropsType\n\nconst mapStateToProps = (state: StateType): MapStatePropsType => {\n    return {\n        profile: state.profile.profile,\n        posts: state.profile.posts,\n        newPostMessage: state.profile.newPostMessage,\n        isFetching: state.profile.isFetching,\n        status: state.profile.status,\n        isAuth: state.auth.isAuth,\n    }\n}\n\nconst ProfileContainerWithRouter = withRouter(ProfileContainer)\n\nexport default connect(mapStateToProps, {\n    addPost,\n    updateNewPostMessage,\n    removePost,\n    addLike,\n    setProfile,\n    setFetching,\n    setStatus,\n    getProfile,\n})(ProfileContainerWithRouter);\n\n","import React from \"react\";\nimport {statuses, UserType} from \"../../entities/entities\";\nimport s from \"./Users.module.css\";\nimport unknown from \"../../assets/images/unknown.png\";\nimport {NavLink} from \"react-router-dom\";\n\n//types\ntype UsersPropsType = {\n    users: Array<UserType>\n    status: string\n    activePage: number\n    totalUsersCount: number\n    pageSize: number\n    onClickPage: (page: number) => void\n    isFollowing: number[]\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n}\n\n//COMPONENT\nexport const Users: React.FC<UsersPropsType> = (props) => {\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\n    let pages = []\n    for (let i = 1; i <= 5; i++) {\n        pages.push(i)\n    }\n    pages.push('...')\n    pages.push(pagesCount)\n\n    const unfollow = (userId: number) => {\n        props.unfollow(userId)\n    }\n    const follow = (userId: number) => {\n        props.follow(userId)\n    }\n\n    return <>\n        {/*TITLE*/}\n        <p className={s.titlePage}>All users in SoNet</p>\n        <div className={s.container}>\n            {(!props.users.length && props.status === statuses.SUCCESS) &&\n            <span className={s.title} style={{margin: '20px'}}>Users not found</span>}\n\n            {/*USERS*/}\n            {props.users.map(u =>\n                <div key={u.id} className={s.friendBox}>\n                    <div className={s.imgBox}>\n\n                        {/*NAVLINK*/}\n                        <NavLink to={'/profile/' + u.id}>\n                            <img alt={u.name} src={u.photos.small || unknown} className={s.img}/>\n                        </NavLink>\n\n                        <button onClick={u.followed ? () => {\n                            unfollow(u.id)\n                        } : () => {\n                            follow(u.id)\n                        }}\n                                className={`${s.followBtn} ${u.followed ? s.red : s.green} ${props.isFollowing\n                                    .includes(u.id) ? s.disabled : ''}`}\n                                disabled={props.isFollowing.some(i => i === u.id)}>\n                            {u.followed ? 'UNFOLLOW' : 'FOLLOW'}\n                        </button>\n                    </div>\n                    <div className={s.infoBox}>\n                        <div>\n                            <p className={`${s.title} ${s.name}`}>Name: </p>\n                            <p className={`${s.description} ${s.name}`}>{u.name}</p>\n                        </div>\n                        <div className={s.infoBottom}>\n                            <div>\n                                <p className={s.title}>Status: </p>\n                                <p className={s.description}>{u.status || \"Nothing yet...\"}</p>\n                            </div>\n                            <div>\n                                <p className={s.title}>Location: </p>\n                                <p className={s.description}>{'location object will be here'}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            {/*PAGES*/}\n            <div>\n                {pages.map(p => {\n                    return p === '...' ?\n                        <span key={p + 'page'} className={s.pages}>...</span> :\n                        <span key={p + ' page'}\n                              onClick={() => props.onClickPage(+p)}\n                              className={props.activePage === p ? `${s.activePage} ${s.pages}` : s.pages}>{p}</span>\n                })}\n            </div>\n\n            {/*<button className={`${s.btn} ${s.showBtn}`}>SHOW MORE USERS</button>*/}\n        </div>\n    </>\n}\n\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {StateType} from \"../../redux/redux-store\";\nimport {changePage, follow, getUsers, unfollow} from \"../../redux/users-reducer\";\nimport {statuses, UserType} from \"../../entities/entities\";\nimport {Users} from \"./Users\";\nimport {Preloader} from \"../../common/preloader/Preloader\";\nimport {Redirect} from \"react-router\";\n\n//props\ninterface IUsersPropsType {\n    isLoading: boolean\n    changePage: (page: number) => void\n    getUsers: (pageSize: number, activePage: number) => void\n    users: Array<UserType>\n    status: string\n    activePage: number\n    totalUsersCount: number\n    pageSize: number\n    isFollowing: number[]\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n    isAuth: boolean\n}\n\ninterface IUsersState {\n}\n\n//COMPONENT\nclass UsersContainer extends React.Component<IUsersPropsType, IUsersState> {\n    componentDidMount() {\n        if (this.props.status === statuses.NOT_INITIALIZED) {\n            this.props.getUsers(this.props.pageSize, this.props.activePage)\n        }\n    }\n\n    onClickPage = (page: number) => {\n        this.props.changePage(page)\n        this.props.getUsers(this.props.pageSize, page)\n    }\n\n    render() {\n        if (!this.props.isAuth) return <Redirect to={'/login'}/>\n        return <>\n            {this.props.isLoading ?\n                <Preloader/>\n                :\n                <Users {...this.props} onClickPage={this.onClickPage}/>\n            }\n        </>\n    }\n}\n\nconst mapStateToProps = (state: StateType) => {\n    return {\n        users: state.users.users,\n        status: state.users.status,\n        pageSize: state.users.pageSize,\n        totalUsersCount: state.users.totalUsersCount,\n        activePage: state.users.activePage,\n        isLoading: state.users.isLoading,\n        isFollowing: state.users.isFollowing,\n        isAuth: state.auth.isAuth,\n    }\n}\n\nexport default connect(mapStateToProps,\n    {\n        changePage,\n        getUsers,\n        follow,\n        unfollow,\n    })(UsersContainer)","import React from 'react';\nimport s from './Header.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nfunction Header(props: {login: string, isAuth: boolean}) {\n    return (\n        <header>\n            <div className={s.logo}>\n                <img alt={'logo'} src='https://img.apksum.com/9f/nicola.web/2.7/icon.png'/>\n                <NavLink to=\"/profile\">SoNet</NavLink>\n            </div>\n\n            {props.isAuth ?\n                <div className={s.greeting}>Hello, {props.login}</div>\n                :\n                <NavLink to=\"/login\">LogIn</NavLink>\n            }\n        </header>\n    )\n}\n\nexport default Header;","import {Dispatch} from \"redux\";\nimport {authAPI} from \"../api/api\";\n\nenum ACTIONS_AUTH_REDUCER {\n    SET_USER_DATA = 'SET-USER-DATA',\n}\n\nexport type initialAuthStateType = {\n    id: number\n    email: string\n    login: string\n    isAuth: boolean\n}\n\nlet initialAuthState: initialAuthStateType = {\n    id: 0,\n    email: '',\n    login: '',\n    isAuth: false\n}\n\n//REDUCER\nconst authReducer = (state = initialAuthState, action: ActionAuthReducerType): initialAuthStateType => {\n\n    switch (action.type) {\n        case ACTIONS_AUTH_REDUCER.SET_USER_DATA:\n            return {...state, ...action.data, isAuth: true}\n        default:\n            return state;\n    }\n}\n\n//AC\nexport type ActionAuthReducerType = SetUserDataACType\n\ntype SetUserDataACType = { type: typeof ACTIONS_AUTH_REDUCER.SET_USER_DATA, data: {id: number, email: string, login: string} }\n\nexport const setAuthUserData = (id: number, email: string, login: string): SetUserDataACType => ({ type: ACTIONS_AUTH_REDUCER.SET_USER_DATA, data: {id, email, login} })\n\n//thunk\nexport const auth = () => (dispatch: Dispatch<ActionAuthReducerType>) => {\n    authAPI.getAuth().then((data) => {\n        if (data.resultCode === 0) {\n            dispatch(setAuthUserData(data.data.id, data.data.email, data.data.login))\n        }\n    })\n}\nexport default authReducer;","import React from \"react\";\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {auth, setAuthUserData} from \"../../redux/auth-reducer\";\nimport {StateType} from \"../../redux/redux-store\";\n\ntype HeaderProps = {\n    setAuthUserData: (id: number, email: string, login: string) => void\n    login: string\n    isAuth: boolean\n    auth: () => void\n}\n\nclass HeaderContainer extends React.Component<HeaderProps, any> {\n\n    componentDidMount() {\n        this.props.auth()\n    }\n\n    render() {\n        return <>\n            <Header {...this.props}/>\n        </>\n    }\n}\n\nexport default connect((state: StateType) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n}), {\n    setAuthUserData,\n    auth,\n})(HeaderContainer)","import React from 'react';\n\nfunction Login() {\n    return (\n        <div>\n            LOGIN PAGE\n        </div>\n    )\n}\n\nexport default Login;","import React from 'react';\nimport {Route} from \"react-router\";\nimport s from \"./App.module.css\";\nimport Footer from \"./components/Footer/Footer\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport UsersContainer from './components/Users/UsersContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from \"./login/Login\";\n\nfunction App() {\n    return (\n            <div className={s.appWrapper}>\n                <HeaderContainer/>\n                <main>\n                    <Navbar />\n                    <div className={s.content}>\n                        <Route path='/profile/:userID?' component={ProfileContainer}/>\n                        <Route path='/dialogs' component={DialogsContainer}/>\n                        <Route path='/users' component={UsersContainer}/>\n                        <Route path='/news' component={News}/>\n                        <Route path='/music' component={Music}/>\n                        <Route path='/settings' component={Settings}/>\n                        <Route path='/login' component={Login}/>\n                    </div>\n                </main>\n                <Footer/>\n            </div>\n    )\n}\n\nexport default App;\n","import {UserType} from \"../entities/entities\";\n\nenum ACTIONS_FRIENDS_REDUCER {\n    SET_FRIENDS = 'SET-FRIENDS',\n    SET_LOADING = 'SET-LOADING',\n}\n\ntype initialFriendsStateType = {\n    friends: Array<UserType>\n    isLoading: boolean\n}\nlet initialFriendsState: initialFriendsStateType = {\n    friends: [],\n    isLoading: true\n}\n\nconst friendsReducer = (state = initialFriendsState, action: ActionFriendsReducerType) => {\n    switch (action.type) {\n        case \"SET-FRIENDS\":\n            return {...state, friends: [...state.friends, action.friends]}\n        default:\n            return state;\n    }\n}\n\n//Action creators\nexport type ActionFriendsReducerType = SetFriendsACType | SetLoadingACType\n\ntype SetFriendsACType = { friends: UserType[], type: typeof ACTIONS_FRIENDS_REDUCER.SET_FRIENDS}\ntype SetLoadingACType = { loading: boolean, type: typeof ACTIONS_FRIENDS_REDUCER.SET_LOADING}\n\nexport const setFriends = (friends: UserType[]): SetFriendsACType => ({friends, type: ACTIONS_FRIENDS_REDUCER.SET_FRIENDS})\nexport const setLoading = (loading: boolean): SetLoadingACType => ({loading, type: ACTIONS_FRIENDS_REDUCER.SET_LOADING})\n\n\n\nexport default friendsReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport friendsReducer from \"./friends-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleware from 'redux-thunk'\n\nconst reducers = combineReducers({\n    profile: profileReducer,\n    dialogs: dialogsReducer,\n    friends: friendsReducer,\n    users: usersReducer,\n    auth: authReducer,\n})\n\nexport type StateType = ReturnType<typeof reducers>\n\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\n// @ts-ignore\nwindow.state= store.getState()\n\nexport default store;","import reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport store from \"./redux/redux-store\";\nimport {Provider} from 'react-redux'\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>, document.getElementById('root'))\n\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["components/Dialogs/DialogsMessages/Message/Message.module.css","components/Navbar/Navbar.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Dialogs/DialogsMessages/DialogsMessages.module.css","components/Profile/Profile.module.css","components/Navbar/FriendsPanel/Friend/Friend.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","App.module.css","components/Navbar/FriendsPanel/FriendsPanel.module.css","components/Users/Users.module.css","components/Header/Header.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Footer/Footer.module.css","reportWebVitals.ts","components/Header/Header.tsx","components/Footer/Footer.tsx","components/Navbar/FriendsPanel/Friend/Friend.tsx","assets/images/unknown.png","components/Navbar/FriendsPanel/FriendsPanel.tsx","components/Navbar/FriendsPanel/FriendsPanelContainer.tsx","components/Navbar/Navbar.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","redux/profile-reducer.ts","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/DialogsMessages/Message/Message.tsx","components/Dialogs/DialogsMessages/DialogsMessages.tsx","components/Dialogs/Dialogs.tsx","redux/dialogs-reducer.ts","components/Dialogs/DialogsContainer.tsx","redux/users-reducer.ts","entities/entities.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx","App.tsx","redux/friends-reducer.ts","redux/redux-store.ts","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","className","s","logo","src","to","Footer","href","Friend","props","friend","alt","name","img","FriendsPanel","friendsPanel","users","filter","u","followed","map","length","slice","photos","small","unknown","id","title","friends","FriendsPanelContainer","connect","state","usersPage","friendsPage","Navbar","navbar","activeClassName","active","other","ProfileInfo","profileInfo","avatar","div","description","Post","post","postContent","message","likesCount","onClick","addLike","like","removePost","button","MyPosts","postsElements","posts","newPostElement","React","createRef","addPostCallback","addPost","onKeyPress","event","key","preventDefault","value","newPostMessage","onChange","current","updateNewPostMessage","ref","textarea","placeholder","buttons","ADD_POST","UPDATE_NEW_POST_MESSAGE","REMOVE_POST","ADD_LIKE","initialProfileState","profileReducer","action","type","alert","newPost","postMessage","confirm","MyPostsContainer","profilePage","dispatch","updateNewPostMessageActionCreator","removePostActionCreator","addLikeActionCreator","Profile","imageBox","arrow","arrowRight","News","Music","Settings","DialogItem","dialog","Message","messageComponentMe","messageComponent","messageBabbleMe","messageBabble","tailMe","tail","messageBoxMe","messageBox","time","DialogsMessages","messagesElements","messages","index","newMessageElement","addMessageCallback","addMessage","dialogsMessages","sendBox","newMessage","changeNewMessage","Dialogs","dialogsElements","dialogs","dialogPage","dialogsColumn","messagesColumn","path","render","prop","match","params","find","d","ADD_MESSAGE","UPDATE_NEW_MESSAGE","initialDialogState","dialogsReducer","currentDialog","trim","DialogsContainer","dialogsPage","addMessageActionCreator","updateNewMessageActionCreator","CHANGE_FOLLOWED_STATUS","SET_USERS","SET_STATUS","statuses","initialUsersState","status","usersReducer","userID","axiosInstance","axios","create","baseURL","withCredentials","Users","this","setStatus","setTimeout","get","response","setUsers","data","items","prevProps","prevState","snapshot","titlePage","container","style","margin","friendBox","imgBox","changeFollowedStatus","followBtn","red","green","infoBox","infoBottom","btn","showBtn","Component","UsersContainer","changeFollowedStatusAC","setUsersAC","setStatusAC","App","appWrapper","content","component","initialFriendsState","friendsReducer","reducers","combineReducers","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22c3359b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageComponent\":\"Message_messageComponent__2_iBn\",\"messageComponentMe\":\"Message_messageComponentMe__1w1Wo\",\"img\":\"Message_img__3-T8Q\",\"time\":\"Message_time__oGKVI\",\"messageBabble\":\"Message_messageBabble__2EWNh\",\"messageBabbleMe\":\"Message_messageBabbleMe__1DfI-\",\"tail\":\"Message_tail__3RUok\",\"tailMe\":\"Message_tailMe__m4hsZ\",\"messageBox\":\"Message_messageBox__1ynL0\",\"messageBoxMe\":\"Message_messageBoxMe__3KXIW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__CLYHD\",\"other\":\"Navbar_other__vqMC5\",\"active\":\"Navbar_active__3mbhk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__A0EJd\",\"postContent\":\"Post_postContent__dePS0\",\"avatar\":\"Post_avatar__1wBwP\",\"message\":\"Post_message__3raFK\",\"like\":\"Post_like__oViQh\",\"likesCount\":\"Post_likesCount__R9C9-\",\"button\":\"Post_button__2dr5U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"MyPosts_title__3q_Ko\",\"textarea\":\"MyPosts_textarea__3KLbu\",\"buttons\":\"MyPosts_buttons__2wUXL\",\"button\":\"MyPosts_button__2WbpQ\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsMessages\":\"DialogsMessages_dialogsMessages__3QP42\",\"messages\":\"DialogsMessages_messages__3fvU4\",\"sendBox\":\"DialogsMessages_sendBox__3hn7h\",\"textarea\":\"DialogsMessages_textarea__3H-Xz\",\"button\":\"DialogsMessages_button__2YtVE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageBox\":\"Profile_imageBox__1et71\",\"arrow\":\"Profile_arrow__te3cM\",\"arrowRight\":\"Profile_arrowRight__3ifeA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__3qKjq\",\"img\":\"Friend_img__3KzQt\",\"name\":\"Friend_name__33ANY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogPage\":\"Dialogs_dialogPage__3cRJY\",\"dialogsColumn\":\"Dialogs_dialogsColumn__y5DL0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3tDA2\",\"img\":\"DialogItem_img__30y70\",\"active\":\"DialogItem_active__2qnc5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__3rnam\",\"content\":\"App_content__3La4L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"FriendsPanel_title__2_gYF\",\"friends\":\"FriendsPanel_friends__3pdJ2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Users_titlePage__-qQrJ\",\"container\":\"Users_container__6F9oG\",\"friendBox\":\"Users_friendBox__2qTnN\",\"imgBox\":\"Users_imgBox__3UYsy\",\"img\":\"Users_img__3OuDf\",\"followBtn\":\"Users_followBtn__3m1nP\",\"btn\":\"Users_btn__9AIH5\",\"red\":\"Users_red__3k9_c\",\"green\":\"Users_green__2qlvh\",\"infoBox\":\"Users_infoBox__m1z_G\",\"infoBottom\":\"Users_infoBottom__3bLuP\",\"title\":\"Users_title__2S65O\",\"name\":\"Users_name__3Kys8\",\"description\":\"Users_description__QFQc5\",\"showBtn\":\"Users_showBtn__1c0oR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__3_SJs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__2IJgv\",\"avatar\":\"ProfileInfo_avatar__3xuFq\",\"div\":\"ProfileInfo_div__3At7N\",\"title\":\"ProfileInfo_title__2t6A6\",\"description\":\"ProfileInfo_description__2yWda\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Footer_logo__3ACxa\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport s from './Header.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nfunction Header() {\n    return (\n        <header>\n            <div className={s.logo}>\n                <img src='https://img.apksum.com/9f/nicola.web/2.7/icon.png'/>\n                <NavLink to=\"/profile\">SoNet</NavLink>\n            </div>\n            <div></div>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport './Footer.module.css';\n\nfunction Footer() {\n    return (\n        <footer>&copy; My first site on &nbsp;<a href='#'>React</a></footer>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport s from './Friend.module.css';\n\ntype FriendPropsType = {\n    name: string,\n    img: string\n}\n\nfunction Friend(props: FriendPropsType) {\n    debugger\n    return (\n        <div className={s.friend}>\n            <img alt={props.name} src={props.img} className={s.img}/>\n            <p className={s.name}>{props.name}</p>\n        </div>\n    )\n}\n\nexport default Friend;","export default __webpack_public_path__ + \"static/media/unknown.dc967cb3.png\";","import React from 'react';\nimport s from './FriendsPanel.module.css';\nimport Friend from \"./Friend/Friend\";\nimport {UserType} from \"../../../entities/entities\";\nimport unknown from '../../../assets/images/unknown.png'\n\ntype FriendsPanelPropsType = {\n    users: Array<UserType>\n    friends: Array<UserType>\n}\n\nfunction FriendsPanel(props: FriendsPanelPropsType) {\n\n    let friendsPanel =\n        props.users\n            .filter(u => u.followed)\n            .map(friend =>\n                <Friend\n                    key={friend.id}\n                    name={friend.name.length > 8 ? (friend.name.slice(0, 7) + '...') : friend.name}\n                    img={friend.photos.small || unknown}/>)\n\n    return (\n        <div>\n            <p className={s.title}>Friends</p>\n            <div className={s.friends}>\n                {friendsPanel}\n            </div>\n        </div>\n    )\n}\n\nexport default FriendsPanel;","import React from 'react';\nimport {StateType} from \"../../../redux/redux-store\";\nimport {connect} from \"react-redux\";\nimport FriendsPanel from \"./FriendsPanel\";\n\nconst mapStateProps = (state: StateType) => {\n    return {\n        users: state.usersPage.users,\n        friends: state.friendsPage.friends\n    }\n}\nconst mapDispatchProps = () => {return {}}\n\nconst FriendsPanelContainer = connect(mapStateProps, mapDispatchProps) (FriendsPanel)\n\nexport default FriendsPanelContainer;","import React from 'react';\nimport s from './Navbar.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport FriendsPanelContainer from \"./FriendsPanel/FriendsPanelContainer\";\n\nfunction Navbar() {\n    return (\n        <aside>\n            <nav className={s.navbar}>\n                <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\n                <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\n                <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\n                <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\n                <NavLink to=\"/users\" activeClassName={s.active} className={s.other}>Find users</NavLink>\n                <NavLink to=\"/settings\" activeClassName={s.active} className={s.other}>Settings</NavLink>\n                <FriendsPanelContainer />\n            </nav>\n        </aside>\n    )\n}\n\nexport default Navbar;","import React from 'react';\nimport s from './ProfileInfo.module.css';\n\nfunction ProfileInfo() {\n    return (\n        <div className={s.profileInfo}>\n            <img className={s.avatar} src='https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-58-696x696.jpg' alt='avatar'/>\n            <div>\n                <div className={s.div}>\n                    <p className={s.title}>Name: </p>\n                    <p className={s.description}>Olga Marhulevich</p>\n                </div>\n                <div className={s.div}>\n                    <p className={s.title}>Location: </p>\n                    <p className={s.description}>Belarus, Gomel</p>\n                </div>\n                <div className={s.div}>\n                    <p className={s.title}>Status: </p>\n                    <p className={s.description}>Such a good day! =)</p>\n                </div>\n                <div>\n                    <p className={s.title}>About me: </p>\n                    <p className={s.description}>\n                        Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n                        Aenean commodo ligula eget dolor. Aenean massa.\n                        Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.\n                        Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem.\n                        Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec.\n                    </p>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport s from './Post.module.css';\n\n\ntype PostPropsType = {\n    id: number\n    message: string\n    likesCount: number\n    removePost: (id: number) => void\n    addLike: (id: number) => void\n}\n\nfunction Post (props: PostPropsType) {\n\n    const removePostCallback = () => {\n        props.removePost(props.id)\n    }\n    const addLikeCallback = () => {\n        props.addLike(props.id)\n    }\n\n    return (\n        <div className={s.post}>\n            <div className={s.postContent}>\n                <img className={s.avatar}\n                    src='https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-58-696x696.jpg' alt='Avatar'/>\n                <div className={s.message}>{props.message}</div>\n            </div>\n\n            <div>\n                <span className={s.likesCount}>{props.likesCount} likes</span>\n                <button onClick={addLikeCallback} className={s.like}>Like!</button>\n                <button onClick={removePostCallback} className={s.button}>Remove post</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Post;","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\nimport {PostType} from \"../../../entities/entities\";\n\ntype MyPostsPropsType = {\n    posts: Array<PostType>\n    newPostMessage: string\n    addPost: () => void\n    updateNewPostMessage: (newPostMessage: string) => void\n    removePost: (id: number) => void\n    addLike: (id: number) => void\n}\n\nfunction MyPosts(props: MyPostsPropsType) {\n\n    const postsElements =\n        props.posts.map(post =>\n           <Post key={post.id}\n                 id={post.id}\n                 message={post.message}\n                 likesCount={post.likesCount}\n                 removePost={(id) => props.removePost(id)}\n                 addLike={(id) => props.addLike(id)}/>)\n\n    const newPostElement = React.createRef<HTMLTextAreaElement>();\n\n    const addPostCallback = () => {\n        props.addPost()\n    }\n    const changeNewPostMessage = () => {\n        const newPostMessage = newPostElement.current?.value\n        newPostMessage && props.updateNewPostMessage(newPostMessage)\n    }\n\n    const enterPressed = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n        if (event.key === 'Enter') {\n            event.preventDefault()\n            addPostCallback()\n        }\n    }\n\n    return (\n        <div>\n            <p className={s.title}>My Posts</p>\n            <div>\n                <textarea onKeyPress={enterPressed} value={props.newPostMessage} onChange={changeNewPostMessage} ref={newPostElement} className={s.textarea} placeholder='Your message...'/>\n                <div className={s.buttons}>\n                    <button onClick={addPostCallback} className={s.button}>Add post</button>\n                </div>\n            </div>\n            <div className={s.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n}\n\nexport default MyPosts;","import {PostType} from \"../entities/entities\"\n\nconst ADD_POST = 'ADD-POST'\nconst UPDATE_NEW_POST_MESSAGE = 'UPDATE-NEW-POST-MESSAGE'\nconst REMOVE_POST = 'REMOVE-POST'\nconst ADD_LIKE = 'ADD-LIKE'\n\nexport type initialProfileStateType = {\n    posts: Array<PostType>\n    newPostMessage: string\n}\nlet initialProfileState: initialProfileStateType = {\n    posts: [\n        {id: 1, message: 'It is my first post!', likesCount: 25},\n        {id: 2, message: 'How are you?', likesCount: 15},\n    ],\n    newPostMessage: ''\n}\n\nconst profileReducer = (state = initialProfileState, action: ActionProfileReducerType): initialProfileStateType => {\n\n    switch (action.type) {\n        case ADD_POST: {\n            if (state.newPostMessage === '') {\n                alert('Message could not be empty!')\n                return state\n            }\n            const newPost = {\n                id: state.posts.length + 1,\n                message: state.newPostMessage,\n                likesCount: 0\n            }\n            return {...state, posts: [...state.posts, newPost], newPostMessage: ''}\n        }\n        case UPDATE_NEW_POST_MESSAGE: {\n            return {...state, newPostMessage: action.postMessage}\n        }\n        case REMOVE_POST: {\n            // eslint-disable-next-line no-restricted-globals\n            if (confirm('Delete this post?')) {\n                return {...state, posts: state.posts.filter(post => post.id !== action.id), newPostMessage: ''}\n            }\n            return state\n        }\n        case ADD_LIKE: {\n            return {\n                ...state,\n                posts: state.posts.map(post => post.id === action.id ? {...post, likesCount: ++post.likesCount} : post),\n                newPostMessage: ''\n            }\n        }\n        default:\n            return state\n    }\n}\n\n//Action creators\nexport type ActionProfileReducerType = addPostActionCreatorType\n    | updateNewPostMessageActionCreatorType\n    | removePostActionCreatorType\n    | addLikeActionCreatorType\n\ntype addPostActionCreatorType = { type: typeof ADD_POST }\ntype updateNewPostMessageActionCreatorType = { type: typeof UPDATE_NEW_POST_MESSAGE, postMessage: string }\ntype removePostActionCreatorType = { type: typeof REMOVE_POST, id: number }\ntype addLikeActionCreatorType = { type: typeof ADD_LIKE, id: number }\n\nexport const addPostActionCreator = (): addPostActionCreatorType => ({type: ADD_POST})\nexport const updateNewPostMessageActionCreator = (postMessage: string = ''): updateNewPostMessageActionCreatorType => {\n    return {type: UPDATE_NEW_POST_MESSAGE, postMessage: postMessage}\n}\nexport const removePostActionCreator = (id: number): removePostActionCreatorType =>\n    ({type: REMOVE_POST, id: id})\nexport const addLikeActionCreator = (id: number): addLikeActionCreatorType =>\n    ({type: ADD_LIKE, id: id})\n\n\nexport default profileReducer\n","import React from 'react';\nimport {ActionType, StateType} from \"../../../redux/redux-store\";\nimport MyPosts from './MyPosts';\nimport {connect} from 'react-redux';\nimport {\n    addLikeActionCreator,\n    addPostActionCreator,\n    removePostActionCreator,\n    updateNewPostMessageActionCreator\n} from \"../../../redux/profile-reducer\";\n\nconst mapStateToProps = (state: StateType) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostMessage: state.profilePage.newPostMessage\n    }\n}\nconst mapDispatchToProps = (dispatch: (action: ActionType) => void) => {\n    return {\n        updateNewPostMessage: (newPostMessage: string) => dispatch(updateNewPostMessageActionCreator(newPostMessage)),\n        addPost: () => dispatch(addPostActionCreator()),\n        removePost: (id: number) => dispatch(removePostActionCreator(id)),\n        addLike: (id: number) => dispatch(addLikeActionCreator(id))\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts)\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport s from './Profile.module.css'\n\nfunction Profile() {\n    return (\n        <div>\n            <ProfileInfo />\n            <div className={s.imageBox}>\n                <img src={'https://piaspb.ru/img/new-img/arrows-l.png'} className={s.arrow}/>\n                <img src={'https://piaspb.ru/img/new-img/arrows-l.png'} className={`${s.arrow} ${s.arrowRight}`}/>\n            </div>\n            <MyPostsContainer />\n        </div>\n    )\n}\n\nexport default Profile;","import React from \"react\";\nimport s from './News.module.css';\n\nfunction News() {\n    return (\n        <div>\n            News\n        </div>\n    )\n}\n\nexport default News;\n","import React from \"react\";\nimport s from './Music.module.css';\n\nfunction Music() {\n    return (\n        <div>\n            Music\n        </div>\n    )\n}\n\nexport default Music;\n","import React from \"react\";\nimport s from './Settings.module.css';\n\nfunction Settings() {\n    return (\n        <div>\n            Settings\n        </div>\n    )\n}\n\nexport default Settings;\n","import React from \"react\";\nimport s from './DialogItem.module.css';\nimport {NavLink} from \"react-router-dom\";\n\ntype DialogItemPropsType = {\n    id: number,\n    name: string,\n    img: string\n}\n\nfunction DialogItem(props: DialogItemPropsType) {\n    return (\n        <div>\n            <NavLink to={'/dialogs/' + props.id} className={s.dialog} activeClassName={s.active}>\n                <img className={s.img} src={props.img} alt={props.name}/>\n                {props.name}\n            </NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem;\n","import React from \"react\";\nimport s from './Message.module.css';\n\ntype MessagePropsType = {\n    message: string,\n    name: string,\n    img: string\n}\n\nfunction Message(props: MessagePropsType) {\n\n    const messageComponentFrom = () => {\n        return (props.name === 'Me') ? s.messageComponentMe : s.messageComponent\n    }\n    const messageBabbleFrom = () => {\n        return (props.name === 'Me') ? s.messageBabbleMe : s.messageBabble\n    }\n    const tailFrom = () => {\n        return (props.name === 'Me') ? s.tailMe : s.tail\n    }\n\n    const messageBoxFrom = () => {\n        return (props.name === 'Me') ? s.messageBoxMe : s.messageBox\n    }\n\n\n    return (\n        <div className={messageComponentFrom()}>\n            <img className={s.img} src={props.img} alt=\"avatar\"/>\n            <div className={messageBabbleFrom()}>\n                <div className={tailFrom()}/>\n                <div className={messageBoxFrom()}>\n                    <div className={s.message}>{props.message}</div>\n                    <div className={s.time}>22:00</div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message;\n","import s from \"../DialogsMessages/DialogsMessages.module.css\";\nimport React from \"react\";\nimport Message from \"./Message/Message\";\nimport {DialogType} from \"../../../entities/entities\";\n\ntype DialogsMessagesPropsType = {\n    dialog: DialogType\n    addMessage: (id: number) => void\n    changeNewMessage: (newMessage: string, id: number) => void\n}\n\nexport const DialogsMessages = (props: DialogsMessagesPropsType) => {\n\n    const messagesElements = props.dialog.messages.map((message, index) =>\n        <Message key={index} name={message.name} img={message.img} message={message.message}/>)\n\n    const newMessageElement = React.createRef<HTMLTextAreaElement>();\n\n    const addMessageCallback = () => {\n        props.addMessage(props.dialog.id)\n    }\n    const changeNewMessage = () => {\n        const newMessage = newMessageElement.current?.value;\n        newMessage && props.changeNewMessage(newMessage, props.dialog.id)\n    }\n\n    const enterPressed = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            addMessageCallback()\n        }\n    }\n\n    return (\n        <div className={s.dialogsMessages}>\n            <div className={s.messages}>\n                { messagesElements}\n            </div>\n            <div className={s.sendBox}>\n                <textarea onKeyPress={enterPressed} value={props.dialog.newMessage} onChange={changeNewMessage}\n                          ref={newMessageElement} placeholder={'Text your message...'} className={s.textarea}/>\n                <button onClick={addMessageCallback} className={s.button}>Send</button>\n            </div>\n\n\n        </div>\n\n    )\n}","import React from \"react\";\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport {DialogsMessages} from \"./DialogsMessages/DialogsMessages\";\nimport {Route} from \"react-router\";\nimport {DialogType} from \"../../entities/entities\";\n\ntype DialogsPropsType = {\n    dialogs: DialogType[]\n    addMessage: (id: number) => void\n    changeNewMessage: (newMessage: string, id: number) => void\n}\n\nfunction Dialogs(props: DialogsPropsType) {\n\n    const dialogsElements = props.dialogs.map(dialog =>\n        <DialogItem key={dialog.id} img={dialog.img} id={dialog.id} name={dialog.name}/>)\n\n    return (\n        <div className={s.dialogPage}>\n            <div className={s.dialogsColumn}>\n                {dialogsElements}\n            </div>\n\n            <div className={s.messagesColumn}>\n\n                <Route path='/dialogs/:id' render={(prop) => {\n                    const id = prop.match.params.id;\n                    const dialog = props.dialogs.find(d => d.id === +id);\n                    return (\n                        dialog && <DialogsMessages\n                            dialog={dialog}\n                            addMessage={(id) => props.addMessage(id)}\n                            changeNewMessage={(newMessage, id) => props.changeNewMessage(newMessage, id)}/>\n                    )\n                }\n                }/>\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs;\n","import {DialogType} from \"../entities/entities\";\n\nconst ADD_MESSAGE = 'ADD-MESSAGE';\nconst UPDATE_NEW_MESSAGE = 'UPDATE-NEW-MESSAGE';\n\nexport type initialDialogsStateType = {\n    dialogs: Array<DialogType>\n}\nlet initialDialogState: initialDialogsStateType = {\n    dialogs: [\n        {\n            id: 1,\n            name: 'Nick',\n            img: 'https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg',\n            messages: [\n                {\n                    message: 'Hi!',\n                    name: 'Nick',\n                    img: 'https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg'\n                },\n                {\n                    message: 'How are you?',\n                    name: 'Nick',\n                    img: 'https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg'\n                },\n                {\n                    message: 'Yo',\n                    name: 'Me',\n                    img: 'https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-58-696x696.jpg'\n                },\n                {\n                    message: \"I'm fine! How're you?\",\n                    name: 'Me',\n                    img: 'https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-58-696x696.jpg'\n                },\n            ],\n            newMessage: ''\n        },\n        {\n            id: 2, name: 'Jhon', img: 'https://vraki.net/sites/default/files/inline/images/30_55.jpg',\n            messages: [\n                {\n                    message: 'Hi!',\n                    name: 'Jhon',\n                    img: 'https://vraki.net/sites/default/files/inline/images/30_55.jpg'\n                }],\n            newMessage: ''\n        },\n        {\n            id: 3, name: 'Anna', img: 'https://pixelbox.ru/wp-content/uploads/2021/04/ava-mult-vk-78.jpg',\n            messages: [\n                {\n                    message: 'Hi!',\n                    name: 'Anna',\n                    img: 'https://pixelbox.ru/wp-content/uploads/2021/04/ava-mult-vk-78.jpg'\n                }],\n            newMessage: ''\n        },\n    ]\n}\n\nconst dialogsReducer = (state = initialDialogState, action: ActionDialogsReducerType): initialDialogsStateType => {\n\n    switch (action.type) {\n        case ADD_MESSAGE: {\n            const currentDialog = state.dialogs.find(d => d.id === action.id) as DialogType\n            if (!currentDialog.newMessage.trim()) {\n                return {...state, dialogs: state.dialogs.map(d => d.id === action.id ? {...d, newMessage: ''} : d)}\n            }\n            const newMessage = {\n                message: currentDialog.newMessage,\n                name: 'Me',\n                img: 'https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-58-696x696.jpg'\n            }\n            return {\n                ...state,\n                dialogs: state.dialogs\n                    .map(d => d.id === action.id ? {...d, messages: [...d.messages, newMessage], newMessage: ''} : d)\n            }\n        }\n        case UPDATE_NEW_MESSAGE: {\n            return {...state, dialogs: state.dialogs.map(d => d.id === action.id ? {...d, newMessage: action.message} : d)}\n        }\n        default:\n            return state;\n    }\n}\n\n//Action creators\nexport type ActionDialogsReducerType = addMessageActionCreatorType | updateNewMessageActionCreatorType\n\ntype addMessageActionCreatorType = { type: typeof ADD_MESSAGE, id: number }\ntype updateNewMessageActionCreatorType = { type: typeof UPDATE_NEW_MESSAGE, message: string, id: number }\n\nexport const addMessageActionCreator = (id: number): addMessageActionCreatorType => ({type: ADD_MESSAGE, id: id});\nexport const updateNewMessageActionCreator = (message: string = '', id: number): updateNewMessageActionCreatorType => {\n    return {type: UPDATE_NEW_MESSAGE, message: message, id: id};\n}\n\nexport default dialogsReducer;","import React from \"react\";\nimport Dialogs from \"./Dialogs\";\nimport {ActionType, StateType} from \"../../redux/redux-store\";\nimport {addMessageActionCreator, updateNewMessageActionCreator} from \"../../redux/dialogs-reducer\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = (state: StateType) => {\n    return {\n        dialogs: state.dialogsPage.dialogs\n    }\n}\nconst mapDispatchToProps = (dispatch: (action: ActionType) => void) => {\n    return {\n        addMessage: (id: number) => dispatch(addMessageActionCreator(id)),\n        changeNewMessage: (newMessage: string, id: number) => dispatch(updateNewMessageActionCreator(newMessage, id))\n    }\n}\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps) (Dialogs)\n\nexport default DialogsContainer;\n","import { UserType } from \"../entities/entities\";\n\n//constants\nexport const CHANGE_FOLLOWED_STATUS = 'CHANGE-FOLLOWED-STATUS'\nexport const SET_USERS = 'SONET/USERS/SET-USERS'   // уникализируем константу, чтобы избежать совпадений\nexport const SET_STATUS = 'SONET/USERS/SET-STATUS'\n\nexport const statuses = {\n    NOT_INITIALIZED: 'NOT-INITIALIZED',\n    ERRORS: 'ERRORS',\n    IN_PROGRESS: 'IN-PROGRESS',\n    SUCCESS: 'SUCCESS'\n}\n\n//initial state\nexport type initialUsersStateType = {\n    users: Array<UserType>\n    status: string\n}\n\nlet initialUsersState: initialUsersStateType = {\n    users: [],\n    status: statuses.NOT_INITIALIZED\n}\n\n//reducer\nconst usersReducer = (state = initialUsersState, action: ActionUsersReducerType): initialUsersStateType => {\n\n    switch (action.type) {\n        case CHANGE_FOLLOWED_STATUS:\n            return {...state, users: state.users.map(u => action.userID === u.id ? {...u, followed: !u.followed} : u)}\n        case SET_USERS:\n            return {...state, users: [...state.users, ...action.users]}\n        case SET_STATUS:\n            return {...state, status: action.status}\n        default:\n            return state\n    }\n}\n\n//action types\nexport type ActionUsersReducerType = ChangeFollowedStatusType | SetUsersType | SetStatusType\n\ntype ChangeFollowedStatusType = {userID: number, type: typeof CHANGE_FOLLOWED_STATUS}\ntype SetUsersType = {users: UserType[], type: typeof SET_USERS}\ntype SetStatusType = {status: string, type: typeof SET_STATUS}\n\n//action creators\nexport const changeFollowedStatusAC = (userID: number): ChangeFollowedStatusType => {\n    return {userID, type: CHANGE_FOLLOWED_STATUS}\n}\nexport const setUsersAC = (users: UserType[]): SetUsersType => ({users, type: SET_USERS})\nexport const setStatusAC = (status: string): SetStatusType => ({status, type: SET_STATUS})\n\nexport default usersReducer\n","import axios from \"axios\";\n\nexport type PostType = {\n    id: number,\n    message: string,\n    likesCount: number\n}\n\nexport type DialogType = {\n    id: number\n    name: string\n    img: string\n    messages: Array<MessageType>\n    newMessage: string\n}\nexport type MessageType = {\n    message: string\n    name: string\n    img: string\n}\n\nexport type UserType = {\n    name: string\n    id: number\n    uniqueUrlName: string\n    photos: {\n        small: string\n        large: string\n    }\n    status: string\n    followed: boolean\n}\n\nexport type ItemsType = {\n    items: UserType[]\n    totalCount: number\n    error: string\n}\n\nexport const axiosInstance = axios.create({baseURL: 'https://social-network.samuraijs.com/api/1.0', withCredentials: true})","import React from \"react\";\nimport {axiosInstance, ItemsType, UserType} from \"../../entities/entities\";\nimport {AxiosResponse} from \"axios\";\nimport s from \"./Users.module.css\";\nimport unknown from \"../../assets/images/unknown.png\";\nimport {statuses} from \"../../redux/users-reducer\";\n\ninterface IUsersPropsType {\n    users: Array<UserType>\n    status: string\n    changeFollowedStatus: (userID: number) => void\n    setUsers: (users: UserType[]) => void\n    setStatus: (status: string) => void\n}\n\ninterface IUsersState {\n\n}\n\nexport class Users extends React.Component<IUsersPropsType, IUsersState> {\n\n    componentDidMount() {\n        //if (this.props.users.length === 0) {\n        if (this.props.status === statuses.NOT_INITIALIZED) {\n            this.props.setStatus(statuses.IN_PROGRESS)\n            setTimeout(() => axiosInstance.get(\"users?count=5\")\n                .then((response: AxiosResponse<ItemsType>) => {\n                    this.props.setStatus(statuses.SUCCESS)\n                    //with photo:\n                    //const items = response.data.items.filter(u => u.photos.small !== null)\n                    return this.props.setUsers(response.data.items)\n                }), 3000) //setTimeout - fake\n        }\n\n        /*alert('component did mount')*/\n    }\n\n    componentDidUpdate(prevProps: Readonly<IUsersPropsType>, prevState: Readonly<IUsersState>, snapshot?: any) {\n\n        /*alert('component did update')*/\n    }\n\n    render() {\n        return <>\n            <p className={s.titlePage}>All users in SoNet</p>\n            <div className={s.container}>\n                {(!this.props.users.length && this.props.status === statuses.SUCCESS) &&\n                <span className={s.title} style={{margin: '20px'}}>Users not found</span>}\n                {this.props.users\n                    /*.sort((x, y) => (x.followed === y.followed)? 0 : x.followed? -1 : 1)*/\n                    .map(u =>\n                        <div key={u.id} className={s.friendBox}>\n                            <div className={s.imgBox}>\n                                <img alt={u.name} src={u.photos.small || unknown} className={s.img}/>\n                                <button onClick={() => this.props.changeFollowedStatus(u.id)}\n                                        className={`${s.followBtn} ${u.followed ? s.red : s.green}`}>\n                                    {u.followed ? 'UNFOLLOW' : 'FOLLOW'}\n                                </button>\n                            </div>\n                            <div className={s.infoBox}>\n                                <div>\n                                    <p className={`${s.title} ${s.name}`}>Name: </p>\n                                    <p className={`${s.description} ${s.name}`}>{u.name}</p>\n                                </div>\n                                <div className={s.infoBottom}>\n                                    <div>\n                                        <p className={s.title}>Status: </p>\n                                        <p className={s.description}>{u.status || \"Nothing yet...\"}</p>\n                                    </div>\n                                    <div>\n                                        <p className={s.title}>Location: </p>\n                                        <p className={s.description}>{'location object will be here'}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n\n                <button className={`${s.btn} ${s.showBtn}`}>SHOW MORE USERS</button>\n            </div>\n        </>\n    }\n}\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {ActionType, StateType} from \"../../redux/redux-store\";\nimport {changeFollowedStatusAC, setStatusAC, setUsersAC} from \"../../redux/users-reducer\";\nimport {UserType} from \"../../entities/entities\";\nimport { Users } from \"./Users\";\n\nconst mapStateToProps = (state: StateType) => {\n    return {\n        users: state.usersPage.users,\n        status: state.usersPage.status\n    }\n}\n\nconst mapDispatchToProps = (dispatch: (action: ActionType) => void) => {\n    return {\n        changeFollowedStatus: (userID: number) => dispatch(changeFollowedStatusAC(userID)),\n        setUsers: (users: UserType[]) => dispatch(setUsersAC(users)),\n        setStatus: (status: string) => dispatch(setStatusAC(status))\n    }\n}\n\nexport const UsersContainer = connect(mapStateToProps, mapDispatchToProps) (Users)","import React from 'react';\nimport {Route} from \"react-router\";\nimport s from \"./App.module.css\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Profile from \"./components/Profile/Profile\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport {UsersContainer} from \"./components/Users/UsersContainer\";\n\nfunction App() {\n    return (\n            <div className={s.appWrapper}>\n                <Header/>\n                <main>\n                    <Navbar />\n                    <div className={s.content}>\n                        <Route path='/profile' render={() =>\n                            <Profile />}/>\n                        \n                        <Route path='/dialogs' render={() =>\n                            <DialogsContainer />}/>\n\n                        <Route path='/users' render={() =>\n                            <UsersContainer />}/>\n\n                        <Route path='/news' component={News}/>\n                        <Route path='/music' component={Music}/>\n                        <Route path='/settings' component={Settings}/>\n                    </div>\n                </main>\n                <Footer/>\n            </div>\n    )\n}\n\nexport default App;\n","import { UserType } from \"../entities/entities\";\n\nlet initialFriendsState = {\n    friends: []\n}\n\ntype initialFriendsStateType = {\n    friends: Array<UserType>\n}\n\nconst friendsReducer = (state: initialFriendsStateType = initialFriendsState, action: ActionFriendsReducerType) => {\n    return state;\n}\n\n//Action creators\n\nexport type ActionFriendsReducerType = {type: 'FRIENDS'}\n\nexport default friendsReducer;","import {combineReducers, createStore} from \"redux\";\nimport profileReducer, {ActionProfileReducerType} from \"./profile-reducer\";\nimport dialogsReducer, {ActionDialogsReducerType} from \"./dialogs-reducer\";\nimport friendsReducer, {ActionFriendsReducerType} from \"./friends-reducer\";\nimport { Store } from \"redux\";\nimport usersReducer, {ActionUsersReducerType} from \"./users-reducer\";\n\nconst reducers = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    friendsPage: friendsReducer,\n    usersPage: usersReducer\n})\n\nexport type StateType = ReturnType<typeof reducers>\nexport type ActionType = ActionProfileReducerType | ActionDialogsReducerType | ActionFriendsReducerType | ActionUsersReducerType\n\nconst store: Store = createStore(reducers);\n\nexport default store;","import reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport store from \"./redux/redux-store\";\nimport {Provider} from 'react-redux'\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>, document.getElementById('root'))\n\nreportWebVitals();\n"],"sourceRoot":""}
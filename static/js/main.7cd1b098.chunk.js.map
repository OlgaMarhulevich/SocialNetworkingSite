{"version":3,"sources":["components/Footer/Footer.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Dialogs/DialogsMessages/Message/Message.module.css","reportWebVitals.ts","components/Footer/Footer.tsx","components/Navbar/FriendsPanel/Friend/Friend.tsx","assets/images/unknown.png","components/Navbar/FriendsPanel/FriendsPanel.tsx","components/Navbar/FriendsPanel/FriendsPanelContainer.tsx","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/DialogsMessages/Message/Message.tsx","components/Dialogs/DialogsMessages/DialogsMessages.tsx","components/Dialogs/Dialogs.tsx","redux/dialogs-reducer.ts","hoc/withAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","entities/entities.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","redux/profile-reducer.ts","api/api.tsx","redux/users-reducer.ts","assets/images/loading.gif","common/preloader/Preloader.tsx","components/Profile/ProfileContainer.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx","components/Header/Header.tsx","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","App.tsx","redux/friends-reducer.ts","redux/redux-store.ts","index.tsx","components/Navbar/Navbar.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Dialogs/DialogsMessages/DialogsMessages.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/Profile.module.css","components/Navbar/FriendsPanel/Friend/Friend.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","App.module.css","components/Navbar/FriendsPanel/FriendsPanel.module.css","common/preloader/Preloader.module.css","components/Header/Header.module.css","components/Users/Users.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Footer","href","Friend","props","className","s","friend","alt","name","src","img","FriendsPanel","friendsPanel","friends","map","length","slice","photos","small","unknown","id","title","FriendsPanelContainer","React","Component","connect","Navbar","navbar","to","activeClassName","active","other","News","Music","Settings","DialogItem","dialog","Message","messageComponentMe","messageComponent","messageBabbleMe","messageBabble","tailMe","tail","messageBoxMe","messageBox","message","time","DialogsMessages","messagesElements","messages","index","newMessageElement","createRef","addMessageCallback","addMessage","dialogsMessages","sendBox","onKeyPress","event","key","preventDefault","value","newMessage","onChange","current","changeNewMessage","ref","placeholder","textarea","onClick","button","Dialogs","dialogsElements","dialogs","dialogPage","dialogsColumn","messagesColumn","path","render","prop","dialogID","match","params","find","d","ADD_MESSAGE","UPDATE_NEW_MESSAGE","initialDialogState","dialogsReducer","state","action","type","currentDialog","trim","mapStateToProps","isAuth","auth","withAuthRedirect","restProps","compose","statuses","ProfileInfo","editMode","status","onEditMode","setState","offEditMode","updateProfileStatus","prevProps","prevState","snapshot","this","inputBox","autoFocus","input","onBlur","e","currentTarget","onDoubleClick","profileBox","avatar","profile","large","fullName","profileInfo","div","ProfileStatus","profileStatus","description","lookingForAJob","aboutMe","Post","post","postContent","likesCount","addLike","like","removePost","MyPosts","postsElements","posts","newPostElement","addPostCallback","addPost","newPostMessage","updateNewPostMessage","buttons","Profile","ACTIONS_PROFILE_TYPE","imageBox","arrow","arrowRight","axiosInstance","axios","create","baseURL","withCredentials","headers","usersAPI","pageSize","activePage","get","response","data","userId","delete","profileAPI","userID","put","authAPI","ACTIONS_USER_REDUCER","initialProfileState","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJobDescription","isFetching","setProfile","SET_PROFILE","setStatus","SET_STATUS","setFetching","fetching","TOGGLE_FETCHING","setProfileStatus","SET_PROFILE_STATUS","profileReducer","ADD_POST","newPost","UPDATE_NEW_POST_MESSAGE","postMessage","REMOVE_POST","confirm","filter","ADD_LIKE","Preloader","loadingBox","loadingGif","preloader","ProfileContainer","getProfile","getProfileStatus","dispatch","resultCode","withRouter","initialUsersState","users","totalUsersCount","isLoading","isFollowing","changeFollowedStatus","isFollow","CHANGE_FOLLOWED_STATUS","setLoading","loading","SET_LOADING","setFollowing","following","SET_FOLLOWING","usersReducer","u","followed","SET_USERS","CHANGE_PAGE","page","SET_USERS_COUNT","usersCount","Users","pagesCount","Math","ceil","pages","i","push","titlePage","container","style","margin","friendBox","imgBox","unfollow","follow","followBtn","red","green","includes","disabled","some","infoBox","infoBottom","p","onClickPage","UsersContainer","changePage","getUsers","totalCount","items","Header","ACTIONS_AUTH_REDUCER","logo","greeting","login","initialAuthState","email","setAuthUserData","SET_USER_DATA","authReducer","HeaderContainer","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Login","formData","console","log","App","ACTIONS_FRIENDS_REDUCER","appWrapper","content","DialogsContainer","initialFriendsState","friendsReducer","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","getState","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cd1b098.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Footer_logo__3ACxa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileBox\":\"ProfileInfo_profileBox__1v93W\",\"profileInfo\":\"ProfileInfo_profileInfo__2IJgv\",\"avatar\":\"ProfileInfo_avatar__3xuFq\",\"div\":\"ProfileInfo_div__3At7N\",\"title\":\"ProfileInfo_title__2t6A6\",\"name\":\"ProfileInfo_name__1VvQB\",\"description\":\"ProfileInfo_description__2yWda\",\"status\":\"ProfileInfo_status__2G3BZ\",\"inputBox\":\"ProfileInfo_inputBox__2oJBN\",\"input\":\"ProfileInfo_input__f3lao\",\"saveStatusBtn\":\"ProfileInfo_saveStatusBtn__2vNYc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageComponent\":\"Message_messageComponent__2_iBn\",\"messageComponentMe\":\"Message_messageComponentMe__1w1Wo\",\"img\":\"Message_img__3-T8Q\",\"time\":\"Message_time__oGKVI\",\"messageBabble\":\"Message_messageBabble__2EWNh\",\"messageBabbleMe\":\"Message_messageBabbleMe__1DfI-\",\"tail\":\"Message_tail__3RUok\",\"tailMe\":\"Message_tailMe__m4hsZ\",\"messageBox\":\"Message_messageBox__1ynL0\",\"messageBoxMe\":\"Message_messageBoxMe__3KXIW\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport './Footer.module.css';\n\nfunction Footer() {\n    return (\n        <footer>&copy; My first site on &nbsp;<a href='#'>React</a></footer>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport s from './Friend.module.css';\n\ntype FriendPropsType = {\n    name: string,\n    img: string\n}\n\nfunction Friend(props: FriendPropsType) {\n    return (\n        <div className={s.friend}>\n            <img alt={props.name} src={props.img} className={s.img}/>\n            <p className={s.name}>{props.name}</p>\n        </div>\n    )\n}\n\nexport default Friend;","export default __webpack_public_path__ + \"static/media/unknown.dc967cb3.png\";","import React from 'react';\nimport s from './FriendsPanel.module.css';\nimport Friend from \"./Friend/Friend\";\nimport {UserType} from \"../../../entities/entities\";\nimport unknown from '../../../assets/images/unknown.png'\n\ntype FriendsPanelPropsType = {\n    friends: Array<UserType>\n}\n\nfunction FriendsPanel(props: FriendsPanelPropsType) {\n\n    let friendsPanel = props.friends.map(friend =>\n                <Friend\n                    key={friend.id}\n                    name={friend.name.length > 7 ? (friend.name.slice(0, 6) + '...') : friend.name}\n                    img={friend.photos.small || unknown}/>)\n\n    return (\n        <div>\n            <p className={s.title}>Friends</p>\n            <div className={s.friends}>\n                {friendsPanel}\n            </div>\n        </div>\n    )\n}\n\nexport default FriendsPanel;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport FriendsPanel from \"./FriendsPanel\";\n\n//props\ninterface IFriendsPropsType {\n}\ninterface IFriendsState {\n}\n\nclass FriendsPanelContainer extends React.Component<IFriendsPropsType, IFriendsState> {\n\n    componentDidMount() {\n    }\n\n    render() {\n        return <FriendsPanel friends={[]}/>\n    }\n}\n\nexport default connect(() => {\n    return {}\n}, {})(FriendsPanelContainer)\n\n","import React from 'react';\nimport s from './Navbar.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport FriendsPanelContainer from \"./FriendsPanel/FriendsPanelContainer\";\n\nfunction Navbar() {\n    return (\n        <aside>\n            <nav className={s.navbar}>\n                <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\n                <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\n                <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\n                <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\n                <NavLink to=\"/users\" activeClassName={s.active} className={s.other}>Find users</NavLink>\n                <NavLink to=\"/settings\" activeClassName={s.active} className={s.other}>Settings</NavLink>\n                <FriendsPanelContainer />\n            </nav>\n        </aside>\n    )\n}\n\nexport default Navbar;","import React from \"react\";\nimport s from './News.module.css';\n\nfunction News() {\n    return (\n        <div>\n            News\n        </div>\n    )\n}\n\nexport default News;\n","import React from \"react\";\nimport s from './Music.module.css';\n\nfunction Music() {\n    return (\n        <div>\n            Music\n        </div>\n    )\n}\n\nexport default Music;\n","import React from \"react\";\nimport s from './Settings.module.css';\n\nfunction Settings() {\n    return (\n        <div>\n            Settings\n        </div>\n    )\n}\n\nexport default Settings;\n","import React from \"react\";\nimport s from './DialogItem.module.css';\nimport {NavLink} from \"react-router-dom\";\n\ntype DialogItemPropsType = {\n    id: number,\n    name: string,\n    img: string\n}\n\nfunction DialogItem(props: DialogItemPropsType) {\n    return (\n        <div>\n            <NavLink to={'/dialogs/' + props.id} className={s.dialog} activeClassName={s.active}>\n                <img className={s.img} src={props.img} alt={props.name}/>\n                {props.name}\n            </NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem;\n","import React from \"react\";\nimport s from './Message.module.css';\n\ntype MessagePropsType = {\n    message: string,\n    name: string,\n    img: string\n}\n\nfunction Message(props: MessagePropsType) {\n\n    const messageComponentFrom = () => {\n        return (props.name === 'Me') ? s.messageComponentMe : s.messageComponent\n    }\n    const messageBabbleFrom = () => {\n        return (props.name === 'Me') ? s.messageBabbleMe : s.messageBabble\n    }\n    const tailFrom = () => {\n        return (props.name === 'Me') ? s.tailMe : s.tail\n    }\n\n    const messageBoxFrom = () => {\n        return (props.name === 'Me') ? s.messageBoxMe : s.messageBox\n    }\n\n\n    return (\n        <div className={messageComponentFrom()}>\n            <img className={s.img} src={props.img} alt=\"avatar\"/>\n            <div className={messageBabbleFrom()}>\n                <div className={tailFrom()}/>\n                <div className={messageBoxFrom()}>\n                    <div className={s.message}>{props.message}</div>\n                    <div className={s.time}>22:00</div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message;\n","import s from \"../DialogsMessages/DialogsMessages.module.css\";\nimport React from \"react\";\nimport Message from \"./Message/Message\";\nimport {DialogType} from \"../../../entities/entities\";\n\ntype DialogsMessagesPropsType = {\n    dialog: DialogType\n    addMessage: (id: number) => void\n    changeNewMessage: (newMessage: string, id: number) => void\n}\n\nexport const DialogsMessages = (props: DialogsMessagesPropsType) => {\n\n    const messagesElements = props.dialog.messages.map((message, index) =>\n        <Message key={index} name={message.name} img={message.img} message={message.message}/>)\n\n    const newMessageElement = React.createRef<HTMLTextAreaElement>();\n\n    const addMessageCallback = () => {\n        props.addMessage(props.dialog.id)\n    }\n    const changeNewMessage = () => {\n        const newMessage = newMessageElement.current?.value;\n        newMessage && props.changeNewMessage(newMessage, props.dialog.id)\n    }\n\n    const enterPressed = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            addMessageCallback()\n        }\n    }\n\n    return (\n        <div className={s.dialogsMessages}>\n            <div className={s.messages}>\n                { messagesElements}\n            </div>\n            <div className={s.sendBox}>\n                <textarea onKeyPress={enterPressed} value={props.dialog.newMessage} onChange={changeNewMessage}\n                          ref={newMessageElement} placeholder={'Text your message...'} className={s.textarea}/>\n                <button onClick={addMessageCallback} className={s.button}>Send</button>\n            </div>\n\n\n        </div>\n\n    )\n}","import React from \"react\";\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport {DialogsMessages} from \"./DialogsMessages/DialogsMessages\";\nimport {Route} from \"react-router\";\nimport {DialogType} from \"../../entities/entities\";\n\ntype DialogsPropsType = {\n    dialogs: DialogType[]\n    addMessage: (id: number) => void\n    changeNewMessage: (newMessage: string, id: number) => void\n    isAuth: boolean\n}\n\nfunction Dialogs(props: DialogsPropsType) {\n\n    const dialogsElements = props.dialogs.map(dialog =>\n        <DialogItem key={dialog.id} img={dialog.img} id={dialog.id} name={dialog.name}/>)\n\n    return (\n        <div className={s.dialogPage}>\n            <div className={s.dialogsColumn}>\n                {dialogsElements}\n            </div>\n\n            <div className={s.messagesColumn}>\n\n                <Route path='/dialogs/:dialogID' render={(prop) => {\n                    const dialogID = prop.match.params.dialogID;\n                    const dialog = props.dialogs.find(d => d.id === +dialogID);\n                    return (\n                        dialog && <DialogsMessages\n                            dialog={dialog}\n                            addMessage={(id) => props.addMessage(id)}\n                            changeNewMessage={(newMessage, id) => props.changeNewMessage(newMessage, id)}/>\n                    )\n                }\n                }/>\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs;\n","import {DialogType} from \"../entities/entities\";\n\nconst ADD_MESSAGE = 'ADD-MESSAGE';\nconst UPDATE_NEW_MESSAGE = 'UPDATE-NEW-MESSAGE';\n\nexport type initialDialogsStateType = {\n    dialogs: Array<DialogType>\n}\nlet initialDialogState: initialDialogsStateType = {\n    dialogs: [\n        {\n            id: 1,\n            name: 'Nick',\n            img: 'https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg',\n            messages: [\n                {\n                    message: 'Hi!',\n                    name: 'Nick',\n                    img: 'https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg'\n                },\n                {\n                    message: 'How are you?',\n                    name: 'Nick',\n                    img: 'https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg'\n                },\n                {\n                    message: 'Yo',\n                    name: 'Me',\n                    img: 'https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-58-696x696.jpg'\n                },\n                {\n                    message: \"I'm fine! How're you?\",\n                    name: 'Me',\n                    img: 'https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-58-696x696.jpg'\n                },\n            ],\n            newMessage: ''\n        },\n        {\n            id: 2, name: 'Jhon', img: 'https://vraki.net/sites/default/files/inline/images/30_55.jpg',\n            messages: [\n                {\n                    message: 'Hi!',\n                    name: 'Jhon',\n                    img: 'https://vraki.net/sites/default/files/inline/images/30_55.jpg'\n                }],\n            newMessage: ''\n        },\n        {\n            id: 3, name: 'Anna', img: 'https://pixelbox.ru/wp-content/uploads/2021/04/ava-mult-vk-78.jpg',\n            messages: [\n                {\n                    message: 'Hi!',\n                    name: 'Anna',\n                    img: 'https://pixelbox.ru/wp-content/uploads/2021/04/ava-mult-vk-78.jpg'\n                }],\n            newMessage: ''\n        },\n    ]\n}\n\nconst dialogsReducer = (state = initialDialogState, action: ActionDialogsReducerType): initialDialogsStateType => {\n\n    switch (action.type) {\n        case ADD_MESSAGE: {\n            const currentDialog = state.dialogs.find(d => d.id === action.id) as DialogType\n            if (!currentDialog.newMessage.trim()) {\n                return {...state, dialogs: state.dialogs.map(d => d.id === action.id ? {...d, newMessage: ''} : d)}\n            }\n            const newMessage = {\n                message: currentDialog.newMessage,\n                name: 'Me',\n                img: 'https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-58-696x696.jpg'\n            }\n            return {\n                ...state,\n                dialogs: state.dialogs\n                    .map(d => d.id === action.id ? {...d, messages: [...d.messages, newMessage], newMessage: ''} : d)\n            }\n        }\n        case UPDATE_NEW_MESSAGE: {\n            return {...state, dialogs: state.dialogs.map(d => d.id === action.id ? {...d, newMessage: action.message} : d)}\n        }\n        default:\n            return state;\n    }\n}\n\n//Action creators\nexport type ActionDialogsReducerType = addMessageActionCreatorType | updateNewMessageActionCreatorType\n\ntype addMessageActionCreatorType = { type: typeof ADD_MESSAGE, id: number }\ntype updateNewMessageActionCreatorType = { type: typeof UPDATE_NEW_MESSAGE, message: string, id: number }\n\nexport const addMessage = (id: number): addMessageActionCreatorType => ({type: ADD_MESSAGE, id: id});\nexport const changeNewMessage = (message: string = '', id: number): updateNewMessageActionCreatorType => {\n    return {type: UPDATE_NEW_MESSAGE, message: message, id: id};\n}\n\nexport default dialogsReducer;","import React, {Component} from \"react\";\nimport {Redirect} from \"react-router\";\nimport {StateType} from \"../redux/redux-store\";\nimport {connect} from \"react-redux\";\n\ntype mapStateToPropsType = { isAuth: boolean }\nconst mapStateToProps = (state: StateType): mapStateToPropsType => ({isAuth: state.auth.isAuth})\n\nexport function withAuthRedirect <T>(Component: React.ComponentType<T>) {\n\n    function AuthRedirectComponent (props: mapStateToPropsType) {\n        let {isAuth, ...restProps} = props\n        if (!isAuth) return <Redirect to={'/login'}/>\n        return <Component {...restProps as T}/>\n    }\n\n    const ConnectedAuthRedirectComponent = connect(mapStateToProps, {}) (AuthRedirectComponent)\n\n    return ConnectedAuthRedirectComponent\n}","import React from \"react\";\nimport Dialogs from \"./Dialogs\";\nimport {StateType} from \"../../redux/redux-store\";\nimport {connect} from \"react-redux\";\nimport {addMessage, changeNewMessage} from \"../../redux/dialogs-reducer\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nconst mapStateToProps = (state: StateType) => {\n    return {\n        dialogs: state.dialogs.dialogs,\n    }\n}\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, {\n        addMessage,\n        changeNewMessage,\n    }),\n    withAuthRedirect\n)(Dialogs)\n","export type PostType = {\n    id: number\n    message: string\n    likesCount: number\n}\n\nexport type DialogType = {\n    id: number\n    name: string\n    img: string\n    messages: Array<MessageType>\n    newMessage: string\n}\nexport type MessageType = {\n    message: string\n    name: string\n    img: string\n}\n\nexport type UserType = {\n    name: string\n    id: number\n    uniqueUrlName: string\n    photos: {\n        small: string\n        large: string\n    }\n    status: string\n    followed: boolean\n}\n\nexport type ItemsType = {\n    items: UserType[]\n    totalCount: number\n    error: string\n}\n\nexport type AuthDataType = {\n    resultCode: number\n    messages: Array<string>\n    data: {\n        id: number\n        email: string\n        login: string\n    }\n}\n\nexport type ProfileStatusDataType = {\n    resultCode: number\n    messages: Array<string>\n    data: {}\n}\n\nexport type ProfileType = {\n    aboutMe: string\n    contacts: {\n        facebook: string\n        website: string\n        vk: string\n        twitter: string\n        instagram: string\n        youtube: string\n        github: string\n        mainLink: string\n    },\n    lookingForAJob: boolean\n    lookingForAJobDescription: string\n    fullName: string\n    userId: number\n    photos: {\n        small: string\n        large: string\n    }\n}\n\nexport type FollowResponse = {\n    resultCode: number\n    messages: []\n    data: {}\n}\n\nexport const statuses = {\n    NOT_INITIALIZED: 'NOT-INITIALIZED',\n    ERRORS: 'ERRORS',\n    IN_PROGRESS: 'IN-PROGRESS',\n    SUCCESS: 'SUCCESS',\n}","import React from 'react';\nimport s from './ProfileInfo.module.css';\n\ntype ProfileStatusPropsType = {\n    status: string\n    updateProfileStatus: (status: string) => void\n}\n\nclass ProfileInfo extends React.Component<ProfileStatusPropsType> {\n\n    state = {\n        editMode: false,\n        status: this.props.status\n    }\n\n    onEditMode = () => {\n        this.setState({\n            editMode: true\n        })\n    }\n    offEditMode = () => {\n        this.setState({\n            editMode: false\n        })\n        this.props.updateProfileStatus(this.state.status)\n    }\n\n    componentDidUpdate(prevProps: Readonly<ProfileStatusPropsType>, prevState: Readonly<{}>, snapshot?: any) {\n        if (prevProps.status !== this.state.status) {\n            this.setState({\n                status: this.props.status\n            })\n        }\n    }\n\n    render() {\n        return (<>\n            {this.state.editMode ?\n                <div className={s.inputBox}>\n                    <input type='text'\n                           autoFocus={true}\n                           className={s.input}\n                           onBlur={this.offEditMode}\n                           value={this.state.status}\n                           onChange={(e) =>\n                               this.setState({status: e.currentTarget.value})\n                           }\n                           onKeyPress={(e) => {\n                               if (e.key === 'Enter') this.props.updateProfileStatus(e.currentTarget.value) }}/>\n                    {/*<button*/}\n                    {/*    className={s.saveStatusBtn}*/}\n                    {/*    onClick={() => this.props.updateProfileStatus(this.state.status)}>Save status</button>*/}\n                </div>\n                :\n                <div className={s.status} onDoubleClick={this.onEditMode}>\n                    {this.state.status}\n                </div>\n            }\n        </>)\n    }\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport {ProfileType} from \"../../../entities/entities\";\nimport unknown from '../../../assets/images/unknown.png'\nimport ProfileStatus from './ProfileStatus';\n\ntype ProfileInfoPropsType = {\n    profile: ProfileType\n    profileStatus: string\n    updateProfileStatus: (status: string) => void\n}\n\nfunction ProfileInfo(props: ProfileInfoPropsType) {\n    return (\n        <div className={s.profileBox}>\n            <img className={s.avatar} src={props.profile.photos.large || unknown} alt={props.profile.fullName}/>\n            <div className={s.profileInfo}>\n                <div className={s.div}>\n                    <p className={s.name}>{props.profile.fullName}</p>\n                </div>\n                <div className={s.div}>\n                    <ProfileStatus\n                        status={props.profileStatus || 'Nothing yet...'}\n                        updateProfileStatus={props.updateProfileStatus}/>\n                </div>\n                <div className={s.div}>\n                    <p className={s.title}>I'm looking a job: </p>\n                    <p className={s.description}>{props.profile.lookingForAJob ? 'yes' : 'no'}</p>\n                </div>\n                <div>\n                    <p className={s.title}>About me: </p>\n                    <p className={s.description}>{props.profile.aboutMe || 'Nothing yet...'}</p>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport s from './Post.module.css';\n\n\ntype PostPropsType = {\n    id: number\n    message: string\n    likesCount: number\n    removePost: (id: number) => void\n    addLike: (id: number) => void\n}\n\nfunction Post (props: PostPropsType) {\n\n    const removePostCallback = () => {\n        props.removePost(props.id)\n    }\n    const addLikeCallback = () => {\n        props.addLike(props.id)\n    }\n\n    return (\n        <div className={s.post}>\n            <div className={s.postContent}>\n                <img className={s.avatar}\n                    src='https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-58-696x696.jpg' alt='Avatar'/>\n                <div className={s.message}>{props.message}</div>\n            </div>\n\n            <div>\n                <span className={s.likesCount}>{props.likesCount} likes</span>\n                <button onClick={addLikeCallback} className={s.like}>Like!</button>\n                <button onClick={removePostCallback} className={s.button}>Remove post</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Post;","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\nimport {PostType} from \"../../../entities/entities\";\n\ntype MyPostsPropsType = {\n    posts: Array<PostType>\n    newPostMessage: string\n    addPost: () => void\n    updateNewPostMessage: (newPostMessage: string) => void\n    removePost: (id: number) => void\n    addLike: (id: number) => void\n}\n\nfunction MyPosts(props: MyPostsPropsType) {\n\n    const postsElements =\n        props.posts.map(post =>\n           <Post key={post.id}\n                 id={post.id}\n                 message={post.message}\n                 likesCount={post.likesCount}\n                 removePost={(id) => props.removePost(id)}\n                 addLike={(id) => props.addLike(id)}/>)\n\n    const newPostElement = React.createRef<HTMLTextAreaElement>();\n\n    const addPostCallback = () => {\n        props.addPost()\n    }\n    const changeNewPostMessage = () => {\n        const newPostMessage = newPostElement.current?.value\n        newPostMessage && props.updateNewPostMessage(newPostMessage)\n    }\n\n    const enterPressed = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n        if (event.key === 'Enter') {\n            event.preventDefault()\n            addPostCallback()\n        }\n    }\n\n    return (\n        <div>\n            <p className={s.title}>My Posts</p>\n            <div>\n                <textarea onKeyPress={enterPressed} value={props.newPostMessage} onChange={changeNewPostMessage} ref={newPostElement} className={s.textarea} placeholder='Your message...'/>\n                <div className={s.buttons}>\n                    <button onClick={addPostCallback} className={s.button}>Add post</button>\n                </div>\n            </div>\n            <div className={s.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n}\n\nexport default MyPosts;","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport s from './Profile.module.css'\nimport MyPosts from './MyPosts/MyPosts';\nimport {PostType, ProfileType} from \"../../entities/entities\";\n\ntype ProfilePropsType = {\n    profile: ProfileType\n    posts: Array<PostType>\n    newPostMessage: string\n    addPost: () => void\n    updateNewPostMessage: (postMessage: string) => void\n    removePost: (id: number) => void\n    addLike: (id: number) => void\n    profileStatus: string\n    updateProfileStatus: (status: string) => void\n}\n\nfunction Profile(props: ProfilePropsType) {\n    return (\n        <div>\n            <ProfileInfo\n                profile={props.profile}\n                profileStatus={props.profileStatus}\n                updateProfileStatus={props.updateProfileStatus}/>\n            <div className={s.imageBox}>\n                <img alt={'arrow-left'} src={'https://piaspb.ru/img/new-img/arrows-l.png'} className={s.arrow}/>\n                <img alt={'arrow-right'} src={'https://piaspb.ru/img/new-img/arrows-l.png'} className={`${s.arrow} ${s.arrowRight}`}/>\n            </div>\n            <MyPosts {...props}/>\n        </div>\n    )\n}\n\nexport default Profile;","import {PostType, ProfileType, statuses} from \"../entities/entities\"\nimport {Dispatch} from \"redux\";\nimport {profileAPI} from \"../api/api\";\n\nexport enum ACTIONS_PROFILE_TYPE {\n    ADD_POST = 'ADD-POST',\n    UPDATE_NEW_POST_MESSAGE = 'UPDATE-NEW-POST-MESSAGE',\n    REMOVE_POST = 'REMOVE-POST',\n    ADD_LIKE = 'ADD-LIKE',\n    SET_PROFILE = 'SET-PROFILE',\n    SET_STATUS = 'SONET/PROFILE/SET-STATUS',\n    TOGGLE_FETCHING = 'SONET/PROFILE/TOGGLE-FETCHING',\n    SET_PROFILE_STATUS = 'SET-PROFILE-STATUS',\n}\n\nexport type initialProfileStateType = {\n    profile: ProfileType\n    profileStatus: string\n    posts: Array<PostType>\n    newPostMessage: string\n    status: string\n    isFetching: boolean\n}\nlet initialProfileState: initialProfileStateType = {\n    profile: {\n        aboutMe: '',\n        contacts: {\n            facebook: '',\n            website: '',\n            vk: '',\n            twitter: '',\n            instagram: '',\n            youtube: '',\n            github: '',\n            mainLink: ''\n        },\n        lookingForAJob: false,\n        lookingForAJobDescription: '',\n        fullName: '',\n        userId: 1,\n        photos: {\n            small: '',\n            large: ''\n        }\n    },\n    profileStatus: '',\n    posts: [\n        {id: 1, message: 'It is my first post!', likesCount: 25},\n        {id: 2, message: 'How are you?', likesCount: 15},\n    ],\n    newPostMessage: '',\n    status: statuses.NOT_INITIALIZED,\n    isFetching: false,\n}\n\nconst profileReducer = (state = initialProfileState, action: ActionProfileReducerType): initialProfileStateType => {\n\n    switch (action.type) {\n        case ACTIONS_PROFILE_TYPE.ADD_POST:\n            if (state.newPostMessage === '') {\n                return state\n            }\n            const newPost = {\n                id: state.posts.length + 1,\n                message: state.newPostMessage,\n                likesCount: 0\n            }\n            return {...state, posts: [...state.posts, newPost], newPostMessage: ''}\n        case ACTIONS_PROFILE_TYPE.UPDATE_NEW_POST_MESSAGE:\n            return {...state, newPostMessage: action.postMessage}\n        case ACTIONS_PROFILE_TYPE.REMOVE_POST:\n            // eslint-disable-next-line no-restricted-globals\n            if (confirm('Delete this post?')) {\n                return {...state, posts: state.posts.filter(post => post.id !== action.id), newPostMessage: ''}\n            }\n            return state\n        case ACTIONS_PROFILE_TYPE.ADD_LIKE:\n            return {...state,\n                posts: state.posts.map(post => post.id === action.id ? {...post, likesCount: ++post.likesCount} : post),\n                newPostMessage: ''}\n        case ACTIONS_PROFILE_TYPE.SET_PROFILE:\n            return {...state, profile: action.profile}\n        case ACTIONS_PROFILE_TYPE.SET_STATUS:\n            return {...state, status: action.status}\n        case ACTIONS_PROFILE_TYPE.TOGGLE_FETCHING:\n            return {...state, isFetching: action.fetching}\n        case ACTIONS_PROFILE_TYPE.SET_PROFILE_STATUS:\n            return {...state, profileStatus: action.profileStatus}\n        default:\n            return state\n    }\n}\n\n//Action type\nexport type ActionProfileReducerType = addPostActionCreatorType\n    | updateNewPostMessageActionCreatorType\n    | removePostActionCreatorType\n    | addLikeActionCreatorType\n    | setProfileACType\n    | SetStatusACType\n    | FetchingACType\n    | SetProfileStatusACType\n\n//types AC\ntype addPostActionCreatorType = { type: typeof ACTIONS_PROFILE_TYPE.ADD_POST }\ntype updateNewPostMessageActionCreatorType = { type: typeof ACTIONS_PROFILE_TYPE.UPDATE_NEW_POST_MESSAGE, postMessage: string }\ntype removePostActionCreatorType = { type: typeof ACTIONS_PROFILE_TYPE.REMOVE_POST, id: number }\ntype addLikeActionCreatorType = { type: typeof ACTIONS_PROFILE_TYPE.ADD_LIKE, id: number }\ntype setProfileACType = { type: typeof ACTIONS_PROFILE_TYPE.SET_PROFILE, profile: ProfileType }\ntype SetStatusACType = { status: string, type: typeof ACTIONS_PROFILE_TYPE.SET_STATUS }\ntype FetchingACType = { fetching: boolean, type: typeof ACTIONS_PROFILE_TYPE.TOGGLE_FETCHING }\ntype SetProfileStatusACType = { profileStatus: string, type: typeof ACTIONS_PROFILE_TYPE.SET_PROFILE_STATUS }\n\n//AC\nexport const addPost = (): addPostActionCreatorType => ({type: ACTIONS_PROFILE_TYPE.ADD_POST})\nexport const updateNewPostMessage = (postMessage: string = ''): updateNewPostMessageActionCreatorType => {\n    return {type: ACTIONS_PROFILE_TYPE.UPDATE_NEW_POST_MESSAGE, postMessage: postMessage}\n}\nexport const removePost = (id: number): removePostActionCreatorType => ({type: ACTIONS_PROFILE_TYPE.REMOVE_POST, id})\nexport const addLike = (id: number): addLikeActionCreatorType => ({type: ACTIONS_PROFILE_TYPE.ADD_LIKE, id})\nexport const setProfile = (profile: ProfileType): setProfileACType => ({type: ACTIONS_PROFILE_TYPE.SET_PROFILE, profile})\nexport const setStatus = (status: string): SetStatusACType => ({status, type: ACTIONS_PROFILE_TYPE.SET_STATUS})\nexport const setFetching = (fetching: boolean): FetchingACType => ({fetching, type: ACTIONS_PROFILE_TYPE.TOGGLE_FETCHING})\nexport const setProfileStatus = (profileStatus: string): SetProfileStatusACType => ({profileStatus, type: ACTIONS_PROFILE_TYPE.SET_PROFILE_STATUS})\n\n//thunk creators\nexport const getProfile = (userID: string) => (dispatch: Dispatch<ActionProfileReducerType>) => {\n    dispatch(setStatus(statuses.IN_PROGRESS))\n    dispatch(setFetching(false))\n    profileAPI.getProfile(userID)\n        .then((data) => {\n            dispatch(setProfile(data))\n            dispatch(setStatus(statuses.SUCCESS))\n            dispatch(setFetching(true))\n        })\n}\nexport const getProfileStatus = (userID: string) => (dispatch: Dispatch<ActionProfileReducerType>) => {\n    dispatch(setStatus(statuses.IN_PROGRESS))\n    dispatch(setFetching(false))\n    profileAPI.getProfileStatus(userID)\n        .then((status) => {\n            dispatch(setProfileStatus(status))\n            dispatch(setStatus(statuses.SUCCESS))\n            dispatch(setFetching(true))\n        })\n}\nexport const updateProfileStatus = (profileStatus: string) => (dispatch: Dispatch<ActionProfileReducerType>) => {\n    dispatch(setStatus(statuses.IN_PROGRESS))\n    dispatch(setFetching(false))\n    profileAPI.updateProfileStatus(profileStatus)\n        .then((data) => {\n            if (data.resultCode === 0) {\n                dispatch(setProfileStatus(profileStatus))\n                dispatch(setStatus(statuses.SUCCESS))\n                dispatch(setFetching(true))\n            }\n        })\n}\n\nexport default profileReducer\n","import axios, {AxiosResponse} from \"axios\";\nimport {AuthDataType, FollowResponse, ItemsType, ProfileStatusDataType, ProfileType} from \"../entities/entities\";\n\nexport const axiosInstance = axios.create({\n    baseURL: 'https://social-network.samuraijs.com/api/1.0',\n    withCredentials: true,\n    headers: {\n        \"API-KEY\": \"ff96c8c6-9a67-45a6-8e7e-64655709b2bd\"\n    },\n})\n\nexport const usersAPI = {\n    getUsers: (pageSize: number, activePage: number) => {\n        return axiosInstance.get(`users?count=${pageSize}&page=${activePage}`)\n            .then((response: AxiosResponse<ItemsType>) => response.data)\n    },\n    unfollow: (userId: number) => {\n        return axiosInstance.delete(`follow/${userId}`)\n            .then((response: AxiosResponse<FollowResponse>) => response.data)\n    },\n    follow: (userId: number) => {\n        return axiosInstance.post(`follow/${userId}`)\n            .then((response: AxiosResponse<FollowResponse>) => response.data)\n    },\n}\n\nexport const profileAPI = {\n    getProfile: (userID: string) => {\n        return axiosInstance.get(`profile/${userID}`)\n            .then((response: AxiosResponse<ProfileType>) => response.data)\n    },\n    getProfileStatus: (userID: string) => {\n        return axiosInstance.get(`profile/status/${userID}`)\n            .then((response: AxiosResponse<string>) => response.data)\n    },\n    updateProfileStatus: (profileStatus: string) => {\n        return axiosInstance.put('/profile/status', { status: profileStatus })\n            .then((response: AxiosResponse<ProfileStatusDataType>) => response.data)\n    }\n}\n\nexport const authAPI = {\n    getAuth: () => {\n        return axiosInstance.get('auth/me')\n            .then((response: AxiosResponse<AuthDataType>) => response.data)\n    },\n}\n\n\n\n","import {statuses, UserType} from \"../entities/entities\";\nimport {usersAPI} from \"../api/api\";\nimport {Dispatch} from \"redux\";\n\n//constants\nenum ACTIONS_USER_REDUCER {\n    CHANGE_FOLLOWED_STATUS = 'CHANGE-FOLLOWED-STATUS',\n    SET_USERS = 'SONET/USERS/SET-USERS',  // уникализируем константу, чтобы избежать совпадений\n    SET_STATUS = 'SONET/USERS/SET-STATUS',\n    CHANGE_PAGE = 'SONET/USERS/CHANGE-PAGE',\n    SET_USERS_COUNT = 'SONET/USERS/SET-USERS-COUNT',\n    SET_LOADING = 'SONET/USERS/SET-LOADING',\n    SET_FOLLOWING = 'SONET/USERS/SET-FOLLOWING',\n}\n\n//initial state\nexport type initialUsersStateType = {\n    users: Array<UserType>\n    status: string\n    pageSize: number\n    totalUsersCount: number\n    activePage: number\n    isLoading: boolean\n    isFollowing: number[]\n}\n\nlet initialUsersState: initialUsersStateType = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    activePage: 1,\n    isLoading: true,\n    isFollowing: [],\n    status: statuses.NOT_INITIALIZED,\n}\n\n//reducer\nconst usersReducer = (state = initialUsersState, action: ActionUsersReducerType): initialUsersStateType => {\n    switch (action.type) {\n        case ACTIONS_USER_REDUCER.CHANGE_FOLLOWED_STATUS:\n            return {\n                ...state,\n                users: [...state.users.map(u => u.id === action.userID ? {...u, followed: action.isFollow} : u)]\n            }\n        case ACTIONS_USER_REDUCER.SET_USERS:\n            return {...state, users: [...action.users]}\n        case ACTIONS_USER_REDUCER.SET_STATUS:\n            return {...state, status: action.status}\n        case ACTIONS_USER_REDUCER.CHANGE_PAGE:\n            return {...state, activePage: action.page}\n        case ACTIONS_USER_REDUCER.SET_USERS_COUNT:\n            return {...state, totalUsersCount: action.usersCount}\n        case ACTIONS_USER_REDUCER.SET_LOADING:\n            return {...state, isLoading: action.loading}\n        case ACTIONS_USER_REDUCER.SET_FOLLOWING:\n            return {\n                ...state,\n                isFollowing: action.following ? [...state.isFollowing, action.userId]\n                    : state.isFollowing.filter(u => u !== action.userId)\n            }\n        default:\n            return state\n    }\n}\n\n//action types\nexport type ActionUsersReducerType = ChangeFollowedStatusACType\n    | SetUsersACType\n    | SetStatusACType\n    | ChangePageACType\n    | SetUsersCountACType\n    | LoadingACType\n    | FollowingACType\n\ntype ChangeFollowedStatusACType = { userID: number, isFollow: boolean, type: typeof ACTIONS_USER_REDUCER.CHANGE_FOLLOWED_STATUS }\ntype SetUsersACType = { users: UserType[], type: typeof ACTIONS_USER_REDUCER.SET_USERS }\ntype SetStatusACType = { status: string, type: typeof ACTIONS_USER_REDUCER.SET_STATUS }\ntype ChangePageACType = { page: number, type: typeof ACTIONS_USER_REDUCER.CHANGE_PAGE }\ntype SetUsersCountACType = { usersCount: number, type: typeof ACTIONS_USER_REDUCER.SET_USERS_COUNT }\ntype LoadingACType = { loading: boolean, type: typeof ACTIONS_USER_REDUCER.SET_LOADING }\ntype FollowingACType = { following: boolean, userId: number, type: typeof ACTIONS_USER_REDUCER.SET_FOLLOWING }\n\n//action creators\nexport const changeFollowedStatus = (userID: number, isFollow: boolean): ChangeFollowedStatusACType => {\n    return {userID, isFollow, type: ACTIONS_USER_REDUCER.CHANGE_FOLLOWED_STATUS}\n}\nexport const setUsers = (users: UserType[]): SetUsersACType => ({users, type: ACTIONS_USER_REDUCER.SET_USERS})\nexport const setStatus = (status: string): SetStatusACType => ({status, type: ACTIONS_USER_REDUCER.SET_STATUS})\nexport const changePage = (page: number): ChangePageACType => ({page, type: ACTIONS_USER_REDUCER.CHANGE_PAGE})\nexport const setUsersCount = (usersCount: number): SetUsersCountACType => ({\n    usersCount,\n    type: ACTIONS_USER_REDUCER.SET_USERS_COUNT\n})\nexport const setLoading = (loading: boolean): LoadingACType => ({loading, type: ACTIONS_USER_REDUCER.SET_LOADING})\nexport const setFollowing = (following: boolean, userId: number): FollowingACType => ({\n    following,\n    userId,\n    type: ACTIONS_USER_REDUCER.SET_FOLLOWING\n})\n\n//thunk creators\nexport const getUsers = (pageSize: number, activePage: number) => (dispatch: Dispatch<ActionUsersReducerType>) => {\n    dispatch(setStatus(statuses.IN_PROGRESS))\n    dispatch(setLoading(true))\n    usersAPI.getUsers(pageSize, activePage)\n        .then((data) => {\n            dispatch(setStatus(statuses.SUCCESS))\n            dispatch(setUsersCount(data.totalCount))\n            dispatch(setLoading(false))\n            dispatch(setUsers(data.items))\n        })\n}\nexport const follow = (userId: number) => (dispatch: Dispatch<ActionUsersReducerType>) => {\n    dispatch(setFollowing(true, userId))\n    usersAPI.follow(userId)\n        .then((data) => {\n            if (data.resultCode === 0) {\n                dispatch(changeFollowedStatus(userId, true))\n                dispatch(setFollowing(false, userId))\n            }\n        })\n}\nexport const unfollow = (userId: number) => (dispatch: Dispatch<ActionUsersReducerType>) => {\n    dispatch(setFollowing(true, userId))\n    usersAPI.unfollow(userId)\n        .then((data) => {\n            if (data.resultCode === 0) {\n                dispatch(changeFollowedStatus(userId, false))\n                dispatch(setFollowing(false, userId))\n            }\n        })\n}\n\nexport default usersReducer\n","export default __webpack_public_path__ + \"static/media/loading.bb27ba0a.gif\";","import s from \"./Preloader.module.css\";\nimport preloader from \"../../assets/images/loading.gif\";\nimport React from \"react\";\n\nexport const Preloader = () => {\n    return <div className={s.loadingBox}>\n        <img alt={'loading...'} className={s.loadingGif} src={preloader}/>\n        <div>Loading...</div>\n    </div>\n}","import React from 'react';\nimport {connect} from 'react-redux';\nimport {PostType, ProfileType, statuses} from \"../../entities/entities\";\nimport Profile from \"./Profile\";\nimport {StateType} from \"../../redux/redux-store\";\nimport {\n    addLike,\n    addPost,\n    removePost,\n    setProfile,\n    updateNewPostMessage,\n    setFetching,\n    setStatus,\n    getProfile,\n    getProfileStatus, updateProfileStatus\n} from \"../../redux/profile-reducer\";\nimport {Preloader} from \"../../common/preloader/Preloader\";\nimport {RouteComponentProps, withRouter} from \"react-router\";\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component<ProfilePropsType> {\n\n    componentDidMount() {\n        let userID = this.props.match.params.userID\n        if (!userID) userID = '18931'\n        if (this.props.status === statuses.NOT_INITIALIZED) {\n            this.props.getProfile(userID)\n            this.props.getProfileStatus(userID)\n        }\n    }\n\n    componentWillUnmount() {\n        this.props.setStatus(statuses.NOT_INITIALIZED)\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ?\n                <Profile\n                    {...this.props}\n                />\n                :\n                <Preloader/>\n            }\n        </>\n    }\n\n}\n\ntype MapStatePropsType = {\n    profile: ProfileType\n    posts: Array<PostType>\n    newPostMessage: string\n    status: string\n    isFetching: boolean\n    profileStatus: string\n}\ntype MapDispatchPropsType = {\n    addPost: () => void\n    updateNewPostMessage: (postMessage: string) => void\n    removePost: (id: number) => void\n    addLike: (id: number) => void\n    setProfile: (profile: ProfileType) => void\n    setFetching: (fetching: boolean) => void\n    setStatus: (status: string) => void\n    getProfile: (userID: string) => void\n    getProfileStatus: (userID: string) => void\n    updateProfileStatus: (status: string) => void\n}\ntype OwnPropsType = MapStatePropsType & MapDispatchPropsType\ntype PathParamsType = { userID: string }\ntype ProfilePropsType = RouteComponentProps<PathParamsType> & OwnPropsType\n\nconst mapStateToProps = (state: StateType): MapStatePropsType => {\n    return {\n        profile: state.profile.profile,\n        posts: state.profile.posts,\n        newPostMessage: state.profile.newPostMessage,\n        isFetching: state.profile.isFetching,\n        status: state.profile.status,\n        profileStatus: state.profile.profileStatus,\n    }\n}\n\n\nexport default compose<React.ComponentType> (\n    connect(mapStateToProps, {\n        addPost,\n        updateNewPostMessage,\n        removePost,\n        addLike,\n        setProfile,\n        setFetching,\n        setStatus,\n        getProfile,\n        getProfileStatus,\n        updateProfileStatus\n    }),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer);\n\n","import React from \"react\";\nimport {statuses, UserType} from \"../../entities/entities\";\nimport s from \"./Users.module.css\";\nimport unknown from \"../../assets/images/unknown.png\";\nimport {NavLink} from \"react-router-dom\";\n\n//types\ntype UsersPropsType = {\n    users: Array<UserType>\n    status: string\n    activePage: number\n    totalUsersCount: number\n    pageSize: number\n    onClickPage: (page: number) => void\n    isFollowing: number[]\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n}\n\n//COMPONENT\nexport const Users: React.FC<UsersPropsType> = (props) => {\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\n    let pages = []\n    for (let i = 1; i <= 5; i++) {\n        pages.push(i)\n    }\n    pages.push('...')\n    pages.push(pagesCount)\n\n    const unfollow = (userId: number) => {\n        props.unfollow(userId)\n    }\n    const follow = (userId: number) => {\n        props.follow(userId)\n    }\n\n    return <>\n        {/*TITLE*/}\n        <p className={s.titlePage}>All users in SoNet</p>\n        <div className={s.container}>\n            {(!props.users.length && props.status === statuses.SUCCESS) &&\n            <span className={s.title} style={{margin: '20px'}}>Users not found</span>}\n\n            {/*USERS*/}\n            {props.users.map(u =>\n                <div key={u.id} className={s.friendBox}>\n                    <div className={s.imgBox}>\n\n                        {/*NAVLINK*/}\n                        <NavLink to={'/profile/' + u.id}>\n                            <img alt={u.name} src={u.photos.small || unknown} className={s.img}/>\n                        </NavLink>\n\n                        <button onClick={u.followed ? () => {\n                            unfollow(u.id)\n                        } : () => {\n                            follow(u.id)\n                        }}\n                                className={`${s.followBtn} ${u.followed ? s.red : s.green} ${props.isFollowing\n                                    .includes(u.id) ? s.disabled : ''}`}\n                                disabled={props.isFollowing.some(i => i === u.id)}>\n                            {u.followed ? 'UNFOLLOW' : 'FOLLOW'}\n                        </button>\n                    </div>\n                    <div className={s.infoBox}>\n                        <div>\n                            <p className={`${s.title} ${s.name}`}>Name: </p>\n                            <p className={`${s.description} ${s.name}`}>{u.name}</p>\n                        </div>\n                        <div className={s.infoBottom}>\n                            <div>\n                                <p className={s.title}>Status: </p>\n                                <p className={s.description}>{u.status || \"Nothing yet...\"}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            {/*PAGES*/}\n            <div>\n                {pages.map(p => {\n                    return p === '...' ?\n                        <span key={p + 'page'} className={s.pages}>...</span> :\n                        <span key={p + ' page'}\n                              onClick={() => props.onClickPage(+p)}\n                              className={props.activePage === p ? `${s.activePage} ${s.pages}` : s.pages}>{p}</span>\n                })}\n            </div>\n\n            {/*<button className={`${s.btn} ${s.showBtn}`}>SHOW MORE USERS</button>*/}\n        </div>\n    </>\n}\n\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {StateType} from \"../../redux/redux-store\";\nimport {changePage, follow, getUsers, unfollow} from \"../../redux/users-reducer\";\nimport {statuses, UserType} from \"../../entities/entities\";\nimport {Users} from \"./Users\";\nimport {Preloader} from \"../../common/preloader/Preloader\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n//props\ninterface IUsersPropsType {\n    isLoading: boolean\n    changePage: (page: number) => void\n    getUsers: (pageSize: number, activePage: number) => void\n    users: Array<UserType>\n    status: string\n    activePage: number\n    totalUsersCount: number\n    pageSize: number\n    isFollowing: number[]\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n}\n\ninterface IUsersState {\n}\n\n//COMPONENT\nclass UsersContainer extends React.Component<IUsersPropsType, IUsersState> {\n    componentDidMount() {\n        if (this.props.status === statuses.NOT_INITIALIZED) {\n            this.props.getUsers(this.props.pageSize, this.props.activePage)\n        }\n    }\n\n    onClickPage = (page: number) => {\n        this.props.changePage(page)\n        this.props.getUsers(this.props.pageSize, page)\n    }\n\n    render() {\n        return <>\n            {this.props.isLoading ?\n                <Preloader/>\n                :\n                <Users {...this.props} onClickPage={this.onClickPage}/>\n            }\n        </>\n    }\n}\n\nconst mapStateToProps = (state: StateType) => {\n    return {\n        users: state.users.users,\n        status: state.users.status,\n        pageSize: state.users.pageSize,\n        totalUsersCount: state.users.totalUsersCount,\n        activePage: state.users.activePage,\n        isLoading: state.users.isLoading,\n        isFollowing: state.users.isFollowing,\n    }\n}\n\nexport default compose<React.ComponentType>(\n    withAuthRedirect,\n    connect(mapStateToProps,\n        {\n            changePage,\n            getUsers,\n            follow,\n            unfollow,\n        })\n)(UsersContainer)\n\n","import React from 'react';\nimport s from './Header.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nfunction Header(props: {login: string, isAuth: boolean}) {\n    return (\n        <header>\n            <div className={s.logo}>\n                <img alt={'logo'} src='https://img.apksum.com/9f/nicola.web/2.7/icon.png'/>\n                <NavLink to=\"/profile\">SoNet</NavLink>\n            </div>\n\n            {props.isAuth ?\n                <div className={s.greeting}>Hello, {props.login}</div>\n                :\n                <NavLink to=\"/login\">LogIn</NavLink>\n            }\n        </header>\n    )\n}\n\nexport default Header;","import {Dispatch} from \"redux\";\nimport {authAPI} from \"../api/api\";\n\nenum ACTIONS_AUTH_REDUCER {\n    SET_USER_DATA = 'SET-USER-DATA',\n}\n\nexport type initialAuthStateType = {\n    id: number\n    email: string\n    login: string\n    isAuth: boolean\n}\n\nlet initialAuthState: initialAuthStateType = {\n    id: 0,\n    email: '',\n    login: '',\n    isAuth: false\n}\n\n//REDUCER\nconst authReducer = (state = initialAuthState, action: ActionAuthReducerType): initialAuthStateType => {\n\n    switch (action.type) {\n        case ACTIONS_AUTH_REDUCER.SET_USER_DATA:\n            return {...state, ...action.data, isAuth: true}\n        default:\n            return state;\n    }\n}\n\n//AC\nexport type ActionAuthReducerType = SetUserDataACType\n\ntype SetUserDataACType = { type: typeof ACTIONS_AUTH_REDUCER.SET_USER_DATA, data: {id: number, email: string, login: string} }\n\nexport const setAuthUserData = (id: number, email: string, login: string): SetUserDataACType => ({ type: ACTIONS_AUTH_REDUCER.SET_USER_DATA, data: {id, email, login} })\n\n//thunk\nexport const auth = () => (dispatch: Dispatch<ActionAuthReducerType>) => {\n    authAPI.getAuth().then((data) => {\n        if (data.resultCode === 0) {\n            dispatch(setAuthUserData(data.data.id, data.data.email, data.data.login))\n        }\n    })\n}\nexport default authReducer;","import React from \"react\";\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {auth, setAuthUserData} from \"../../redux/auth-reducer\";\nimport {StateType} from \"../../redux/redux-store\";\n\ntype HeaderProps = {\n    setAuthUserData: (id: number, email: string, login: string) => void\n    login: string\n    isAuth: boolean\n    auth: () => void\n}\n\nclass HeaderContainer extends React.Component<HeaderProps, any> {\n\n    componentDidMount() {\n        this.props.auth()\n    }\n\n    render() {\n        return <>\n            <Header {...this.props}/>\n        </>\n    }\n}\n\nexport default connect((state: StateType) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n}), {\n    setAuthUserData,\n    auth,\n})(HeaderContainer)","import React from 'react';\nimport {reduxForm, Field, InjectedFormProps} from \"redux-form\";\n\nexport type FormDataType = {\n    login: string\n    password: string\n    rememberMe: boolean\n}\n\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) =>  {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field placeholder={'Login'} component={'input'} name={'login'}/>\n            </div>\n            <div>\n                <Field placeholder={'Password'} component={'input'} name={'password'}/>\n            </div>\n            <div>\n                <Field type={'checkbox'} component={'input'} name={'rememberMe'}/> remember me\n            </div>\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm);\n\nconst Login = () => {\n\n    const onSubmit = (formData: FormDataType) => {\n        console.log(formData)\n    }\n\n    return (\n        <div>\n            <h1>LOGIN PAGE</h1>\n            <LoginReduxForm onSubmit={onSubmit}/>\n        </div>\n    )\n}\n\nexport default Login","import React from 'react';\nimport {Route} from \"react-router\";\nimport s from \"./App.module.css\";\nimport Footer from \"./components/Footer/Footer\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport UsersContainer from './components/Users/UsersContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from \"./components/Login/Login\";\n\nfunction App() {\n    return (\n            <div className={s.appWrapper}>\n                <HeaderContainer/>\n                <main>\n                    <Navbar />\n                    <div className={s.content}>\n                        <Route path='/profile/:userID?' component={ProfileContainer}/>\n                        <Route path='/dialogs' component={DialogsContainer}/>\n                        <Route path='/users' component={UsersContainer}/>\n                        <Route path='/news' component={News}/>\n                        <Route path='/music' component={Music}/>\n                        <Route path='/settings' component={Settings}/>\n                        <Route path='/login' component={Login}/>\n                    </div>\n                </main>\n                <Footer/>\n            </div>\n    )\n}\n\nexport default App;\n","import {UserType} from \"../entities/entities\";\n\nenum ACTIONS_FRIENDS_REDUCER {\n    SET_FRIENDS = 'SET-FRIENDS',\n    SET_LOADING = 'SET-LOADING',\n}\n\ntype initialFriendsStateType = {\n    friends: Array<UserType>\n    isLoading: boolean\n}\nlet initialFriendsState: initialFriendsStateType = {\n    friends: [],\n    isLoading: true\n}\n\nconst friendsReducer = (state = initialFriendsState, action: ActionFriendsReducerType) => {\n    switch (action.type) {\n        case \"SET-FRIENDS\":\n            return {...state, friends: [...state.friends, action.friends]}\n        default:\n            return state;\n    }\n}\n\n//Action creators\nexport type ActionFriendsReducerType = SetFriendsACType | SetLoadingACType\n\ntype SetFriendsACType = { friends: UserType[], type: typeof ACTIONS_FRIENDS_REDUCER.SET_FRIENDS}\ntype SetLoadingACType = { loading: boolean, type: typeof ACTIONS_FRIENDS_REDUCER.SET_LOADING}\n\nexport const setFriends = (friends: UserType[]): SetFriendsACType => ({friends, type: ACTIONS_FRIENDS_REDUCER.SET_FRIENDS})\nexport const setLoading = (loading: boolean): SetLoadingACType => ({loading, type: ACTIONS_FRIENDS_REDUCER.SET_LOADING})\n\n\n\nexport default friendsReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport friendsReducer from \"./friends-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleware from 'redux-thunk'\nimport { reducer as formReducer } from 'redux-form'\n\nconst reducers = combineReducers({\n    profile: profileReducer,\n    dialogs: dialogsReducer,\n    friends: friendsReducer,\n    users: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n})\n\nexport type StateType = ReturnType<typeof reducers>\n\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\n// @ts-ignore\nwindow.state= store.getState()\n\nexport default store;","import reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport store from \"./redux/redux-store\";\nimport {Provider} from 'react-redux'\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>, document.getElementById('root'))\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__CLYHD\",\"other\":\"Navbar_other__vqMC5\",\"active\":\"Navbar_active__3mbhk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__A0EJd\",\"postContent\":\"Post_postContent__dePS0\",\"avatar\":\"Post_avatar__1wBwP\",\"message\":\"Post_message__3raFK\",\"like\":\"Post_like__oViQh\",\"likesCount\":\"Post_likesCount__R9C9-\",\"button\":\"Post_button__2dr5U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsMessages\":\"DialogsMessages_dialogsMessages__3QP42\",\"messages\":\"DialogsMessages_messages__3fvU4\",\"sendBox\":\"DialogsMessages_sendBox__3hn7h\",\"textarea\":\"DialogsMessages_textarea__3H-Xz\",\"button\":\"DialogsMessages_button__2YtVE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"MyPosts_title__3q_Ko\",\"textarea\":\"MyPosts_textarea__3KLbu\",\"buttons\":\"MyPosts_buttons__2wUXL\",\"button\":\"MyPosts_button__2WbpQ\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageBox\":\"Profile_imageBox__1et71\",\"arrow\":\"Profile_arrow__te3cM\",\"arrowRight\":\"Profile_arrowRight__3ifeA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__3qKjq\",\"img\":\"Friend_img__3KzQt\",\"name\":\"Friend_name__33ANY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogPage\":\"Dialogs_dialogPage__3cRJY\",\"dialogsColumn\":\"Dialogs_dialogsColumn__y5DL0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3tDA2\",\"img\":\"DialogItem_img__30y70\",\"active\":\"DialogItem_active__2qnc5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__3rnam\",\"content\":\"App_content__3La4L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"FriendsPanel_title__2_gYF\",\"friends\":\"FriendsPanel_friends__3pdJ2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingGif\":\"Preloader_loadingGif__lFy-A\",\"loadingBox\":\"Preloader_loadingBox__1-RkT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__3_SJs\",\"greeting\":\"Header_greeting__1RmOx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Users_titlePage__-qQrJ\",\"container\":\"Users_container__6F9oG\",\"friendBox\":\"Users_friendBox__2qTnN\",\"imgBox\":\"Users_imgBox__3UYsy\",\"img\":\"Users_img__3OuDf\",\"followBtn\":\"Users_followBtn__3m1nP\",\"btn\":\"Users_btn__9AIH5\",\"red\":\"Users_red__3k9_c\",\"green\":\"Users_green__2qlvh\",\"infoBox\":\"Users_infoBox__m1z_G\",\"infoBottom\":\"Users_infoBottom__3bLuP\",\"title\":\"Users_title__2S65O\",\"name\":\"Users_name__3Kys8\",\"description\":\"Users_description__QFQc5\",\"showBtn\":\"Users_showBtn__1c0oR\",\"activePage\":\"Users_activePage__28hh7\",\"pages\":\"Users_pages__2ZPtK\",\"disabled\":\"Users_disabled__vXtPd\"};"],"sourceRoot":""}
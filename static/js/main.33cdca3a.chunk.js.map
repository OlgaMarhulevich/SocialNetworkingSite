{"version":3,"sources":["components/Dialogs/DialogsMessages/Message/Message.module.css","components/Navbar/Navbar.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Dialogs/DialogsMessages/DialogsMessages.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Navbar/FriendsPanel/Friend/Friend.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","App.module.css","components/Navbar/FriendsPanel/FriendsPanel.module.css","components/Header/Header.module.css","components/Footer/Footer.module.css","reportWebVitals.ts","components/Header/Header.tsx","components/Footer/Footer.tsx","components/Navbar/FriendsPanel/Friend/Friend.tsx","components/Navbar/FriendsPanel/FriendsPanel.tsx","components/Navbar/Navbar.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","redux/profile-reducer.ts","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/DialogsMessages/Message/Message.tsx","components/Dialogs/DialogsMessages/DialogsMessages.tsx","components/Dialogs/Dialogs.tsx","redux/dialogs-reducer.ts","components/Dialogs/DialogsContainer.tsx","App.tsx","redux/friends-reducer.ts","redux/redux-store.ts","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","className","s","logo","src","to","Footer","href","Friend","props","friend","img","name","FriendsPanel","friendsPanel","friends","map","id","title","Navbar","navbar","activeClassName","active","settings","friendsPage","ProfileInfo","profileInfo","avatar","alt","description","ADD_POST","UPDATE_NEW_POST_MESSAGE","REMOVE_POST","ADD_LIKE","initialProfileState","posts","message","likesCount","newPostMessage","profileReducer","state","action","type","alert","newPost","length","push","postMessage","filter","post","forEach","Post","postContent","onClick","addLike","like","removePost","button","MyPosts","postsElements","newPostElement","React","createRef","addPostCallback","addPost","onKeyPress","event","key","preventDefault","value","onChange","current","updateNewPostMessage","ref","textarea","placeholder","buttons","MyPostsContainer","store","getState","changeNewPostMessage","dispatch","updateNewPostMessageActionCreator","removePostCallback","removePostActionCreator","addLikeCallback","addLikeActionCreator","profilePage","Profile","News","Music","Settings","DialogItem","dialog","Message","messageComponentMe","messageComponent","messageBabbleMe","messageBabble","tailMe","tail","messageBoxMe","messageBox","time","DialogsMessages","messagesElements","messages","newMessageElement","addMessageCallback","addMessage","dialogsMessages","sendBox","newMessage","changeNewMessage","Dialogs","dialogsElements","dialogs","dialogPage","dialogsColumn","messagesColumn","path","render","prop","match","params","find","d","ADD_MESSAGE","UPDATE_NEW_MESSAGE","initialDialogState","dialogsReducer","currentDialog","trim","DialogsContainer","addMessageActionCreator","changeNewMessageCallback","updateNewMessageActionCreator","dialogsPage","App","appWrapper","content","component","initialState","friendsReducer","reducers","combineReducers","createStore","renderEntireTree","ReactDOM","StrictMode","bind","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.33cdca3a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageComponent\":\"Message_messageComponent__2_iBn\",\"messageComponentMe\":\"Message_messageComponentMe__1w1Wo\",\"img\":\"Message_img__3-T8Q\",\"time\":\"Message_time__oGKVI\",\"messageBabble\":\"Message_messageBabble__2EWNh\",\"messageBabbleMe\":\"Message_messageBabbleMe__1DfI-\",\"tail\":\"Message_tail__3RUok\",\"tailMe\":\"Message_tailMe__m4hsZ\",\"messageBox\":\"Message_messageBox__1ynL0\",\"messageBoxMe\":\"Message_messageBoxMe__3KXIW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__CLYHD\",\"settings\":\"Navbar_settings__1sCcD\",\"active\":\"Navbar_active__3mbhk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__A0EJd\",\"postContent\":\"Post_postContent__dePS0\",\"avatar\":\"Post_avatar__1wBwP\",\"message\":\"Post_message__3raFK\",\"like\":\"Post_like__oViQh\",\"likesCount\":\"Post_likesCount__R9C9-\",\"button\":\"Post_button__2dr5U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"MyPosts_title__3q_Ko\",\"textarea\":\"MyPosts_textarea__3KLbu\",\"buttons\":\"MyPosts_buttons__2wUXL\",\"button\":\"MyPosts_button__2WbpQ\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsMessages\":\"DialogsMessages_dialogsMessages__3QP42\",\"messages\":\"DialogsMessages_messages__3fvU4\",\"sendBox\":\"DialogsMessages_sendBox__3hn7h\",\"textarea\":\"DialogsMessages_textarea__3H-Xz\",\"button\":\"DialogsMessages_button__2YtVE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__2IJgv\",\"avatar\":\"ProfileInfo_avatar__3xuFq\",\"description\":\"ProfileInfo_description__2yWda\",\"title\":\"ProfileInfo_title__2t6A6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__3qKjq\",\"img\":\"Friend_img__3KzQt\",\"name\":\"Friend_name__33ANY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogPage\":\"Dialogs_dialogPage__3cRJY\",\"dialogsColumn\":\"Dialogs_dialogsColumn__y5DL0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3tDA2\",\"img\":\"DialogItem_img__30y70\",\"active\":\"DialogItem_active__2qnc5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__3rnam\",\"content\":\"App_content__3La4L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"FriendsPanel_title__2_gYF\",\"friends\":\"FriendsPanel_friends__3pdJ2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__3_SJs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Footer_logo__3ACxa\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport s from './Header.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nfunction Header() {\n    return (\n        <header>\n            <div className={s.logo}>\n                <img src='https://img.apksum.com/9f/nicola.web/2.7/icon.png'/>\n                <NavLink to=\"/profile\">SoNet</NavLink>\n            </div>\n            <div></div>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport './Footer.module.css';\n\nfunction Footer() {\n    return (\n        <footer>&copy; My first site on &nbsp;<a href='#'>React</a></footer>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport s from './Friend.module.css';\n\ntype FriendPropsType = {\n    name: string,\n    img: string\n}\n\nfunction Friend(props: FriendPropsType) {\n    return (\n        <div className={s.friend}>\n            <img src={props.img} className={s.img}/>\n            <p className={s.name}>{props.name}</p>\n        </div>\n    )\n}\n\nexport default Friend;","import React from 'react';\nimport s from './FriendsPanel.module.css';\nimport Friend from \"./Friend/Friend\";\n\ntype FriendsPanelPropsType = {\n    friends: {\n        id: number\n        name: string\n        img: string\n    }[]\n}\n\nfunction FriendsPanel(props: FriendsPanelPropsType) {\n\n    let friendsPanel =\n        props.friends.map(friend => <Friend key={friend.id} name={friend.name} img={friend.img}/>)\n\n    return (\n        <div>\n            <p className={s.title}>Friends</p>\n            <div className={s.friends}>\n                {friendsPanel}\n            </div>\n        </div>\n    )\n}\n\nexport default FriendsPanel;","import React from 'react';\nimport s from './Navbar.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport FriendsPanel from \"./FriendsPanel/FriendsPanel\";\n\ntype NavbarPropsType = {\n    friendsPage: {\n        friends:\n            {\n                id: number\n                name: string,\n                img: string\n            }[]\n    }\n}\n\nfunction Navbar(props: NavbarPropsType) {\n    return (\n        <aside>\n            <nav className={s.navbar}>\n                <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\n                <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\n                <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\n                <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\n                <NavLink to=\"/settings\" activeClassName={s.active} className={s.settings}>Settings</NavLink>\n                <FriendsPanel friends={props.friendsPage.friends}/>\n            </nav>\n        </aside>\n    )\n}\n\nexport default Navbar;","import React from 'react';\nimport s from './ProfileInfo.module.css';\n\nfunction ProfileInfo() {\n    return (\n        <div className={s.profileInfo}>\n            <img className={s.avatar} src='https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-58-696x696.jpg' alt='avatar'/>\n            <div>\n                <p className={s.title}>About me</p>\n                <p className={s.description}>\n                    Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n                    Aenean commodo ligula eget dolor. Aenean massa.\n                    Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.\n                    Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem.\n                    Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec.\n                </p>\n            </div>\n\n        </div>\n    )\n}\n\nexport default ProfileInfo;","import {PostType} from \"../entities/entities\";\n\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_MESSAGE = 'UPDATE-NEW-POST-MESSAGE';\nconst REMOVE_POST = 'REMOVE-POST';\nconst ADD_LIKE = 'ADD-LIKE';\n\nexport type initialProfileStateType = {\n    posts: Array<PostType>\n    newPostMessage: string\n}\nlet initialProfileState: initialProfileStateType = {\n    posts: [\n        {id: 1, message: 'It is my first post!', likesCount: 25},\n        {id: 2, message: 'How are you?', likesCount: 15},\n    ],\n    newPostMessage: ''\n}\n\nconst profileReducer = (state = initialProfileState, action: ActionProfileReducerType): initialProfileStateType => {\n    switch (action.type) {\n        case ADD_POST: {\n            if (state.newPostMessage === '') {\n                alert('Message could not be empty!')\n            } else {\n                const newPost = {\n                    id: state.posts.length + 1,\n                    message: state.newPostMessage,\n                    likesCount: 0\n                };\n                state.posts.push(newPost);\n                state.newPostMessage = '';\n            }\n            return state;\n        }\n        case UPDATE_NEW_POST_MESSAGE: {\n            state.newPostMessage = action.postMessage;\n            return state;\n        }\n        case REMOVE_POST: {\n            state.posts = state.posts.filter(post => post.id !== action.id);\n            return state;\n        }\n        case ADD_LIKE: {\n            state.posts.forEach(post => post.id === action.id ? post.likesCount++ : post)\n            return state;\n        }\n        default:\n            return state;\n    }\n}\n\n//Action creators\nexport type ActionProfileReducerType = addPostActionCreatorType\n                                     | updateNewPostMessageActionCreatorType\n                                     | removePostActionCreatorType\n                                     | addLikeActionCreatorType\n\ntype addPostActionCreatorType = { type: typeof ADD_POST }\ntype updateNewPostMessageActionCreatorType = { type: typeof UPDATE_NEW_POST_MESSAGE, postMessage: string }\ntype removePostActionCreatorType = { type: typeof REMOVE_POST, id: number }\ntype addLikeActionCreatorType = { type: typeof ADD_LIKE, id: number }\n\nexport const addPostActionCreator = (): addPostActionCreatorType => ({type: ADD_POST});\nexport const updateNewPostMessageActionCreator = (postMessage: string = ''): updateNewPostMessageActionCreatorType => {\n    return {type: UPDATE_NEW_POST_MESSAGE, postMessage: postMessage};\n}\nexport const removePostActionCreator = (id: number): removePostActionCreatorType =>\n    ({type: REMOVE_POST, id: id});\nexport const addLikeActionCreator = (id: number): addLikeActionCreatorType =>\n    ({type: ADD_LIKE, id: id});\n\n\nexport default profileReducer;\n","import React from 'react';\nimport s from './Post.module.css';\n\n\ntype PostPropsType = {\n    id: number\n    message: string\n    likesCount: number\n    removePost: (id: number) => void\n    addLike: (id: number) => void\n}\n\nfunction Post (props: PostPropsType) {\n\n    const removePostCallback = () => {\n        props.removePost(props.id)\n    }\n    const addLikeCallback = () => {\n        props.addLike(props.id)\n    }\n\n    return (\n        <div className={s.post}>\n            <div className={s.postContent}>\n                <img className={s.avatar}\n                    src='https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-58-696x696.jpg' alt='Avatar'/>\n                <div className={s.message}>{props.message}</div>\n            </div>\n\n            <div>\n                <span className={s.likesCount}>{props.likesCount} likes</span>\n                <button onClick={addLikeCallback} className={s.like}>Like!</button>\n                <button onClick={removePostCallback} className={s.button}>Remove post</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Post;","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\nimport {PostType} from \"../../../entities/entities\";\n\ntype MyPostsPropsType = {\n    posts: Array<PostType>\n    newPostMessage: string\n    addPost: () => void\n    updateNewPostMessage: (newPostMessage: string) => void\n    removePost: (id: number) => void\n    addLike: (id: number) => void\n}\n\nfunction MyPosts(props: MyPostsPropsType) {\n\n    const postsElements =\n        props.posts.map(post =>\n           <Post key={post.id}\n                 id={post.id}\n                 message={post.message}\n                 likesCount={post.likesCount}\n                 removePost={(id) => props.removePost(id)}\n                 addLike={(id) => props.addLike(id)}/>)\n\n    const newPostElement = React.createRef<HTMLTextAreaElement>();\n\n    const addPostCallback = () => {\n        props.addPost()\n    }\n    const changeNewPostMessage = () => {\n        const newPostMessage = newPostElement.current?.value\n        newPostMessage && props.updateNewPostMessage(newPostMessage)\n    }\n\n    const enterPressed = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n        if (event.key === 'Enter') {\n            event.preventDefault()\n            addPostCallback()\n        }\n    }\n\n    return (\n        <div>\n            <p className={s.title}>My Posts</p>\n            <div>\n                <textarea onKeyPress={enterPressed} value={props.newPostMessage} onChange={changeNewPostMessage} ref={newPostElement} className={s.textarea} placeholder='Your message...'/>\n                <div className={s.buttons}>\n                    <button onClick={addPostCallback} className={s.button}>Add post</button>\n                </div>\n            </div>\n            <div className={s.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n}\n\nexport default MyPosts;","import React from 'react';\nimport {StateType} from \"../../../redux/redux-store\";\nimport {Store} from \"redux\";\nimport {\n    addLikeActionCreator,\n    addPostActionCreator,\n    removePostActionCreator,\n    updateNewPostMessageActionCreator\n} from \"../../../redux/profile-reducer\";\nimport MyPosts from './MyPosts';\n\ntype MyPostsContainerPropsType = {\n    store: Store\n}\n\nfunction MyPostsContainer(props: MyPostsContainerPropsType) {\n    const state = props.store.getState() as StateType\n    //for MyPosts\n    const addPostCallback = () => {\n        props.store.dispatch(addPostActionCreator());\n    }\n    const changeNewPostMessage = (newPostMessage: string) => {\n        props.store.dispatch(updateNewPostMessageActionCreator(newPostMessage))\n    }\n    //for Post\n    const removePostCallback = (id: number) => {\n        props.store.dispatch(removePostActionCreator(id))\n    }\n    const addLikeCallback = (id: number) => {\n        props.store.dispatch(addLikeActionCreator(id))\n    }\n\n    return (\n        <MyPosts\n            addPost={addPostCallback}\n            updateNewPostMessage={(newPostMessage) => changeNewPostMessage(newPostMessage)}\n            posts={state.profilePage.posts}\n            newPostMessage={state.profilePage.newPostMessage}\n            removePost={(id) => removePostCallback(id)}\n            addLike={(id) => addLikeCallback(id)}/>\n    )\n}\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport {Store} from \"redux\";\n\ntype ProfilePropsType = {\n    store: Store\n}\n\nfunction Profile(props: ProfilePropsType) {\n    return (\n        <div>\n            {/*<div className={s.image}> </div>  //pic   */}\n            <ProfileInfo />\n            <MyPostsContainer store={props.store}/>\n        </div>\n    )\n}\n\nexport default Profile;","import React from \"react\";\nimport s from './News.module.css';\n\nfunction News() {\n    return (\n        <div>\n            News\n        </div>\n    )\n}\n\nexport default News;\n","import React from \"react\";\nimport s from './Music.module.css';\n\nfunction Music() {\n    return (\n        <div>\n            Music\n        </div>\n    )\n}\n\nexport default Music;\n","import React from \"react\";\nimport s from './Settings.module.css';\n\nfunction Settings() {\n    return (\n        <div>\n            Settings\n        </div>\n    )\n}\n\nexport default Settings;\n","import React from \"react\";\nimport s from './DialogItem.module.css';\nimport {NavLink} from \"react-router-dom\";\n\ntype DialogItemPropsType = {\n    id: number,\n    name: string,\n    img: string\n}\n\nfunction DialogItem(props: DialogItemPropsType) {\n    return (\n        <div>\n            <NavLink to={'/dialogs/' + props.id} className={s.dialog} activeClassName={s.active}>\n                <img className={s.img} src={props.img} alt={props.name}/>\n                {props.name}\n            </NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem;\n","import React from \"react\";\nimport s from './Message.module.css';\n\ntype MessagePropsType = {\n    message: string,\n    name: string,\n    img: string\n}\n\nfunction Message(props: MessagePropsType) {\n\n    const messageComponentFrom = () => {\n        return (props.name === 'Me') ? s.messageComponentMe : s.messageComponent\n    }\n    const messageBabbleFrom = () => {\n        return (props.name === 'Me') ? s.messageBabbleMe : s.messageBabble\n    }\n    const tailFrom = () => {\n        return (props.name === 'Me') ? s.tailMe : s.tail\n    }\n\n    const messageBoxFrom = () => {\n        return (props.name === 'Me') ? s.messageBoxMe : s.messageBox\n    }\n\n\n    return (\n        <div className={messageComponentFrom()}>\n            <img className={s.img} src={props.img} alt=\"avatar\"/>\n            <div className={messageBabbleFrom()}>\n                <div className={tailFrom()}/>\n                <div className={messageBoxFrom()}>\n                    <div className={s.message}>{props.message}</div>\n                    <div className={s.time}>22:00</div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message;\n","import s from \"../DialogsMessages/DialogsMessages.module.css\";\nimport React from \"react\";\nimport Message from \"./Message/Message\";\nimport {DialogType} from \"../../../entities/entities\";\n\ntype DialogsMessagesPropsType = {\n    dialog: DialogType\n    addMessage: (id: number) => void\n    changeNewMessage: (newMessage: string, id: number) => void\n}\n\nexport const DialogsMessages = (props: DialogsMessagesPropsType) => {\n\n    const messagesElements = props.dialog.messages.map(message =>\n        <Message name={message.name} img={message.img} message={message.message}/>)\n\n    const newMessageElement = React.createRef<HTMLTextAreaElement>();\n\n    const addMessageCallback = () => {\n        props.addMessage(props.dialog.id)\n    }\n    const changeNewMessage = () => {\n        const newMessage = newMessageElement.current?.value;\n        newMessage && props.changeNewMessage(newMessage, props.dialog.id)\n    }\n\n    const enterPressed = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            addMessageCallback()\n        }\n    }\n\n    return (\n        <div className={s.dialogsMessages}>\n            <div className={s.messages}>\n                { messagesElements}\n            </div>\n            <div className={s.sendBox}>\n                <textarea onKeyPress={enterPressed} value={props.dialog.newMessage} onChange={changeNewMessage}\n                          ref={newMessageElement} placeholder={'Text your message...'} className={s.textarea}/>\n                <button onClick={addMessageCallback} className={s.button}>Send</button>\n            </div>\n\n\n        </div>\n\n    )\n}","import React from \"react\";\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport {DialogsMessages} from \"./DialogsMessages/DialogsMessages\";\nimport {Route} from \"react-router\";\nimport {DialogType} from \"../../entities/entities\";\n\ntype DialogsPropsType = {\n    dialogs: DialogType[]\n    addMessage: (id: number) => void\n    changeNewMessage: (newMessage: string, id: number) => void\n}\n\nfunction Dialogs(props: DialogsPropsType) {\n\n    const dialogsElements = props.dialogs.map(dialog =>\n        <DialogItem img={dialog.img} id={dialog.id} name={dialog.name}/>)\n\n    return (\n        <div className={s.dialogPage}>\n            <div className={s.dialogsColumn}>\n                {dialogsElements}\n            </div>\n\n            <div className={s.messagesColumn}>\n\n                <Route path='/dialogs/:id' render={(prop) => {\n                    const id = prop.match.params.id;\n                    const dialog = props.dialogs.find(d => d.id === +id);\n                    return (\n                        dialog && <DialogsMessages\n                            dialog={dialog}\n                            addMessage={(id) => props.addMessage(id)}\n                            changeNewMessage={(newMessage, id) => props.changeNewMessage(newMessage, id)}/>\n                    )\n                }\n                }/>\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs;\n","import {DialogType} from \"../entities/entities\";\n\nconst ADD_MESSAGE = 'ADD-MESSAGE';\nconst UPDATE_NEW_MESSAGE = 'UPDATE-NEW-MESSAGE';\n\nexport type initialDialogsStateType = {\n    dialogs: Array<DialogType>\n}\nlet initialDialogState: initialDialogsStateType = {\n    dialogs: [\n        {\n            id: 1,\n            name: 'Nick',\n            img: 'https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg',\n            messages: [\n                {\n                    message: 'Hi!',\n                    name: 'Nick',\n                    img: 'https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg'\n                },\n                {\n                    message: 'How are you?',\n                    name: 'Nick',\n                    img: 'https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg'\n                },\n                {\n                    message: 'Yo',\n                    name: 'Me',\n                    img: 'https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-58-696x696.jpg'\n                },\n                {\n                    message: \"I'm fine! How're you?\",\n                    name: 'Me',\n                    img: 'https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-58-696x696.jpg'\n                },\n            ],\n            newMessage: ''\n        },\n        {\n            id: 2, name: 'Jhon', img: 'https://vraki.net/sites/default/files/inline/images/30_55.jpg',\n            messages: [\n                {\n                    message: 'Hi!',\n                    name: 'Jhon',\n                    img: 'https://vraki.net/sites/default/files/inline/images/30_55.jpg'\n                }],\n            newMessage: ''\n        },\n        {\n            id: 3, name: 'Anna', img: 'https://pixelbox.ru/wp-content/uploads/2021/04/ava-mult-vk-78.jpg',\n            messages: [\n                {\n                    message: 'Hi!',\n                    name: 'Anna',\n                    img: 'https://pixelbox.ru/wp-content/uploads/2021/04/ava-mult-vk-78.jpg'\n                }],\n            newMessage: ''\n        },\n    ]\n}\n\nconst dialogsReducer = (state = initialDialogState, action: ActionDialogsReducerType): initialDialogsStateType => {\n    let currentDialog = state.dialogs.find(d => d.id === action.id)\n    if (currentDialog) {\n        switch (action.type) {\n            case ADD_MESSAGE: {\n                if (!currentDialog.newMessage.trim()) {\n                    currentDialog.newMessage = '';\n                    return state\n                }\n                const newMessage = {\n                    message: currentDialog.newMessage,\n                    name: 'Me',\n                    img: 'https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-58-696x696.jpg'\n                }\n                currentDialog.messages.push(newMessage)\n                currentDialog.newMessage = '';\n                return state;\n            }\n            case UPDATE_NEW_MESSAGE: {\n                currentDialog.newMessage = action.message;\n                return state;\n            }\n            default:\n                return state;\n        }\n    } else return state\n}\n\n//Action creators\nexport type ActionDialogsReducerType = addMessageActionCreatorType | updateNewMessageActionCreatorType\n\ntype addMessageActionCreatorType = {type: typeof ADD_MESSAGE, id: number}\ntype updateNewMessageActionCreatorType = {type: typeof UPDATE_NEW_MESSAGE, message: string, id: number}\n\nexport const addMessageActionCreator = (id: number): addMessageActionCreatorType => ({type: ADD_MESSAGE, id: id});\nexport const updateNewMessageActionCreator = (message: string = '', id: number): updateNewMessageActionCreatorType => {\n    return {type: UPDATE_NEW_MESSAGE, message: message, id: id};\n}\n\nexport default dialogsReducer;","import React from \"react\";\nimport {Store} from \"redux\";\nimport Dialogs from \"./Dialogs\";\nimport {StateType} from \"../../redux/redux-store\";\nimport {addMessageActionCreator, updateNewMessageActionCreator} from \"../../redux/dialogs-reducer\";\n\ntype DialogsContainerPropsType = {\n    store: Store\n}\n\nfunction DialogsContainer(props: DialogsContainerPropsType) {\n    const state = props.store.getState() as StateType\n\n    const addMessageCallback = (id: number) => {\n        props.store.dispatch(addMessageActionCreator(id));\n    }\n    const changeNewMessageCallback = (newMessage: string, id: number) => {\n        props.store.dispatch(updateNewMessageActionCreator(newMessage, id));\n    }\n\n    return <Dialogs\n        dialogs={state.dialogsPage.dialogs}\n        addMessage={(id) => addMessageCallback(id)}\n        changeNewMessage={(newMessage, id) => changeNewMessageCallback(newMessage, id)}/>\n}\n\nexport default DialogsContainer;\n","import React from 'react';\nimport {Route} from \"react-router\";\nimport s from \"./App.module.css\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Profile from \"./components/Profile/Profile\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport {ActionType, StateType} from \"./redux/redux-store\";\nimport {Store} from \"redux\";\n\ntype AppPropsType = {\n    store: Store\n    state: StateType\n    dispatch: (action: ActionType) => void\n}\n\nfunction App(props: AppPropsType) {\n    return (\n            <div className={s.appWrapper}>\n                <Header/>\n                <main>\n                    <Navbar friendsPage={props.state.friendsPage}/>\n                    <div className={s.content}>\n                        <Route path='/profile' render={() =>\n                            <Profile store={props.store}/>}/>\n                        \n                        <Route path='/dialogs' render={() =>\n                            <DialogsContainer store={props.store}/>}/>\n                        \n                        <Route path='/news' component={News}/>\n                        <Route path='/music' component={Music}/>\n                        <Route path='/settings' component={Settings}/>\n                    </div>\n                </main>\n                <Footer/>\n            </div>\n    )\n}\n\nexport default App;\n","let initialState = {\n    friends: [\n        {id: 1, name: 'Jhon', img: 'https://vraki.net/sites/default/files/inline/images/30_55.jpg'},\n        {id: 2, name: 'Merry', img: 'https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-2.jpg'},\n        {id: 3, name: 'Anna', img: 'https://pixelbox.ru/wp-content/uploads/2021/04/ava-mult-vk-78.jpg'},\n        {\n            id: 4,\n            name: 'Nick',\n            img: 'https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg'\n        }\n    ]\n}\n\nconst friendsReducer = (state: any = initialState, action: any) => {\n    return state;\n}\n\nexport default friendsReducer;","import {combineReducers, createStore} from \"redux\";\nimport profileReducer, {ActionProfileReducerType} from \"./profile-reducer\";\nimport dialogsReducer, {ActionDialogsReducerType} from \"./dialogs-reducer\";\nimport friendsReducer from \"./friends-reducer\";\nimport { Store } from \"redux\";\n\nconst reducers = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    friendsPage: friendsReducer,\n})\n\nexport type StateType = ReturnType<typeof reducers>\nexport type ActionType = ActionProfileReducerType | ActionDialogsReducerType\n\nconst store: Store = createStore(reducers);\n\nexport default store;","import reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport store, {StateType} from \"./redux/redux-store\";\n\nconst renderEntireTree = (state: StateType) => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <BrowserRouter>\n                <App state={state} dispatch={store.dispatch.bind(store)} store={store}/>\n            </BrowserRouter>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\n\nrenderEntireTree(store.getState());\n\nstore.subscribe(() => renderEntireTree(store.getState()));\n\nreportWebVitals();\n"],"sourceRoot":""}
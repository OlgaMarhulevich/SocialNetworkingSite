{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Users/User/User.module.css","components/Footer/Footer.module.css","components/Dialogs/DialogsMessages/Message/Message.module.css","components/Navbar/Navbar.module.css","reportWebVitals.ts","components/Footer/Footer.tsx","components/Navbar/FriendsPanel/Friend/Friend.tsx","assets/images/unknown.png","components/Navbar/FriendsPanel/FriendsPanel.tsx","redux/reducers/friends-reducer.ts","redux/selectors.ts","components/Navbar/FriendsPanel/FriendsPanelContainer.tsx","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/DialogsMessages/Message/Message.tsx","common/utils/validators/validators.ts","common/formsControls/FormsControls.tsx","components/Dialogs/DialogForm.tsx","components/Dialogs/DialogsMessages/DialogsMessages.tsx","components/Dialogs/Dialogs.tsx","redux/reducers/dialogs-reducer.ts","hoc/withAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/PostForm/PostForm.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","redux/reducers/profile-reducer.ts","api/api.tsx","redux/reducers/users-reducer.ts","assets/images/loading.gif","common/preloader/Preloader.tsx","components/Profile/ProfileContainer.tsx","common/utils/helpers.ts","common/pagination/Pagination.tsx","components/Users/User/User.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx","components/Header/Header.tsx","redux/reducers/auth-reducer.ts","components/Header/HeaderContainer.tsx","components/Login/LoginForm.tsx","components/Login/Login.tsx","redux/reducers/app-reducer.ts","App.tsx","redux/redux-store.ts","index.tsx","components/Profile/MyPosts/Post/Post.module.css","components/Dialogs/DialogsMessages/DialogsMessages.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Login/Login.module.css","components/Users/Users.module.css","common/formsControls/FormsControls.module.css","components/Profile/Profile.module.css","common/pagination/Pagination.module.css","components/Header/Header.module.css","components/Navbar/FriendsPanel/Friend/Friend.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","App.module.css","components/Navbar/FriendsPanel/FriendsPanel.module.css","common/preloader/Preloader.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Footer","href","Friend","props","className","s","friend","to","id","alt","name","src","img","FriendsPanel","ACTIONS_FRIENDS_REDUCER","friendsPanel","friends","map","length","slice","photos","small","unknown","title","getPosts","state","profile","posts","getProfileState","getIsFetchingProfile","isFetching","getProfileStatusState","profileStatus","getIsAuth","auth","isAuth","getLogin","login","getUserId","getDialogs","dialogs","getUsersState","users","getFilteredUsers","createSelector","filterForSearch","filter","u","toUpperCase","indexOf","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getActivePage","activePage","getIsLoadingUsers","isLoading","getIsFollowing","isFollowing","initialFriendsState","friendsReducer","action","type","ADD_FRIEND","REMOVE_FRIEND","f","friendId","SET_FRIENDS","followed","FriendsPanelContainer","this","setFriends","React","Component","connect","Navbar","navbar","activeClassName","active","other","News","Music","Settings","DialogItem","dialog","Message","messageComponentMe","messageComponent","messageBabbleMe","messageBabble","tailMe","tail","messageBoxMe","messageBox","message","time","required","value","undefined","maxLengthCreator","max","minLengthCreator","min","Textarea","input","meta","error","touched","formControl","Input","DialogReduxForm","reduxForm","form","onSubmit","handleSubmit","sendBox","Field","placeholder","component","textarea","validate","button","DialogsMessages","messagesElements","messages","index","dialogsMessages","values","addMessage","newMessage","Dialogs","dialogsElements","dialogPage","dialogsColumn","messagesColumn","path","render","prop","dialogID","match","params","find","d","changeNewMessage","ADD_MESSAGE","initialDialogState","dialogsReducer","trim","mapStateToProps","withAuthRedirect","restProps","compose","ProfileInfo","editMode","status","onEditMode","setState","offEditMode","updateProfileStatus","inputBox","autoFocus","onBlur","onChange","e","currentTarget","onKeyPress","key","onDoubleClick","profileBox","avatar","large","fullName","profileInfo","div","ProfileStatus","description","lookingForAJob","aboutMe","Post","post","postContent","likesCount","onClick","addLike","like","removePost","maxLength200","minValue2","PostReduxForm","buttons","MyPosts","postsElements","addPost","Profile","ACTIONS_PROFILE_TYPE","imageBox","arrow","arrowRight","axiosInstance","axios","create","baseURL","withCredentials","headers","usersAPI","get","response","data","userId","delete","profileAPI","userID","put","authAPI","email","password","rememberMe","ACTIONS_USER_REDUCER","initialProfileState","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJobDescription","setProfile","SET_PROFILE","setFetching","fetching","TOGGLE_FETCHING","setProfileStatus","SET_PROFILE_STATUS","profileReducer","ADD_POST","newPost","REMOVE_POST","confirm","ADD_LIKE","Preloader","loadingBox","loadingGif","preloader","ProfileContainer","toString","getProfile","getProfileStatus","prevProps","prevState","snapshot","dispatch","resultCode","withRouter","updateProperty","arrOfObj","paramNameForSearch","paramShouldBe","updateWithObject","obj","initialUsersState","changeFollowedStatus","isFollow","CHANGE_FOLLOWED_STATUS","setLoading","loading","SET_LOADING","setFollowing","following","SET_FOLLOWING","usersReducer","SET_USERS","CHANGE_PAGE","page","SET_USERS_COUNT","usersCount","SET_FILTER","Pagination","onClickPage","pagesCount","Math","ceil","pages","i","push","p","User","user","unfollow","follow","useDispatch","friendBox","imgBox","followBtn","red","green","includes","disabled","some","infoBox","infoBottom","Users","useState","searchValue","setSearchValue","timeoutId","setTimeoutId","titlePage","container","searchBox","search","clearTimeout","newTimeoutId","setTimeout","setFilter","style","margin","UsersContainer","changePage","getUsers","totalCount","items","Header","ACTIONS_AUTH_REDUCER","logo","loginBox","greeting","logoutBtn","logout","initialAuthState","setAuthUserData","SET_USER_DATA","payload","a","authReducer","HeaderContainer","maxLength25","minLength6","LoginReduxForm","formSummaryError","res","messageError","stopSubmit","_error","loginPage","formData","initialAppState","isInitialized","appReducer","App","initializedApp","appWrapper","content","DialogsContainer","Login","exact","app","Promise","all","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","getState","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e18e343f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileBox\":\"ProfileInfo_profileBox__1v93W\",\"profileInfo\":\"ProfileInfo_profileInfo__2IJgv\",\"avatar\":\"ProfileInfo_avatar__3xuFq\",\"div\":\"ProfileInfo_div__3At7N\",\"title\":\"ProfileInfo_title__2t6A6\",\"name\":\"ProfileInfo_name__1VvQB\",\"description\":\"ProfileInfo_description__2yWda\",\"status\":\"ProfileInfo_status__2G3BZ\",\"inputBox\":\"ProfileInfo_inputBox__2oJBN\",\"input\":\"ProfileInfo_input__f3lao\",\"saveStatusBtn\":\"ProfileInfo_saveStatusBtn__2vNYc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendBox\":\"User_friendBox__Re3wp\",\"imgBox\":\"User_imgBox__2lIVh\",\"img\":\"User_img__quOXQ\",\"followBtn\":\"User_followBtn__BzJjg\",\"btn\":\"User_btn__3I3KW\",\"red\":\"User_red__3CT_s\",\"green\":\"User_green__SIhIk\",\"infoBox\":\"User_infoBox__P_UN2\",\"infoBottom\":\"User_infoBottom__1iPqy\",\"title\":\"User_title__1-Sd-\",\"name\":\"User_name__3NrJR\",\"description\":\"User_description__21u9g\",\"showBtn\":\"User_showBtn__1f2RP\",\"activePage\":\"User_activePage__3SHjj\",\"pages\":\"User_pages__3ZTPc\",\"disabled\":\"User_disabled__2Oj7g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Footer_logo__3ACxa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageComponent\":\"Message_messageComponent__2_iBn\",\"messageComponentMe\":\"Message_messageComponentMe__1w1Wo\",\"img\":\"Message_img__3-T8Q\",\"time\":\"Message_time__oGKVI\",\"messageBabble\":\"Message_messageBabble__2EWNh\",\"messageBabbleMe\":\"Message_messageBabbleMe__1DfI-\",\"tail\":\"Message_tail__3RUok\",\"tailMe\":\"Message_tailMe__m4hsZ\",\"messageBox\":\"Message_messageBox__1ynL0\",\"messageBoxMe\":\"Message_messageBoxMe__3KXIW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__CLYHD\",\"other\":\"Navbar_other__vqMC5\",\"active\":\"Navbar_active__3mbhk\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport './Footer.module.css';\n\nfunction Footer() {\n    return (\n        <footer>&copy; My first site on &nbsp;<a href='#'>React</a></footer>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport s from './Friend.module.css';\nimport {NavLink} from \"react-router-dom\";\n\ntype FriendPropsType = {\n    name: string,\n    img: string\n    id: number\n}\n\nfunction Friend(props: FriendPropsType) {\n    return (\n        <div className={s.friend}>\n            <NavLink to={'/profile/' + props.id}>\n                <img alt={props.name} src={props.img} className={s.img}/>\n            </NavLink>\n            <p className={s.name}>{props.name}</p>\n        </div>\n    )\n}\n\nexport default Friend;","export default __webpack_public_path__ + \"static/media/unknown.dc967cb3.png\";","import React from 'react';\nimport s from './FriendsPanel.module.css';\nimport Friend from \"./Friend/Friend\";\nimport {UserType} from \"../../../entities/entities\";\nimport unknown from '../../../assets/images/unknown.png'\n\ntype FriendsPanelPropsType = {\n    friends: Array<UserType>\n}\n\nfunction FriendsPanel(props: FriendsPanelPropsType) {\n\n    let friendsPanel = props.friends.map(friend =>\n                <Friend\n                    key={friend.id}\n                    id={friend.id}\n                    name={friend.name.length > 7 ? (friend.name.slice(0, 6) + '...') : friend.name}\n                    img={friend.photos.small || unknown}/>)\n\n    return (\n        <div>\n            <p className={s.title}>Friends</p>\n            <div className={s.friends}>\n                {friendsPanel}\n            </div>\n        </div>\n    )\n}\n\nexport default FriendsPanel;","import {UserType} from \"../../entities/entities\";\n\nenum ACTIONS_FRIENDS_REDUCER {\n    ADD_FRIEND = 'ADD-FRIEND',\n    REMOVE_FRIEND = 'REMOVE-FRIEND',\n    SET_FRIENDS = 'SET-FRIENDS',\n}\n\ntype initialFriendsStateType = {\n    friends: Array<UserType>\n}\nlet initialFriendsState: initialFriendsStateType = {\n    friends: []\n}\n\nconst friendsReducer = (state = initialFriendsState, action: ActionFriendsReducerType) => {\n    switch (action.type) {\n        case ACTIONS_FRIENDS_REDUCER.ADD_FRIEND:\n            return {...state, friends: [...state.friends, action.friend]}\n        case ACTIONS_FRIENDS_REDUCER.REMOVE_FRIEND:\n            return {...state, friends: state.friends.filter(f => f.id !== action.friendId)}\n        case ACTIONS_FRIENDS_REDUCER.SET_FRIENDS:\n            return {...state, friends: [...state.friends, ...action.users.filter(u => u.followed)]}\n        default:\n            return state;\n    }\n}\n\n//Action creators\nexport type ActionFriendsReducerType = AddFriendACType | SetFriendsACType | RemoveFriendACType\n\ntype AddFriendACType = ReturnType<typeof addFriend>\ntype RemoveFriendACType = ReturnType<typeof removeFriend>\ntype SetFriendsACType = ReturnType<typeof setFriends>\n\nexport const addFriend = (friend: UserType) => ({friend, type: ACTIONS_FRIENDS_REDUCER.ADD_FRIEND} as const)\nexport const removeFriend = (friendId: number) => ({friendId, type: ACTIONS_FRIENDS_REDUCER.REMOVE_FRIEND} as const)\nexport const setFriends = (users: Array<UserType>) => ({users, type: ACTIONS_FRIENDS_REDUCER.SET_FRIENDS} as const)\n\nexport default friendsReducer;","import {AppStateType} from \"./redux-store\";\nimport {createSelector} from \"reselect\";\n\n//profile selectors\nexport const getPosts = (state: AppStateType) => state.profile.posts\nexport const getProfileState = (state: AppStateType) => state.profile.profile\nexport const getIsFetchingProfile = (state: AppStateType) => state.profile.isFetching\nexport const getProfileStatusState = (state: AppStateType) => state.profile.profileStatus\n\n//auth selectors\nexport const getIsAuth = (state: AppStateType) => state.auth.isAuth\nexport const getLogin = (state: AppStateType) => state.auth.login\nexport const getUserId = (state: AppStateType) => state.auth.id\n\n//dialogs selectors\nexport const getDialogs = (state: AppStateType) => state.dialogs.dialogs\n\n//friends selectors\n\n//users selectors\nexport const getUsersState = (state: AppStateType) => state.users.users\nexport const getFilterForSearch = (state: AppStateType) => state.users.filterForSearch\n//reselector\nexport const getFilteredUsers = createSelector(getUsersState, getFilterForSearch, (users, filter) => {\n    return users.filter(u => u.name.toUpperCase().indexOf(filter.toUpperCase()) > -1)\n})\n\nexport const getPageSize = (state: AppStateType) => state.users.pageSize\nexport const getTotalUsersCount = (state: AppStateType) => state.users.totalUsersCount\nexport const getActivePage = (state: AppStateType) => state.users.activePage\nexport const getIsLoadingUsers = (state: AppStateType) => state.users.isLoading\nexport const getIsFollowing = (state: AppStateType) => state.users.isFollowing\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport FriendsPanel from \"./FriendsPanel\";\nimport {AppStateType} from \"../../../redux/redux-store\";\nimport {UserType} from \"../../../entities/entities\";\nimport {getUsersState} from \"../../../redux/selectors\";\nimport {setFriends} from \"../../../redux/reducers/friends-reducer\";\n\n//props\ninterface IFriendsPropsType {\n    users: Array<UserType>\n    friends: Array<UserType>\n    setFriends: (users: UserType[]) => void\n}\nclass FriendsPanelContainer extends React.Component<IFriendsPropsType> {\n    componentDidMount() {\n        this.props.setFriends(this.props.users)\n    }\n\n    render() {\n        return this.props.users.length ? <FriendsPanel friends={this.props.friends}/> : ''\n    }\n}\n\nexport default connect((state: AppStateType) => ({\n    users: getUsersState(state),\n    friends: state.friends.friends\n}), {\n    setFriends\n})(FriendsPanelContainer)\n\n","import React from 'react';\nimport s from './Navbar.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport FriendsPanelContainer from \"./FriendsPanel/FriendsPanelContainer\";\n\nfunction Navbar() {\n    return (\n        <aside>\n            <nav className={s.navbar}>\n                <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\n                <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\n                <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\n                <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\n                <NavLink to=\"/users\" activeClassName={s.active} className={s.other}>Find users</NavLink>\n                <NavLink to=\"/settings\" activeClassName={s.active} className={s.other}>Settings</NavLink>\n                <FriendsPanelContainer />\n            </nav>\n        </aside>\n    )\n}\n\nexport default Navbar;","import React from \"react\";\nimport s from './News.module.css';\n\nfunction News() {\n    return (\n        <div>\n            Page under construction\n        </div>\n    )\n}\n\nexport default News;\n","import React from \"react\";\nimport s from './Music.module.css';\n\nfunction Music() {\n    return (\n        <div>\n            Page under construction\n        </div>\n    )\n}\n\nexport default Music;\n","import React from \"react\";\nimport s from './Settings.module.css';\n\nfunction Settings() {\n    return (\n        <div>\n            Page under construction\n        </div>\n    )\n}\n\nexport default Settings;\n","import React from \"react\";\nimport s from './DialogItem.module.css';\nimport {NavLink} from \"react-router-dom\";\n\ntype DialogItemPropsType = {\n    id: number,\n    name: string,\n    img: string\n}\n\nfunction DialogItem(props: DialogItemPropsType) {\n    return (\n        <div>\n            <NavLink to={'/dialogs/' + props.id} className={s.dialog} activeClassName={s.active}>\n                <img className={s.img} src={props.img} alt={props.name}/>\n                {props.name}\n            </NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem;\n","import React from \"react\";\nimport s from './Message.module.css';\n\ntype MessagePropsType = {\n    message: string,\n    name: string,\n    img: string\n}\n\nfunction Message(props: MessagePropsType) {\n\n    const messageComponentFrom = () => {\n        return (props.name === 'Me') ? s.messageComponentMe : s.messageComponent\n    }\n    const messageBabbleFrom = () => {\n        return (props.name === 'Me') ? s.messageBabbleMe : s.messageBabble\n    }\n    const tailFrom = () => {\n        return (props.name === 'Me') ? s.tailMe : s.tail\n    }\n\n    const messageBoxFrom = () => {\n        return (props.name === 'Me') ? s.messageBoxMe : s.messageBox\n    }\n\n\n    return (\n        <div className={messageComponentFrom()}>\n            <img className={s.img} src={props.img} alt=\"avatar\"/>\n            <div className={messageBabbleFrom()}>\n                <div className={tailFrom()}/>\n                <div className={messageBoxFrom()}>\n                    <div className={s.message}>{props.message}</div>\n                    <div className={s.time}>22:00</div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message;\n","export  const required = (value: string) => value ? undefined : 'Field is required!'\n\nexport const maxLengthCreator = (max: number) => (value: string) =>\n    value && value.length > max ? `Must be ${max} characters or less!` : undefined\n\nexport const minLengthCreator = (min: number) => (value: string) =>\n    value && value.length < min ? `Must be at least ${min} characters!` : undefined","import {WrappedFieldProps} from \"redux-form\";\nimport {FC} from \"react\";\nimport s from './FormsControls.module.css'\n\nexport const Textarea: FC<WrappedFieldProps> = ({input, meta, ...props}) => {\n    const error = meta.error && meta.touched\n\n    return (\n        <div className={s.formControl + ' ' + (error ? s.error : '')}>\n            {error && <span>{meta.error}</span>}\n            <div>\n                <textarea {...input} {...props}/>\n            </div>\n        </div>\n    )\n}\nexport const Input: FC<WrappedFieldProps> = ({input, meta, ...props}) => {\n    const error = meta.error && meta.touched\n\n    return (\n        <div className={s.formControl + ' ' + (error ? s.error : '')}>\n            {error && <span>{meta.error}</span>}\n            <div>\n                <input {...input} {...props}/>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport s from \"./DialogsMessages/DialogsMessages.module.css\";\nimport {required} from \"../../common/utils/validators/validators\";\nimport {Textarea} from \"../../common/formsControls/FormsControls\";\n\ntype FormDataType = {\n    newMessage: string\n}\nconst DialogForm: React.FC<InjectedFormProps<FormDataType>> = (props) =>  {\n    return (\n        <form onSubmit={props.handleSubmit} className={s.sendBox}>\n            <div>\n                <Field placeholder={'Text your message...'}\n                       component={Textarea}\n                       name={'newMessage'}\n                       className={s.textarea}\n                       validate={[required]} />\n            </div>\n            <div>\n                <button className={s.button}>Send</button>\n            </div>\n        </form>\n    )\n}\n\nexport const DialogReduxForm = reduxForm<FormDataType>({form: 'dialog'})(DialogForm);","import s from \"../DialogsMessages/DialogsMessages.module.css\";\nimport React from \"react\";\nimport Message from \"./Message/Message\";\nimport {DialogType} from \"../../../entities/entities\";\nimport { DialogReduxForm } from \"../DialogForm\";\n\ntype DialogsMessagesPropsType = {\n    dialog: DialogType\n    addMessage: (id: number, newMessage: string) => void\n    changeNewMessage: (newMessage: string, id: number) => void\n}\n\nexport const DialogsMessages = (props: DialogsMessagesPropsType) => {\n\n    const messagesElements = props.dialog.messages.map((message, index) =>\n        <Message key={index} name={message.name} img={message.img} message={message.message}/>)\n\n    const addNewMessage = (values: any) => {\n        props.addMessage(props.dialog.id, values.newMessage)\n    }\n\n    return (\n        <div className={s.dialogsMessages}>\n            <div className={s.messages}>\n                { messagesElements}\n            </div>\n            <DialogReduxForm onSubmit={addNewMessage}/>\n        </div>\n\n    )\n}\n","import React from \"react\";\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport {DialogsMessages} from \"./DialogsMessages/DialogsMessages\";\nimport {Route} from \"react-router\";\nimport {DialogType} from \"../../entities/entities\";\n\ntype DialogsPropsType = {\n    dialogs: DialogType[]\n    addMessage: (id: number, newMessage: string) => void\n    changeNewMessage: (newMessage: string, id: number) => void\n    isAuth: boolean\n}\n\nfunction Dialogs(props: DialogsPropsType) {\n\n    const dialogsElements = props.dialogs.map(dialog =>\n        <DialogItem key={dialog.id} img={dialog.img} id={dialog.id} name={dialog.name}/>)\n\n    return (\n        <div className={s.dialogPage}>\n            <div className={s.dialogsColumn}>\n                {dialogsElements}\n            </div>\n\n            <div className={s.messagesColumn}>\n\n                <Route path='/dialogs/:dialogID' render={(prop) => {\n                    const dialogID = prop.match.params.dialogID;\n                    const dialog = props.dialogs.find(d => d.id === +dialogID);\n                    return (\n                        dialog && <DialogsMessages\n                            dialog={dialog}\n                            addMessage={(id, newMessage) => props.addMessage(id, newMessage)}\n                            changeNewMessage={(newMessage, id) => props.changeNewMessage(newMessage, id)}/>\n                    )\n                }\n                }/>\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs;","import {DialogType} from \"../../entities/entities\";\n\nconst ADD_MESSAGE = 'ADD-MESSAGE';\n\nexport type initialDialogsStateType = {\n    dialogs: Array<DialogType>\n}\nlet initialDialogState: initialDialogsStateType = {\n    dialogs: [\n        {\n            id: 1,\n            name: 'Nick',\n            img: 'https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg',\n            messages: [\n                {\n                    message: 'Hi!',\n                    name: 'Nick',\n                    img: 'https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg'\n                },\n                {\n                    message: 'How are you?',\n                    name: 'Nick',\n                    img: 'https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg'\n                },\n                {\n                    message: 'Yo',\n                    name: 'Me',\n                    img: 'https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-58-696x696.jpg'\n                },\n                {\n                    message: \"I'm fine! How're you?\",\n                    name: 'Me',\n                    img: 'https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-58-696x696.jpg'\n                },\n            ],\n        },\n        {\n            id: 2, name: 'Jhon', img: 'https://vraki.net/sites/default/files/inline/images/30_55.jpg',\n            messages: [\n                {\n                    message: 'Hi!',\n                    name: 'Jhon',\n                    img: 'https://vraki.net/sites/default/files/inline/images/30_55.jpg'\n                }],\n        },\n        {\n            id: 3, name: 'Anna', img: 'https://pixelbox.ru/wp-content/uploads/2021/04/ava-mult-vk-78.jpg',\n            messages: [\n                {\n                    message: 'Hi!',\n                    name: 'Anna',\n                    img: 'https://pixelbox.ru/wp-content/uploads/2021/04/ava-mult-vk-78.jpg'\n                }],\n        },\n    ]\n}\n\nconst dialogsReducer = (state = initialDialogState, action: ActionDialogsReducerType): initialDialogsStateType => {\n\n    switch (action.type) {\n        case ADD_MESSAGE: {\n            if (!action.newMessage.trim()) {\n                return {...state}\n            }\n            const newMessage = {\n                message: action.newMessage,\n                name: 'Me',\n                img: 'https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-58-696x696.jpg'\n            }\n            return {\n                ...state,\n                dialogs: state.dialogs\n                    .map(d => d.id === action.id ? {...d, messages: [...d.messages, newMessage]} : d)\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n//Action creators\nexport type ActionDialogsReducerType = addMessageActionCreatorType\n\ntype addMessageActionCreatorType = { type: typeof ADD_MESSAGE, id: number, newMessage: string }\n\nexport const addMessage = (id: number, newMessage: string): addMessageActionCreatorType => ({type: ADD_MESSAGE, id, newMessage});\n\nexport default dialogsReducer;","import React, {Component} from \"react\";\nimport {Redirect} from \"react-router\";\nimport {AppStateType} from \"../redux/redux-store\";\nimport {connect} from \"react-redux\";\n\ntype mapStateToPropsType = { isAuth: boolean }\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => ({isAuth: state.auth.isAuth})\n\nexport function withAuthRedirect <T>(Component: React.ComponentType<T>) {\n\n    function AuthRedirectComponent (props: mapStateToPropsType) {\n        let {isAuth, ...restProps} = props\n        if (!isAuth) return <Redirect to={'/login'}/>\n        return <Component {...restProps as T}/>\n    }\n\n    const ConnectedAuthRedirectComponent = connect(mapStateToProps, {}) (AuthRedirectComponent)\n\n    return ConnectedAuthRedirectComponent\n}","import React from \"react\";\nimport Dialogs from \"./Dialogs\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {connect} from \"react-redux\";\nimport {addMessage} from \"../../redux/reducers/dialogs-reducer\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\nimport {getDialogs} from \"../../redux/selectors\";\n\nconst mapStateToProps = (state: AppStateType) => {\n    return {\n        dialogs: getDialogs(state),\n    }\n}\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, {\n        addMessage,\n    }),\n    withAuthRedirect\n)(Dialogs)\n","import React from 'react';\nimport s from './ProfileInfo.module.css';\n\ntype ProfileStatusPropsType = {\n    status: string\n    updateProfileStatus: (status: string) => void\n}\n\nclass ProfileInfo extends React.Component<ProfileStatusPropsType> {\n\n    state = {\n        editMode: false,\n        status: this.props.status\n    }\n\n    onEditMode = () => {\n        this.setState({\n            editMode: true\n        })\n    }\n    offEditMode = () => {\n        this.setState({\n            editMode: false\n        })\n        this.props.updateProfileStatus(this.state.status)\n    }\n\n    // componentDidUpdate(prevProps: Readonly<ProfileStatusPropsType>, prevState: Readonly<{}>, snapshot?: any) {\n    //     if (prevProps.status !== this.state.status) {\n    //         this.setState({\n    //             status: this.props.status\n    //         })\n    //     }\n    // }\n\n    render() {\n        return (<>\n            {this.state.editMode ?\n                <div className={s.inputBox}>\n                    <input type='text'\n                           value={this.state.status}\n                           autoFocus={true}\n                           className={s.input}\n                           onBlur={this.offEditMode}\n                           onChange={(e) =>\n                              this.setState({status: e.currentTarget.value})\n                           }\n                           onKeyPress={(e) => {\n                               if (e.key === 'Enter') this.props.updateProfileStatus(e.currentTarget.value) }}/>\n                    {/*<button*/}\n                    {/*    className={s.saveStatusBtn}*/}\n                    {/*    onClick={() => this.props.updateProfileStatus(this.state.status)}>Save status</button>*/}\n                </div>\n                :\n                <div className={s.status} onDoubleClick={this.onEditMode}>\n                    {this.props.status}\n                </div>\n            }\n        </>)\n    }\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport {ProfileType} from \"../../../entities/entities\";\nimport unknown from '../../../assets/images/unknown.png'\nimport ProfileStatus from './ProfileStatus';\n\ntype ProfileInfoPropsType = {\n    profile: ProfileType\n    profileStatus: string\n    updateProfileStatus: (status: string) => void\n}\n\nfunction ProfileInfo(props: ProfileInfoPropsType) {\n    return (\n        <div className={s.profileBox}>\n            <img className={s.avatar} src={props.profile.photos.large || unknown} alt={props.profile.fullName}/>\n            <div className={s.profileInfo}>\n                <div className={s.div}>\n                    <p className={s.name}>{props.profile.fullName}</p>\n                </div>\n                <div className={s.div}>\n                    <ProfileStatus\n                        status={props.profileStatus || 'Nothing yet...'}\n                        updateProfileStatus={props.updateProfileStatus}/>\n                </div>\n                <div className={s.div}>\n                    <p className={s.title}>I'm looking a job: </p>\n                    <p className={s.description}>{props.profile.lookingForAJob ? 'yes' : 'no'}</p>\n                </div>\n                <div>\n                    <p className={s.title}>About me: </p>\n                    <p className={s.description}>{props.profile.aboutMe || 'Nothing yet...'}</p>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport s from './Post.module.css';\n\n\ntype PostPropsType = {\n    id: number\n    message: string\n    likesCount: number\n    removePost: (id: number) => void\n    addLike: (id: number) => void\n}\n\nfunction Post (props: PostPropsType) {\n\n    const removePostCallback = () => {\n        props.removePost(props.id)\n    }\n    const addLikeCallback = () => {\n        props.addLike(props.id)\n    }\n\n    return (\n        <div className={s.post}>\n            <div className={s.postContent}>\n                <img className={s.avatar}\n                    src='https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-58-696x696.jpg' alt='Avatar'/>\n                <div className={s.message}>{props.message}</div>\n            </div>\n\n            <div>\n                <span className={s.likesCount}>{props.likesCount} likes</span>\n                <button onClick={addLikeCallback} className={s.like}>Like!</button>\n                <button onClick={removePostCallback} className={s.button}>Remove post</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Post;","import React from \"react\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, minLengthCreator, required} from \"../../../../common/utils/validators/validators\";\nimport {Textarea} from \"../../../../common/formsControls/FormsControls\";\nimport s from '../MyPosts.module.css'\n\n\nexport type FormPostDataType = {\n    newMessage: string\n}\nconst maxLength200 = maxLengthCreator(200)\nconst minValue2 = minLengthCreator(2)\n\nconst PostForm: React.FC<InjectedFormProps<FormPostDataType>> = (props) =>  {    return (\n    <form onSubmit={props.handleSubmit}>\n        <div>\n            <Field placeholder={'Your message...'}\n                   component={Textarea}\n                   name={'newMessage'}\n                   className={s.textarea}\n                   validate={[required, maxLength200, minValue2]} />\n        </div>\n        <div className={s.buttons}>\n            <button className={s.button}>Add post</button>\n        </div>\n    </form>\n)\n}\n\nexport const PostReduxForm = reduxForm<FormPostDataType>({form: 'post'})(PostForm);","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\nimport {PostType} from \"../../../entities/entities\";\nimport {FormPostDataType, PostReduxForm} from \"./PostForm/PostForm\";\n\ntype MyPostsPropsType = {\n    posts: Array<PostType>\n    addPost: (newMessage: string) => void\n    removePost: (id: number) => void\n    addLike: (id: number) => void\n}\n\nfunction MyPosts(props: MyPostsPropsType) {\n\n    const postsElements =\n        props.posts.map(post =>\n           <Post key={post.id}\n                 id={post.id}\n                 message={post.message}\n                 likesCount={post.likesCount}\n                 removePost={(id) => props.removePost(id)}\n                 addLike={(id) => props.addLike(id)}/>)\n\n    return (\n        <div>\n            <p className={s.title}>My Posts</p>\n            <div>\n                <PostReduxForm onSubmit={(values: FormPostDataType) => props.addPost(values.newMessage)}/>\n            </div>\n            <div className={s.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n}\n\nexport default MyPosts;\n\n\n","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport s from './Profile.module.css'\nimport MyPosts from './MyPosts/MyPosts';\nimport {PostType, ProfileType} from \"../../entities/entities\";\n\ntype ProfilePropsType = {\n    profile: ProfileType\n    posts: Array<PostType>\n    addPost: () => void\n    removePost: (id: number) => void\n    addLike: (id: number) => void\n    profileStatus: string\n    updateProfileStatus: (status: string) => void\n}\n\nfunction Profile(props: ProfilePropsType) {\n    return (\n        <div>\n            <ProfileInfo\n                profile={props.profile}\n                profileStatus={props.profileStatus}\n                updateProfileStatus={props.updateProfileStatus}/>\n            <div className={s.imageBox}>\n                <img alt={'arrow-left'} src={'https://piaspb.ru/img/new-img/arrows-l.png'} className={s.arrow}/>\n                <img alt={'arrow-right'} src={'https://piaspb.ru/img/new-img/arrows-l.png'} className={`${s.arrow} ${s.arrowRight}`}/>\n            </div>\n            <MyPosts {...props}/>\n        </div>\n    )\n}\n\nexport default Profile;","import {PostType, ProfileType} from \"../../entities/entities\"\nimport {Dispatch} from \"redux\";\nimport {profileAPI} from \"../../api/api\";\n\nexport enum ACTIONS_PROFILE_TYPE {\n    ADD_POST = 'ADD-POST',\n    REMOVE_POST = 'REMOVE-POST',\n    ADD_LIKE = 'ADD-LIKE',\n    SET_PROFILE = 'SET-PROFILE',\n    TOGGLE_FETCHING = 'SONET/PROFILE/TOGGLE-FETCHING',\n    SET_PROFILE_STATUS = 'SET-PROFILE-STATUS',\n}\n\nexport type initialProfileStateType = {\n    profile: ProfileType\n    profileStatus: string\n    posts: Array<PostType>\n    isFetching: boolean\n}\nlet initialProfileState: initialProfileStateType = {\n    profile: {\n        aboutMe: '',\n        contacts: {\n            facebook: '',\n            website: '',\n            vk: '',\n            twitter: '',\n            instagram: '',\n            youtube: '',\n            github: '',\n            mainLink: ''\n        },\n        lookingForAJob: false,\n        lookingForAJobDescription: '',\n        fullName: '',\n        userId: 1,\n        photos: {\n            small: '',\n            large: ''\n        }\n    },\n    profileStatus: '',\n    posts: [\n        {id: 1, message: 'It is my first post!', likesCount: 25},\n        {id: 2, message: 'How are you?', likesCount: 15},\n    ],\n    isFetching: false,\n}\n\nconst profileReducer = (state = initialProfileState, action: ActionProfileReducerType): initialProfileStateType => {\n\n    switch (action.type) {\n        case ACTIONS_PROFILE_TYPE.ADD_POST:\n            if (action.newMessage === '') {\n                return state\n            }\n            const newPost = {\n                id: state.posts.length + 1,\n                message: action.newMessage,\n                likesCount: 0\n            }\n            return {...state, posts: [...state.posts, newPost]}\n        case ACTIONS_PROFILE_TYPE.REMOVE_POST:\n            // eslint-disable-next-line no-restricted-globals\n            if (confirm('Delete this post?')) {\n                return {...state, posts: state.posts.filter(post => post.id !== action.id)}\n            }\n            return state\n        case ACTIONS_PROFILE_TYPE.ADD_LIKE:\n            return {...state,\n                posts: state.posts.map(post => post.id === action.id ? {...post, likesCount: ++post.likesCount} : post)}\n        case ACTIONS_PROFILE_TYPE.SET_PROFILE:\n            return {...state, profile: action.profile}\n        case ACTIONS_PROFILE_TYPE.TOGGLE_FETCHING:\n            return {...state, isFetching: action.fetching}\n        case ACTIONS_PROFILE_TYPE.SET_PROFILE_STATUS:\n            return {...state, profileStatus: action.profileStatus}\n        default:\n            return state\n    }\n}\n\n//Action type\nexport type ActionProfileReducerType = addPostActionCreatorType\n    | removePostActionCreatorType\n    | addLikeActionCreatorType\n    | setProfileACType\n    | FetchingACType\n    | SetProfileStatusACType\n\n//types AC\ntype addPostActionCreatorType = { type: typeof ACTIONS_PROFILE_TYPE.ADD_POST, newMessage: string }\ntype removePostActionCreatorType = { type: typeof ACTIONS_PROFILE_TYPE.REMOVE_POST, id: number }\ntype addLikeActionCreatorType = { type: typeof ACTIONS_PROFILE_TYPE.ADD_LIKE, id: number }\ntype setProfileACType = { type: typeof ACTIONS_PROFILE_TYPE.SET_PROFILE, profile: ProfileType }\ntype FetchingACType = { fetching: boolean, type: typeof ACTIONS_PROFILE_TYPE.TOGGLE_FETCHING }\ntype SetProfileStatusACType = { profileStatus: string, type: typeof ACTIONS_PROFILE_TYPE.SET_PROFILE_STATUS }\n\n//AC\nexport const addPost = (newMessage: string): addPostActionCreatorType => ({type: ACTIONS_PROFILE_TYPE.ADD_POST, newMessage})\nexport const removePost = (id: number): removePostActionCreatorType => ({type: ACTIONS_PROFILE_TYPE.REMOVE_POST, id})\nexport const addLike = (id: number): addLikeActionCreatorType => ({type: ACTIONS_PROFILE_TYPE.ADD_LIKE, id})\nexport const setProfile = (profile: ProfileType): setProfileACType => ({type: ACTIONS_PROFILE_TYPE.SET_PROFILE, profile})\nexport const setFetching = (fetching: boolean): FetchingACType => ({fetching, type: ACTIONS_PROFILE_TYPE.TOGGLE_FETCHING})\nexport const setProfileStatus = (profileStatus: string): SetProfileStatusACType => ({profileStatus, type: ACTIONS_PROFILE_TYPE.SET_PROFILE_STATUS})\n\n//thunk creators\nexport const getProfile = (userID: string) => (dispatch: Dispatch<ActionProfileReducerType>) => {\n    dispatch(setFetching(false))\n    return profileAPI.getProfile(userID)\n        .then((data) => {\n            dispatch(setProfile(data))\n            dispatch(setFetching(true))\n        })\n}\nexport const getProfileStatus = (userID: string) => (dispatch: Dispatch<ActionProfileReducerType>) => {\n    dispatch(setFetching(false))\n    return profileAPI.getProfileStatus(userID)\n        .then((status) => {\n            dispatch(setProfileStatus(status))\n            dispatch(setFetching(true))\n        })\n}\nexport const updateProfileStatus = (profileStatus: string) => (dispatch: Dispatch<ActionProfileReducerType>) => {\n    dispatch(setFetching(false))\n    profileAPI.updateProfileStatus(profileStatus)\n        .then((data) => {\n            if (data.resultCode === 0) {\n                dispatch(setProfileStatus(profileStatus))\n                dispatch(setFetching(true))\n            }\n        })\n}\n\nexport default profileReducer\n","import axios, {AxiosResponse} from \"axios\";\nimport {AuthDataType, FollowResponse, ItemsType, ProfileStatusDataType, ProfileType} from \"../entities/entities\";\n\nexport const axiosInstance = axios.create({\n    baseURL: 'https://social-network.samuraijs.com/api/1.0',\n    withCredentials: true,\n    headers: {\n        \"API-KEY\": \"ff96c8c6-9a67-45a6-8e7e-64655709b2bd\"\n    },\n})\n\nexport const usersAPI = {\n    getUsers: (pageSize: number, activePage: number) => {\n        return axiosInstance.get(`users?count=${pageSize}&page=${activePage}`)\n            .then((response: AxiosResponse<ItemsType>) => response.data)\n    },\n    unfollow: (userId: number) => {\n        return axiosInstance.delete(`follow/${userId}`)\n            .then((response: AxiosResponse<FollowResponse>) => response.data)\n    },\n    follow: (userId: number) => {\n        return axiosInstance.post(`follow/${userId}`)\n            .then((response: AxiosResponse<FollowResponse>) => response.data)\n    },\n}\n\nexport const profileAPI = {\n    getProfile: (userID: string) => {\n        return axiosInstance.get(`profile/${userID}`)\n            .then((response: AxiosResponse<ProfileType>) => response.data)\n    },\n    getProfileStatus: (userID: string) => {\n        return axiosInstance.get(`profile/status/${userID}`)\n            .then((response: AxiosResponse<string>) => response.data)\n    },\n    updateProfileStatus: (profileStatus: string) => {\n        return axiosInstance.put('/profile/status', { status: profileStatus })\n            .then((response: AxiosResponse<ProfileStatusDataType>) => response.data)\n    },\n}\n\nexport const authAPI = {\n    getAuth: () => {\n        return axiosInstance.get('auth/me')\n            .then((response: AxiosResponse<AuthDataType<{\n                id: number\n                email: string\n                login: string\n            }>>) => response.data)\n    },\n    login: (email: string, password: string, rememberMe: boolean) => {\n        return axiosInstance.post('auth/login', {email, password, rememberMe})\n            .then((response: AxiosResponse<AuthDataType<{\n                userId: number\n            }>>) => response.data)\n    },\n    logout: () => {\n        return axiosInstance.delete('auth/login')\n            .then((response: AxiosResponse<AuthDataType<{}>>) => response.data)\n    },\n}\n\n\n\n","import {UserType} from \"../../entities/entities\";\nimport {usersAPI} from \"../../api/api\";\nimport {Dispatch} from \"redux\";\nimport {updateProperty} from \"../../common/utils/helpers\";\n\n//constants\nenum ACTIONS_USER_REDUCER {\n    CHANGE_FOLLOWED_STATUS = 'SONET/USERS/CHANGE-FOLLOWED-STATUS',\n    SET_USERS = 'SONET/USERS/SET-USERS',\n    CHANGE_PAGE = 'SONET/USERS/CHANGE-PAGE',\n    SET_USERS_COUNT = 'SONET/USERS/SET-USERS-COUNT',\n    SET_LOADING = 'SONET/USERS/SET-LOADING',\n    SET_FOLLOWING = 'SONET/USERS/SET-FOLLOWING',\n    SET_FILTER = 'SONET/USERS/SET-FILTER',\n}\n\n//initial state\nexport type initialUsersStateType = {\n    users: Array<UserType>\n    pageSize: number\n    totalUsersCount: number\n    activePage: number\n    isLoading: boolean\n    isFollowing: number[]\n    filterForSearch: string\n}\n\nlet initialUsersState: initialUsersStateType = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    activePage: 1,\n    isLoading: true,\n    isFollowing: [],\n    filterForSearch: '',\n}\n\n//reducer\nconst usersReducer = (state = initialUsersState, action: ActionUsersReducerType): initialUsersStateType => {\n    switch (action.type) {\n        case ACTIONS_USER_REDUCER.CHANGE_FOLLOWED_STATUS:\n            return {\n                ...state,\n                //refactoring with helpers\n                users: updateProperty(state.users, 'id', action.userID, {followed: action.isFollow})\n\n                //users: [...state.users.map(u => u.id === action.userID ? {...u, followed: action.isFollow} : u)]\n            }\n        case ACTIONS_USER_REDUCER.SET_USERS:\n            return {...state, users: [...action.users]}\n        case ACTIONS_USER_REDUCER.CHANGE_PAGE:\n            return {...state, activePage: action.page}\n        case ACTIONS_USER_REDUCER.SET_USERS_COUNT:\n            return {...state, totalUsersCount: action.usersCount}\n        case ACTIONS_USER_REDUCER.SET_LOADING:\n            return {...state, isLoading: action.loading}\n        case ACTIONS_USER_REDUCER.SET_FOLLOWING:\n            return {\n                ...state,\n                isFollowing: action.following ?\n                    [...state.isFollowing, action.userId] :\n                    state.isFollowing.filter(u => u !== action.userId)\n            }\n        case ACTIONS_USER_REDUCER.SET_FILTER:\n            return {...state, filterForSearch: action.filter}\n        default:\n            return state\n    }\n}\n\n//action types\nexport type ActionUsersReducerType = ChangeFollowedStatusACType\n    | SetUsersACType\n    | ChangePageACType\n    | SetUsersCountACType\n    | LoadingACType\n    | FollowingACType\n    | FilterACType\n\ntype ChangeFollowedStatusACType = { userID: number, isFollow: boolean, type: typeof ACTIONS_USER_REDUCER.CHANGE_FOLLOWED_STATUS }\ntype SetUsersACType = { users: UserType[], type: typeof ACTIONS_USER_REDUCER.SET_USERS }\ntype ChangePageACType = { page: number, type: typeof ACTIONS_USER_REDUCER.CHANGE_PAGE }\ntype SetUsersCountACType = { usersCount: number, type: typeof ACTIONS_USER_REDUCER.SET_USERS_COUNT }\ntype LoadingACType = { loading: boolean, type: typeof ACTIONS_USER_REDUCER.SET_LOADING }\ntype FollowingACType = { following: boolean, userId: number, type: typeof ACTIONS_USER_REDUCER.SET_FOLLOWING }\ntype FilterACType = { filter: string, type: typeof ACTIONS_USER_REDUCER.SET_FILTER }\n\n//action creators\nexport const changeFollowedStatus = (userID: number, isFollow: boolean): ChangeFollowedStatusACType => {\n    return {userID, isFollow, type: ACTIONS_USER_REDUCER.CHANGE_FOLLOWED_STATUS}\n}\nexport const setUsers = (users: UserType[]): SetUsersACType => ({users, type: ACTIONS_USER_REDUCER.SET_USERS})\nexport const changePage = (page: number): ChangePageACType => ({page, type: ACTIONS_USER_REDUCER.CHANGE_PAGE})\nexport const setUsersCount = (usersCount: number): SetUsersCountACType => ({\n    usersCount,\n    type: ACTIONS_USER_REDUCER.SET_USERS_COUNT\n})\nexport const setLoading = (loading: boolean): LoadingACType => ({loading, type: ACTIONS_USER_REDUCER.SET_LOADING})\nexport const setFollowing = (following: boolean, userId: number): FollowingACType => ({\n    following,\n    userId,\n    type: ACTIONS_USER_REDUCER.SET_FOLLOWING\n})\nexport const setFilter = (filter: string): FilterACType => ({\n    filter,\n    type: ACTIONS_USER_REDUCER.SET_FILTER\n})\n\n//thunk creators\nexport const requestUsers = (pageSize: number, activePage: number) => (dispatch: Dispatch<ActionUsersReducerType>) => {\n    dispatch(setLoading(true))\n    usersAPI.getUsers(pageSize, activePage)\n        .then((data) => {\n            dispatch(setUsersCount(data.totalCount))\n            dispatch(setLoading(false))\n            dispatch(setUsers(data.items))\n        })\n}\nexport const follow = (userId: number) => (dispatch: Dispatch<ActionUsersReducerType>) => {\n    dispatch(setFollowing(true, userId))\n    usersAPI.follow(userId)\n        .then((data) => {\n            if (data.resultCode === 0) {\n                dispatch(changeFollowedStatus(userId, true))\n                dispatch(setFollowing(false, userId))\n            }\n        })\n}\nexport const unfollow = (userId: number) => (dispatch: Dispatch<ActionUsersReducerType>) => {\n    dispatch(setFollowing(true, userId))\n    usersAPI.unfollow(userId)\n        .then((data) => {\n            if (data.resultCode === 0) {\n                dispatch(changeFollowedStatus(userId, false))\n                dispatch(setFollowing(false, userId))\n            }\n        })\n}\n\nexport default usersReducer\n","export default __webpack_public_path__ + \"static/media/loading.bb27ba0a.gif\";","import s from \"./Preloader.module.css\";\nimport preloader from \"../../assets/images/loading.gif\";\nimport React from \"react\";\n\nexport const Preloader = () => {\n    return <div className={s.loadingBox}>\n        <img alt={'loading...'} className={s.loadingGif} src={preloader}/>\n        <div>Loading...</div>\n    </div>\n}","import React from 'react';\nimport {connect} from 'react-redux';\nimport {PostType, ProfileType} from \"../../entities/entities\";\nimport Profile from \"./Profile\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {\n    addLike,\n    addPost,\n    removePost,\n    setProfile,\n    setFetching,\n    getProfile,\n    getProfileStatus, updateProfileStatus\n} from \"../../redux/reducers/profile-reducer\";\nimport {Preloader} from \"../../common/preloader/Preloader\";\nimport {RouteComponentProps, withRouter} from \"react-router\";\nimport {compose} from \"redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {\n    getIsAuth,\n    getIsFetchingProfile,\n    getPosts,\n    getProfileState,\n    getProfileStatusState,\n    getUserId\n} from \"../../redux/selectors\";\n\nclass ProfileContainer extends React.Component<ProfilePropsType> {\n\n    componentDidMount() {\n        let userID = this.props.match.params.userID || this.props.userId!.toString()\n        if (userID) {\n            this.props.getProfile(userID)\n            this.props.getProfileStatus(userID)\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<ProfilePropsType>, prevState: Readonly<{}>, snapshot?: any) {\n        if(this.props.match.params.userID !== prevProps.match.params.userID){\n            let userID = this.props.match.params.userID || this.props.userId!.toString()\n            if (userID) {\n                this.props.getProfile(userID)\n                this.props.getProfileStatus(userID)\n            }\n        }\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ?\n                <Profile\n                    {...this.props}\n                />\n                :\n                <Preloader/>\n            }\n        </>\n    }\n\n}\n\ntype MapStatePropsType = {\n    profile: ProfileType\n    posts: Array<PostType>\n    isFetching: boolean\n    profileStatus: string\n    userId: number | null\n    isAuth: boolean\n}\ntype MapDispatchPropsType = {\n    addPost: () => void\n    removePost: (id: number) => void\n    addLike: (id: number) => void\n    setProfile: (profile: ProfileType) => void\n    setFetching: (fetching: boolean) => void\n    getProfile: (userID: string) => void\n    getProfileStatus: (userID: string) => void\n    updateProfileStatus: (status: string) => void\n}\ntype OwnPropsType = MapStatePropsType & MapDispatchPropsType\ntype PathParamsType = { userID: string }\ntype ProfilePropsType = RouteComponentProps<PathParamsType> & OwnPropsType\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        profile: getProfileState(state),\n        posts: getPosts(state),\n        isFetching: getIsFetchingProfile(state),\n        profileStatus: getProfileStatusState(state),\n        userId: getUserId(state),\n        isAuth: getIsAuth(state),\n    }\n}\n\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, {\n        addPost,\n        removePost,\n        addLike,\n        setProfile,\n        setFetching,\n        getProfile,\n        getProfileStatus,\n        updateProfileStatus\n    }),\n    withRouter,\n    withAuthRedirect,\n)(ProfileContainer);\n\n","export const updateProperty = (arrOfObj: Array<any>, paramNameForSearch: any, paramShouldBe: any, updateWithObject: any) => {\n    return arrOfObj.map(obj => obj[paramNameForSearch] === paramShouldBe ? {...obj, ...updateWithObject} : obj)\n}","import React from \"react\";\nimport s from './Pagination.module.css'\ntype PaginationPropsType = {\n    totalUsersCount: number\n    pageSize: number\n    onClickPage: (page: number) => void\n    activePage: number\n}\nexport const Pagination: React.FC<PaginationPropsType> = (\n    {\n        totalUsersCount,\n        pageSize,\n        onClickPage,\n        activePage,\n\n    }\n) => {\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\n    let pages = []\n    for (let i = 1; i <= 5; i++) {\n        pages.push(i)\n    }\n    pages.push('...')\n    pages.push(pagesCount)\n\n    return <div>\n        {pages.map(p => {\n            return p === '...' ?\n                <span key={p + 'page'} className={s.pages}>...</span> :\n                <span key={p + ' page'}\n                      onClick={() => onClickPage(+p)}\n                      className={activePage === p ? `${s.activePage} ${s.pages}` : s.pages}>{p}</span>\n        })}\n    </div>\n}\n\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { UserType } from \"../../../entities/entities\";\nimport s from \"./User.module.css\";\nimport unknown from \"../../../assets/images/unknown.png\";\nimport {useDispatch} from \"react-redux\";\nimport {addFriend, removeFriend} from \"../../../redux/reducers/friends-reducer\";\n\n//types\ntype UserPropsType = {\n    user: UserType\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n    isAuth: boolean\n    isFollowing: number[]\n}\n\n//COMPONENT\nexport const User: React.FC<UserPropsType> = (\n    {\n        user,\n        unfollow,\n        follow,\n        isAuth,\n        isFollowing,\n\n    }\n) => {\n\n    const dispatch = useDispatch()\n\n    return <div className={s.friendBox}>\n        <div className={s.imgBox}>\n\n            {/*NAVLINK*/}\n            <NavLink to={'/profile/' + user.id}>\n                <img alt={user.name} src={user.photos.small || unknown} className={s.img}/>\n            </NavLink>\n\n            <button\n                onClick={() => {\n                    if (user.followed) {\n                        unfollow(user.id)\n                        dispatch(removeFriend(user.id))\n                    } else {\n                        follow(user.id)\n                        dispatch(addFriend(user))\n                    }\n                }}\n                className={`${s.followBtn} ${user.followed ? s.red : s.green} ${!isAuth || isFollowing\n                    .includes(user.id) ? s.disabled : ''}`}\n                disabled={!isAuth || isFollowing.some(i => i === user.id)}>\n                {user.followed ? 'UNFOLLOW' : 'FOLLOW'}\n            </button>\n        </div>\n        <div className={s.infoBox}>\n            <div>\n                <p className={`${s.title} ${s.name}`}>Name: </p>\n                <p className={`${s.description} ${s.name}`}>{user.name}</p>\n            </div>\n            <div className={s.infoBottom}>\n                <div>\n                    <p className={s.title}>Status: </p>\n                    <p className={s.description}>{user.status || \"Nothing yet...\"}</p>\n                </div>\n            </div>\n        </div>\n    </div>\n}\n\n","import React, {useState} from \"react\";\nimport {UserType} from \"../../entities/entities\";\nimport s from \"./Users.module.css\";\nimport {Pagination} from \"../../common/pagination/Pagination\";\nimport {User} from \"./User/User\";\n\n//types\ntype UsersPropsType = {\n    users: Array<UserType>\n    status: string\n    activePage: number\n    totalUsersCount: number\n    onClickPage: (page: number) => void\n    pageSize: number\n    isFollowing: number[]\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n    setFilter: (filter: string) => void\n    isAuth: boolean\n}\n\n//COMPONENT\nexport const Users: React.FC<UsersPropsType> = (props) => {\n\n    const [searchValue, setSearchValue] = useState<string>('')\n    const [timeoutId, setTimeoutId] = useState<any>(null)\n\n    const onSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = e.currentTarget.value\n        setSearchValue(value)\n\n        if (timeoutId) clearTimeout(timeoutId)\n\n        const newTimeoutId = setTimeout(() => {\n            props.setFilter(value)\n        }, 1000)\n\n        setTimeoutId(newTimeoutId)\n    }\n\n    return <>\n        <p className={s.titlePage}>All users in SoNet</p>\n\n        <div className={s.container}>\n\n            <div className={s.searchBox}>\n                <input className={s.search} placeholder={'Search...'} value={searchValue} onChange={onSearchChange}/>\n            </div>\n\n            {(!props.users.length) &&\n            <span className={s.title} style={{margin: '20px'}}>\n                Users not found\n            </span>}\n\n            {/*USERS*/}\n            {props.users\n                .map(u =>\n                    <User key={u.id} user={u} follow={props.follow} unfollow={props.unfollow} isAuth={props.isAuth} isFollowing={props.isFollowing}/>\n                )}\n\n            <Pagination totalUsersCount={props.totalUsersCount} pageSize={props.pageSize}\n                        onClickPage={props.onClickPage} activePage={props.activePage}/>\n\n            {/*<button className={`${s.btn} ${s.showBtn}`}>SHOW MORE USERS</button>*/}\n        </div>\n    </>\n}\n\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {changePage, follow, requestUsers, setFilter, unfollow} from \"../../redux/reducers/users-reducer\";\nimport {UserType} from \"../../entities/entities\";\nimport {Users} from \"./Users\";\nimport {Preloader} from \"../../common/preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {\n    getActivePage, getFilteredUsers, getIsAuth,\n    getIsFollowing,\n    getIsLoadingUsers,\n    getPageSize,\n    getTotalUsersCount,\n} from \"../../redux/selectors\";\n\n//props\ninterface IUsersPropsType {\n    isLoading: boolean\n    changePage: (page: number) => void\n    getUsers: (pageSize: number, activePage: number) => void\n    users: Array<UserType>\n    status: string\n    activePage: number\n    totalUsersCount: number\n    pageSize: number\n    isFollowing: number[]\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n    setFilter: (filter: string) => void\n    isAuth: boolean\n}\n\ninterface IUsersState {\n}\n\n//COMPONENT\nclass UsersContainer extends React.Component<IUsersPropsType, IUsersState> {\n    componentDidMount() {\n        this.props.getUsers(this.props.pageSize, this.props.activePage)\n    }\n\n    onClickPage = (page: number) => {\n        this.props.changePage(page)\n        this.props.getUsers(this.props.pageSize, page)\n    }\n\n    render() {\n        return <>\n            {this.props.isLoading ?\n                <Preloader/>\n                :\n                <Users {...this.props} onClickPage={this.onClickPage}/>\n            }\n        </>\n    }\n}\n\nconst mapStateToProps = (state: AppStateType) => {\n    return {\n        users: getFilteredUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        activePage: getActivePage(state),\n        isLoading: getIsLoadingUsers(state),\n        isFollowing: getIsFollowing(state),\n        isAuth: getIsAuth(state)\n    }\n}\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps,\n        {\n            changePage,\n            getUsers: requestUsers,\n            follow,\n            unfollow,\n            setFilter\n        })\n)(UsersContainer)\n\n","import React from 'react';\nimport s from './Header.module.css'\nimport {NavLink} from \"react-router-dom\";\n\ntype HeaderPropsType = {\n    login: string | null\n    isAuth: boolean\n    logout: () => void\n    userId: number | null\n}\n\nfunction Header(props: HeaderPropsType) {\n    return (\n        <header>\n            <div className={s.logo}>\n                <img alt={'logo'} src='https://img.apksum.com/9f/nicola.web/2.7/icon.png'/>\n                <NavLink to=\"/profile\">SoNet</NavLink>\n            </div>\n\n            {props.isAuth ?\n                <div className={s.loginBox}>\n                    <NavLink to={`/profile/${props.userId}`}>\n                        <div className={s.greeting}>Hello, {props.login}!</div>\n                    </NavLink>\n                    <button className={s.logoutBtn} onClick={props.logout}>LogOut</button>\n                </div>\n                :\n                <NavLink to=\"/login\">LogIn</NavLink>\n            }\n        </header>\n    )\n}\n\nexport default Header;","import {Dispatch} from \"redux\";\nimport {authAPI} from \"../../api/api\";\nimport {AppThunkType} from \"../redux-store\";\nimport {stopSubmit} from \"redux-form\";\n\nenum ACTIONS_AUTH_REDUCER {\n    SET_USER_DATA = 'SET-USER-DATA',\n}\n\nexport type initialAuthStateType = {\n    id: number | null\n    email: string | null\n    login: string | null\n    isAuth: boolean\n}\n\nlet initialAuthState: initialAuthStateType = {\n    id: null,\n    email: null,\n    login: null,\n    isAuth: false\n}\n\n//REDUCER\nconst authReducer = (state = initialAuthState, action: ActionAuthReducerType): initialAuthStateType => {\n\n    switch (action.type) {\n        case ACTIONS_AUTH_REDUCER.SET_USER_DATA:\n            return {...state, ...action.payload}\n        default:\n            return state;\n    }\n}\n\n//AC\nexport type ActionAuthReducerType = SetUserDataACType\n\ntype SetUserDataACType = {\n    type: typeof ACTIONS_AUTH_REDUCER.SET_USER_DATA,\n    payload: {\n        id: number | null\n        email: string | null\n        login: string | null\n        isAuth: boolean\n    }\n}\n\nexport const setAuthUserData = (id: (number | null), email: (string | null), login: (string | null), isAuth: boolean)\n    : SetUserDataACType => ({\n    type: ACTIONS_AUTH_REDUCER.SET_USER_DATA, payload: {id, email, login, isAuth}\n})\n\n//thunk\n//через promise и Dispatch<Type>\nexport const auth = () => (dispatch: Dispatch<ActionAuthReducerType>) => {\n    return authAPI.getAuth().then((data) => {\n        if (data.resultCode === 0) {\n            dispatch(setAuthUserData(data.data.id, data.data.email, data.data.login, true))\n        }\n    })\n}\n//через async/await и AppThunkType\nexport const login = (email: string, password: string, rememberMe: boolean): AppThunkType => async dispatch => {\n    const res = await authAPI.login(email, password, rememberMe)\n    if (res.resultCode === 0) {\n        dispatch(auth())\n    } else {\n        const messageError = res.messages.length > 0 ? res.messages[0] : 'Some error'\n        dispatch(stopSubmit('login', {_error: messageError}))\n    }\n}\nexport const logout = (): AppThunkType => async dispatch => {\n    const res = await authAPI.logout()\n    if (res.resultCode === 0) dispatch(setAuthUserData(null, null, null, false))\n}\n\nexport default authReducer;","import React from \"react\";\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout, setAuthUserData} from \"../../redux/reducers/auth-reducer\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {getIsAuth, getLogin, getUserId} from \"../../redux/selectors\";\n\ntype HeaderProps = {\n    setAuthUserData: (id: (number|null), email: (string|null), login: (string|null), isAuth: boolean) => void\n    login: string | null\n    isAuth: boolean\n    logout: () => void\n    userId: number | null\n}\n\nclass HeaderContainer extends React.Component<HeaderProps> {\n    render() {\n        return <>\n            <Header {...this.props}/>\n        </>\n    }\n}\n\nexport default connect((state: AppStateType) => ({\n    isAuth: getIsAuth(state),\n    login: getLogin(state),\n    userId: getUserId(state)\n}), {\n    setAuthUserData,\n    logout\n})(HeaderContainer)","import React from \"react\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {Input} from \"../../common/formsControls/FormsControls\";\nimport {maxLengthCreator, minLengthCreator, required} from \"../../common/utils/validators/validators\";\nimport s from './Login.module.css'\n\nexport type FormLoginDataType = {\n    email: string\n    password: string\n    rememberMe: boolean\n}\n\nconst maxLength25 = maxLengthCreator(25)\nconst minLength6 = minLengthCreator(6)\n\nconst LoginForm: React.FC<InjectedFormProps<FormLoginDataType>> = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} className={s.form}>\n            {props.error &&\n            <div className={s.formSummaryError}>\n                {props.error}\n            </div>\n            }\n            <div>\n                <Field placeholder={'Login'}\n                       component={Input}\n                       name={'email'}\n                       validate={[required, maxLength25, minLength6]}/>\n            </div>\n            <div>\n                <Field placeholder={'Password'}\n                       component={Input}\n                       name={'password'}\n                       type={'password'}\n                       validate={[required, maxLength25, minLength6]}/>\n            </div>\n            <label className={s.rememberMe}>\n                <Field type={'checkbox'}\n                       component={Input}\n                       name={'rememberMe'}/>\n                Remember me </label>\n            <div>\n                <button className={s.button}>Login</button>\n            </div>\n        </form>\n    )\n}\n\nexport const LoginReduxForm = reduxForm<FormLoginDataType>({form: 'login'})(LoginForm);","import React from 'react';\nimport { connect } from 'react-redux';\nimport {FormLoginDataType, LoginReduxForm} from \"./LoginForm\";\nimport {login, logout} from \"../../redux/reducers/auth-reducer\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {Redirect} from \"react-router\";\nimport s from './Login.module.css'\n\ntype LoginPropsType = {\n    login: (email: string, password: string, rememberMe: boolean) => void\n    isAuth: boolean\n}\n\nconst Login = (props: LoginPropsType) => {\n    const onSubmit = (formData: FormLoginDataType) => {\n        props.login(formData.email, formData.password, formData.rememberMe)\n    }\n    if (props.isAuth) return <Redirect to={'/profile'}/>\n\n    return (\n        <div className={s.loginPage}>\n            <h1>LOGIN PAGE</h1>\n            <LoginReduxForm onSubmit={onSubmit}/>\n        </div>\n    )\n}\n\nexport default connect((state: AppStateType) => ({isAuth: state.auth.isAuth}), {login, logout}) (Login)\n\n\n","import {AppThunkType} from \"../redux-store\";\nimport {auth} from \"./auth-reducer\";\n\nconst SET_INITIALIZED = 'SET-INITIALIZED'\n\ntype initialApStateType = {\n    isInitialized: boolean\n}\nlet initialAppState: initialApStateType = {\n    isInitialized: false\n}\n\nconst appReducer = (state = initialAppState, action: ActionAppReducerType) => {\n    switch (action.type) {\n        case \"SET-INITIALIZED\":\n            return {...state, isInitialized: true}\n        default:\n            return state;\n    }\n}\n\n//Action creators\nexport type ActionAppReducerType = SetInitializedACType\n\ntype SetInitializedACType = ReturnType<typeof initializeSuccess>\nexport const initializeSuccess = () => ({type: SET_INITIALIZED} as const)\n\n//thunk\nexport const initializedApp = (): AppThunkType => dispatch => {\n    Promise.all([dispatch(auth())])\n        .then(() => dispatch(initializeSuccess()))\n}\n\nexport default appReducer;","import React from 'react';\nimport {Route, withRouter} from \"react-router\";\nimport s from \"./App.module.css\";\nimport Footer from \"./components/Footer/Footer\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport UsersContainer from './components/Users/UsersContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializedApp} from \"./redux/reducers/app-reducer\";\nimport {AppStateType} from \"./redux/redux-store\";\nimport {Preloader} from \"./common/preloader/Preloader\";\n\ntype AppPropsType = {\n    initializedApp: () => void\n    isInitialized: boolean\n}\n\nclass App extends React.Component<AppPropsType> {\n    componentDidMount() {\n        this.props.initializedApp()\n    }\n\n    render() {\n        return this.props.isInitialized ?\n            <div className={s.appWrapper}>\n                <HeaderContainer/>\n                <main>\n                    <Navbar/>\n                    <div className={s.content}>\n                            <Route path='/dialogs' component={DialogsContainer}/>\n                            <Route path='/users' component={UsersContainer}/>\n                            <Route path='/news' component={News}/>\n                            <Route path='/music' component={Music}/>\n                            <Route path='/settings' component={Settings}/>\n                            <Route path='/login' component={Login}/>\n                            <Route path='/profile/:userID?' component={ProfileContainer}/>\n                            \n                            <Route exact path='/SocialNetworkingSite' component={ProfileContainer}/>\n                            <Route exact path='/' component={ProfileContainer}/>\n                    </div>\n                </main>\n                <Footer/>\n            </div>\n            :\n            <Preloader/>\n    }\n}\n\nexport default compose<React.ComponentType>(\n    withRouter,\n    connect((state: AppStateType) => ({isInitialized: state.app.isInitialized}), {initializedApp}))(App);\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport profileReducer, {ActionProfileReducerType} from \"./reducers/profile-reducer\";\nimport dialogsReducer, {ActionDialogsReducerType} from \"./reducers/dialogs-reducer\";\nimport friendsReducer, {ActionFriendsReducerType} from \"./reducers/friends-reducer\";\nimport usersReducer, {ActionUsersReducerType} from \"./reducers/users-reducer\";\nimport authReducer, {ActionAuthReducerType} from \"./reducers/auth-reducer\";\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk'\nimport {FormAction, reducer as formReducer } from 'redux-form'\nimport appReducer from \"./reducers/app-reducer\";\n\nconst reducers = combineReducers({\n    profile: profileReducer,\n    dialogs: dialogsReducer,\n    friends: friendsReducer,\n    users: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n})\n\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nexport type AppStateType = ReturnType<typeof reducers>\nexport type AppActionsType = ActionAuthReducerType\n    | ActionDialogsReducerType\n    | ActionFriendsReducerType\n    | ActionProfileReducerType\n    | ActionUsersReducerType\n    | FormAction\n\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType, AppStateType, unknown, AppActionsType>\n\n// @ts-ignore\nwindow.state= store.getState()\n\nexport default store;","import reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport store from \"./redux/redux-store\";\nimport {Provider} from 'react-redux'\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>, document.getElementById('root'))\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__A0EJd\",\"postContent\":\"Post_postContent__dePS0\",\"avatar\":\"Post_avatar__1wBwP\",\"message\":\"Post_message__3raFK\",\"like\":\"Post_like__oViQh\",\"likesCount\":\"Post_likesCount__R9C9-\",\"button\":\"Post_button__2dr5U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsMessages\":\"DialogsMessages_dialogsMessages__3QP42\",\"messages\":\"DialogsMessages_messages__3fvU4\",\"sendBox\":\"DialogsMessages_sendBox__3hn7h\",\"textarea\":\"DialogsMessages_textarea__3H-Xz\",\"button\":\"DialogsMessages_button__2YtVE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"MyPosts_title__3q_Ko\",\"textarea\":\"MyPosts_textarea__3KLbu\",\"buttons\":\"MyPosts_buttons__2wUXL\",\"button\":\"MyPosts_button__2WbpQ\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Login_loginPage__-UEgp\",\"form\":\"Login_form__2mvFD\",\"rememberMe\":\"Login_rememberMe__2b5Bc\",\"button\":\"Login_button__3J267\",\"formSummaryError\":\"Login_formSummaryError__3cy0x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titlePage\":\"Users_titlePage__-qQrJ\",\"container\":\"Users_container__6F9oG\",\"friendBox\":\"Users_friendBox__2qTnN\",\"imgBox\":\"Users_imgBox__3UYsy\",\"img\":\"Users_img__3OuDf\",\"followBtn\":\"Users_followBtn__3m1nP\",\"btn\":\"Users_btn__9AIH5\",\"red\":\"Users_red__3k9_c\",\"green\":\"Users_green__2qlvh\",\"infoBox\":\"Users_infoBox__m1z_G\",\"infoBottom\":\"Users_infoBottom__3bLuP\",\"title\":\"Users_title__2S65O\",\"name\":\"Users_name__3Kys8\",\"description\":\"Users_description__QFQc5\",\"showBtn\":\"Users_showBtn__1c0oR\",\"activePage\":\"Users_activePage__28hh7\",\"pages\":\"Users_pages__2ZPtK\",\"disabled\":\"Users_disabled__vXtPd\",\"searchBox\":\"Users_searchBox__mpTlb\",\"search\":\"Users_search__hHCLT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__25f9o\",\"error\":\"FormsControls_error__1ZFL7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageBox\":\"Profile_imageBox__1et71\",\"arrow\":\"Profile_arrow__te3cM\",\"arrowRight\":\"Profile_arrowRight__3ifeA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activePage\":\"Pagination_activePage__326ou\",\"pages\":\"Pagination_pages__3AkbG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__3_SJs\",\"loginBox\":\"Header_loginBox__1Y8Fj\",\"logoutBtn\":\"Header_logoutBtn__WX_GL\",\"greeting\":\"Header_greeting__1RmOx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__3qKjq\",\"img\":\"Friend_img__3KzQt\",\"name\":\"Friend_name__33ANY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogPage\":\"Dialogs_dialogPage__3cRJY\",\"dialogsColumn\":\"Dialogs_dialogsColumn__y5DL0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3tDA2\",\"img\":\"DialogItem_img__30y70\",\"active\":\"DialogItem_active__2qnc5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__3rnam\",\"content\":\"App_content__3La4L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"FriendsPanel_title__2_gYF\",\"friends\":\"FriendsPanel_friends__3pdJ2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingGif\":\"Preloader_loadingGif__lFy-A\",\"loadingBox\":\"Preloader_loadingBox__1-RkT\"};"],"sourceRoot":""}